// Stats: "Auth" : '["0-Games", "1-Wins", "2-Draws", "3-Losses", "4-Winrate", "5-Goals", "6-Assists", "7-GK", "8-CS", "9-CS%", "10-Role", "11-Nick"]'

/* VARIABLES */

/* ROOM */

if (confirm("¿ Sala privada ?")) {
        txt = false;
    } else {
        txt = true;
    } 
    
    if (txt == false) 
    {console.log("Sala: privada")}
    else {console.log("Sala: publica")}

const roomName = "[🏆] 𝗙𝘂𝘁𝘀𝗮𝗹 𝘅𝟰 𝗦𝗲𝗮𝘀𝗼𝗻 𝟯 🎉"; // Nombre del host
const botName = "FF🌟"; // Esto ya no hace falta
const maxPlayers = 20; // Cantidad de jugadores limite
const roomPublic = txt; // Si es true, el host es publico, si es false, el host es privado
const geo = [{"code": "ni", "lat": -34.6, "lon": -58.4}]; // Geo
var adminPassword = "futsalCOMMUNITY1221"; // Pass de adm

const room = HBInit({ roomName: roomName, maxPlayers: maxPlayers, public: roomPublic, playerName: botName, geo: geo[0], noPlayer: true});

const scoreLimitClassic = 3;
const scoreLimitBig = 3;
const timeLimitClassic = 3;
const timeLimitBig = 4;

//BANS PERMANENTES//
const IpsBaneada1 = ["3138312E3230392E39352E3239"]; // Du de Andres Cuccitini
const IpsBaneada2 = ["3134322E34342E3137332E313438"]; // Pablo. Razón del ban: Tira Chinas
const IpsBaneada3 = ["3138312E39342E3232392E34"]; // Du de Thebest [perdonado por ahora]
const IpsBaneada4 = ["3135362E3134362E35392E3337"]; // Supuesto "Tira Host"
const IpsBaneada5 = ["3139302E3138382E3132352E323534"]; // FernandoCo Spam Intenso
const IpsBaneada6 = ["32342E3233322E31312E313739"]; // TRINIDADTOBAGO Spam Intenso
const IpsBaneada7 = ["3138392E35302E36322E3934"]; // Maricón de maradona murió

function PauseFun(player){
        function putPauseFun() { 
            room.pauseGame(true);
        }
        function unPauseFun() {
            room.pauseGame(false);
        }
        var tempTeam = player.team;
        var scores = room.getScores();
        
    if (player.team != 0 && !pauselist.has(tempTeam) && !Pausadores.includes(player.id) && scores != null){
         Pausadores.push(player.id);
         pauselist.add(tempTeam);
         room.sendAnnouncement(player.name + " Activó la pausa de 5 segundos. [!p]",null,0x00B4FF,'bold')
         putPauseFun();
         setTimeout(() => {unPauseFun(); room.sendAnnouncement("Sigue el juego!",null,0x00B4FF,'bold') },5000)
    }
    else if (Pausadores.includes(player.id)){room.sendAnnouncement("[X] " + player.name + " Tu equipo ya usó la pausa disponible.",player.id,0xFF0000,'bold')}
    else {room.sendAnnouncement("[X] Tu equipo ya uso la pausa disponible.",player.id,0xFF0000,'bold')}
    
    return false;
}

const pauselist = new Set();
var Pausadores = [];

var lastAdminCall = Date.now();
var millisecondsBetweenAdminCall = 180000; //milliseconds 180000 = 3 min

function sendAnnouncementToDiscord(message) {
    var newLastAdminCall = Date.now();
    if (Math.abs(lastAdminCall - newLastAdminCall) > millisecondsBetweenAdminCall){
		var http = new XMLHttpRequest();
		var url = "https://discord.com/api/webhooks/880243015548031007/qMvT8Gg15F6di10ASvX_w-XsIOA1HHvREGqSB-sCa5-8iMEaDjNiyG01GhxpBmoUgoSS";
		var params = JSON.stringify({ avatar_url: '',
									  username: 'Futsal Communitty',
									  content: message
									});
		
		http.open("POST", url, true);
		http.setRequestHeader("Content-type", "application/json; charset=utf-8");
		http.send(params);

		lastAdminCall = newLastAdminCall;
    }
}

const commands = {
    // Commands
    //FF🌟: [PV] Comandos : !creditos" !camisetas" !me", !games", !wins", !goals", !assists", !invictos", !afks", !mutes", !bans"".
    //FF🌟: [PV] Admin : !camisetas, !mute <duration = 3> #<id>, !unmute all/#<id>, !clearbans <number = all>, !slow <duration>, !endslow
	"!ayuda": showHelp,
        "!creditos": mostrarCreditos,
        "!p": PauseFun,

        // Camisetas Beta Fakeer
        "!camisetas": camisetasFun,
        "!blue_chi": CHITitularBlueFun,
        "!red_chi": CHITitularRedFun,
        "!blue_arg": ARGTitularBlueFun,
        "!red_arg": ARGTitularRedFun,
        "!blue_br": BRTitularBlueFun,
        "!red_br": BRTitularRedFun,
        "!red_col": COLTitularRedFun,
        "!blue_col": COLTitularBlueFun,
        "!red_uy": UYTitularRedFun,
        "!blue_uy": UYTitularBlueFun,
        "!red_rac": RACTitularRedFun,
        "!blue_rac": RACTitularBlueFun,
        "!red_riv": RIVTitularRedFun,
        "!blue_riv": RIVTitularBlueFun,
        "!red_boc": BOCTitularRedFun,
        "!blue_boc": BOCTitularBlueFun,
        "!red_slo": SLOTitularRedFun,
        "!blue_slo": SLOTitularBlueFun,
        "!red_vel": VELTitularRedFun,
        "!blue_vel": VELTitularBlueFun,
        "!red_ars": ARSTitularRedFun,
        "!blue_ars": ARSTitularBlueFun,
        "!red_dyj": DYJTitularRedFun,
        "!blue_dyj": DYJTitularBlueFun,
        "!red_ban": BANTitularRedFun,
        "!blue_ban": BANTitularBlueFun,
        "!red_lan": LANTitularRedFun,
        "!blue_lan": LANTitularBlueFun,
        "!red_argj": ARGJTitularRedFun,
        "!blue_argj": ARGJTitularBlueFun,
        "!red_hur": HURTitularRedFun,
        "!blue_hur": HURTitularBlueFun,
        //  rac,riv,boc,slo,vel,ars,dyj,ban,lan,argj,hur
        // Comandos
        "!discord": Discord,
	"!nv": nv, "!bb": nv,"!bye": nv,
	"!slow": slow,
	"!endslow": endSlow,

        // Size By Fakeer Beta
        "!size": changeOurSize,
	
	// Stats By Fakeer Beta
	"!rangos": listadeRangos,
        "!mostrarstats": mostrarStats,
	"!me": showMe,
	"!vallas": showCs,
	"!games": showGames,
	"!goals": showGoals,
    "!assists": showAsists,
    "!wins": wins,
	"!afk": afk,
	"!afks": showAfks, "!afklist": showAfks,
    "!bans": showBans, "!banlist": showBans,
    "!mutes": showMutes, "!mutelist": showMutes,
    
    "!clearbans": clearBans,

	// Admin
	"!removeadmin": removeAdmin, "!setplayer": removeAdmin,
    "!admin": giveClaim,
    "!vip": setVip,
    "!novip": removeVip,
    "!mute": mute,
	"!unmute": unmute,
	
	"top": changePlayer, "auto": changePlayer,
	"random": changePlayer, "rand": changePlayer,

	"1": changePlayer,
	"2": changePlayer,
	"3": changePlayer,
	"4": changePlayer,
	"5": changePlayer,
	"6": changePlayer,
	"7": changePlayer,
	"8": changePlayer,
	"9": changePlayer,
        "10": changePlayer,
        "11": changePlayer,
        "12": changePlayer,
        "13": changePlayer,
        "14": changePlayer,
        "15": changePlayer,
        "16": changePlayer
}

var isTimeAddedShown = false;
var isTimeAddedShowndos = false;
var isTimeAddedShowntres = false;
var isTimeAddedShowncuatro = false;
var isTimeAddedShowncinco = false;
var isTimeAddedShownseis = false;
var isTimeAddedShownquince = false;
var isTimeAddedShownsiete = false;
room.setTeamsLock(true);

/* STADIUM */

const playerRadius = 15;
var ballRadius = 6.25;
const triggerDistance = playerRadius + ballRadius + 0.01;
var aloneMap = '{"name":"𝙁𝙪𝙩𝙨𝙖𝙡 𝘾𝙤𝙢𝙢𝙪𝙣𝙞𝙩𝙮 ","width":420,"height":200,"spawnDistance":180,"bg":{"type":"hockey","width":368,"height":171,"kickOffRadius":65,"cornerRadius":0},"vertexes":[{"x":-368,"y":171,"trait":"ballArea","cMask":["ball"],"bCoef":1},{"x":-368,"y":65,"trait":"ballArea","cMask":["ball"],"bCoef":1},{"x":-368,"y":-65,"trait":"ballArea","cMask":["ball"],"bCoef":1},{"x":-368,"y":-171,"trait":"ballArea","bCoef":1,"cMask":["ball"]},{"x":368,"y":171,"trait":"ballArea","cMask":["ball"],"bCoef":1},{"x":368,"y":65,"trait":"ballArea","cMask":["ball"],"bCoef":1},{"x":368,"y":-65,"trait":"ballArea","cMask":["ball"],"bCoef":1},{"x":368,"y":-171,"trait":"ballArea","cMask":["ball"],"bCoef":1},{"x":0,"y":65,"trait":"line"},{"x":0,"y":-65,"trait":"line"},{"bCoef":1,"trait":"ballArea","x":368,"y":171},{"bCoef":1,"trait":"ballArea","x":368,"y":-171},{"bCoef":0,"trait":"line","x":0,"y":171},{"bCoef":0,"trait":"line","x":0,"y":-171},{"x":0,"y":65,"trait":"line"},{"x":0,"y":-65,"trait":"line"},{"x":377,"y":-65,"trait":"line","cMask":["ball"],"bCoef":1},{"x":377,"y":-171,"trait":"ballArea","cMask":["ball"],"bCoef":1},{"x":-377,"y":-65,"trait":"line","cMask":["ball"],"bCoef":1},{"x":-377,"y":-171,"trait":"ballArea","cMask":["ball"],"bCoef":1},{"x":-377,"y":65,"trait":"line","cMask":["ball"],"bCoef":1},{"x":-377,"y":171,"trait":"ballArea","cMask":["ball"],"bCoef":1},{"x":377,"y":65,"trait":"line","cMask":["ball"],"bCoef":1},{"x":377,"y":171,"trait":"ballArea","cMask":["ball"],"bCoef":1},{"x":0,"y":65,"trait":"line"},{"x":0,"y":-65,"trait":"line"},{"x":-368.53340356886,"y":-62.053454903872,"cMask":["red","blue","ball"],"trait":"goalNet","curve":0,"color":"F8F8F8","pos":[-700,-80]},{"x":-400.05760771891,"y":-62.053454903872,"cMask":["red","blue","ball"],"trait":"goalNet","curve":0,"color":"F8F8F8","pos":[-700,-80]},{"x":-400.05760771891,"y":64.043361696331,"cMask":["red","blue","ball"],"trait":"goalNet","curve":0,"color":"F8F8F8","pos":[-700,80]},{"x":-368.53340356886,"y":64.043361696331,"cMask":["red","blue","ball"],"trait":"goalNet","curve":0,"color":"F8F8F8","pos":[-700,80]},{"x":368.09926357786,"y":63.94882446641,"cMask":["red","blue","ball"],"trait":"goalNet","curve":0,"color":"F8F8F8","pos":[-700,-80]},{"x":400,"y":64,"cMask":["red","blue","ball"],"trait":"goalNet","curve":0,"color":"F8F8F8","pos":[-700,-80]},{"x":400,"y":-61.927767991658,"cMask":["red","blue","ball"],"trait":"goalNet","curve":0,"color":"F8F8F8","pos":[-700,80]},{"x":368.9681846993,"y":-62.144998272018,"cMask":["red","blue","ball"],"trait":"goalNet","curve":0,"color":"F8F8F8","pos":[-700,80]},{"x":-368,"y":-142.37229643041,"bCoef":0.1,"trait":"line","color":"F8F8F8","curve":-90},{"x":-260.90035258157,"y":-50.168480548544,"bCoef":0.1,"trait":"line","color":"F8F8F8","curve":0},{"x":-368,"y":-160.81305960678,"bCoef":0.1,"trait":"line","curve":-90},{"x":-358.5379338963,"y":-171,"bCoef":0.1,"trait":"line","curve":-90},{"x":-368,"y":141.33175243687,"bCoef":0.1,"trait":"line","color":"F8F8F8","curve":90},{"x":-260.90035258157,"y":49.127936555002,"bCoef":0.1,"trait":"line","color":"F8F8F8","curve":0},{"x":-368,"y":159.77251561324,"bCoef":0.1,"trait":"line","curve":90},{"x":-358.5379338963,"y":171,"bCoef":0.1,"trait":"line","curve":90},{"x":368,"y":159.77251561324,"bCoef":0.1,"trait":"line","curve":-90},{"x":358.36266315432,"y":171,"bCoef":0.1,"trait":"line","curve":-90},{"x":368,"y":-160.81305960678,"bCoef":0.1,"trait":"line","curve":90},{"x":358.36266315432,"y":-171,"bCoef":0.1,"trait":"line","curve":90},{"x":368,"y":-142.37229643041,"bCoef":0.1,"trait":"line","color":"F8F8F8","curve":90},{"x":260.72508183959,"y":-50.168480548544,"bCoef":0.1,"trait":"line","color":"F8F8F8","curve":90},{"x":368,"y":141.33175243687,"bCoef":0.1,"trait":"line","color":"F8F8F8","curve":-90},{"x":260.72508183959,"y":49.127936555002,"bCoef":0.1,"trait":"line","color":"F8F8F8","curve":-90},{"x":260.72508183959,"y":-50.168480548544,"bCoef":0.1,"trait":"line","color":"F8F8F8","curve":0},{"x":260.72508183959,"y":49.127936555002,"bCoef":0.1,"trait":"line","color":"F8F8F8","curve":0},{"x":-250.86909422732,"y":-1.2295321189394,"bCoef":0.1,"trait":"line","curve":180},{"x":-250.86909422732,"y":0.18898812539692,"bCoef":0.1,"trait":"line","curve":180},{"x":-250.86909422732,"y":-2.6480523632758,"bCoef":0.1,"trait":"line","curve":180},{"x":-250.86909422732,"y":1.6075083697333,"bCoef":0.1,"trait":"line","curve":180},{"x":-250.86909422732,"y":0.89824824756514,"bCoef":0.1,"trait":"line","curve":180},{"x":-250.86909422732,"y":-1.9387922411076,"bCoef":0.1,"trait":"line","curve":180},{"x":-250.86909422732,"y":1.9621384308174,"bCoef":0.1,"trait":"line","curve":180},{"x":-250.86909422732,"y":-3.0026824243599,"bCoef":0.1,"trait":"line","curve":180},{"x":250.69382348534,"y":-1.2295321189394,"bCoef":0.1,"trait":"line","curve":180},{"x":250.69382348534,"y":0.18898812539692,"bCoef":0.1,"trait":"line","curve":180},{"x":250.69382348534,"y":-2.6480523632758,"bCoef":0.1,"trait":"line","curve":180},{"x":250.69382348534,"y":1.6075083697333,"bCoef":0.1,"trait":"line","curve":180},{"x":250.69382348534,"y":0.89824824756514,"bCoef":0.1,"trait":"line","curve":180},{"x":250.69382348534,"y":-1.9387922411076,"bCoef":0.1,"trait":"line","curve":180},{"x":250.69382348534,"y":1.9621384308174,"bCoef":0.1,"trait":"line","curve":180},{"x":250.69382348534,"y":-3.0026824243599,"bCoef":0.1,"trait":"line","curve":180},{"x":-185.66591492467,"y":-1.2295321189394,"bCoef":0.1,"trait":"line","curve":180},{"x":-185.66591492467,"y":0.18898812539692,"bCoef":0.1,"trait":"line","curve":180},{"x":-185.66591492467,"y":-2.6480523632758,"bCoef":0.1,"trait":"line","curve":180},{"x":-185.66591492467,"y":1.6075083697333,"bCoef":0.1,"trait":"line","curve":180},{"x":-185.66591492467,"y":0.89824824756514,"bCoef":0.1,"trait":"line","curve":180},{"x":-185.66591492467,"y":-1.9387922411076,"bCoef":0.1,"trait":"line","curve":180},{"x":-185.66591492467,"y":1.9621384308174,"bCoef":0.1,"trait":"line","curve":180},{"x":-185.66591492467,"y":-3.0026824243599,"bCoef":0.1,"trait":"line","curve":180},{"x":185.49064418269,"y":-1.2295321189394,"bCoef":0.1,"trait":"line","curve":180},{"x":185.49064418269,"y":0.18898812539692,"bCoef":0.1,"trait":"line","curve":180},{"x":185.49064418269,"y":-2.6480523632758,"bCoef":0.1,"trait":"line","curve":180},{"x":185.49064418269,"y":1.6075083697333,"bCoef":0.1,"trait":"line","curve":180},{"x":185.49064418269,"y":0.89824824756514,"bCoef":0.1,"trait":"line","curve":180},{"x":185.49064418269,"y":-1.9387922411076,"bCoef":0.1,"trait":"line","curve":180},{"x":185.49064418269,"y":1.9621384308174,"bCoef":0.1,"trait":"line","curve":180},{"x":185.49064418269,"y":-3.0026824243599,"bCoef":0.1,"trait":"line","curve":180},{"x":-160.58776903904,"y":-159.39453936245,"bCoef":0.1,"trait":"line"},{"x":-160.58776903904,"y":-182.09086327183,"bCoef":0.1,"trait":"line"},{"x":-80.337702205015,"y":-159.39453936245,"bCoef":0.1,"trait":"line"},{"x":-80.337702205015,"y":-182.09086327183,"bCoef":0.1,"trait":"line"},{"x":160.41249829706,"y":-159.39453936245,"bCoef":0.1,"trait":"line"},{"x":160.41249829706,"y":-182.09086327183,"bCoef":0.1,"trait":"line"},{"x":80.162431463036,"y":-159.39453936245,"bCoef":0.1,"trait":"line"},{"x":80.162431463036,"y":-182.09086327183,"bCoef":0.1,"trait":"line"},{"x":-254.88159756902,"y":-171,"bCoef":0.1,"trait":"line"},{"x":-254.88159756902,"y":-182.09086327183,"bCoef":0.1,"trait":"line"},{"x":-371.91294503531,"y":-87.759267023458,"bCoef":0.1,"trait":"line"},{"x":-384.61920561736,"y":-87.759267023458,"bCoef":0.1,"trait":"line"},{"x":371.73767429333,"y":-87.759267023458,"bCoef":0.1,"trait":"line"},{"x":384.44393487538,"y":-87.759267023458,"bCoef":0.1,"trait":"line"},{"x":-371.91294503531,"y":86.718723029916,"bCoef":0.1,"trait":"line"},{"x":-384.61920561736,"y":86.718723029916,"bCoef":0.1,"trait":"line"},{"x":371.73767429333,"y":86.718723029916,"bCoef":0.1,"trait":"line"},{"x":384.44393487538,"y":86.718723029916,"bCoef":0.1,"trait":"line"},{"x":-254.88159756902,"y":171,"bCoef":0.1,"trait":"line"},{"x":-254.88159756902,"y":181.05031927829,"bCoef":0.1,"trait":"line"},{"x":254.70632682704,"y":-171,"bCoef":0.1,"trait":"line"},{"x":254.70632682704,"y":-182.09086327183,"bCoef":0.1,"trait":"line"},{"x":254.70632682704,"y":171,"bCoef":0.1,"trait":"line"},{"x":254.70632682704,"y":181.05031927829,"bCoef":0.1,"trait":"line"},{"x":369,"y":65,"trait":"ballArea","cMask":["ball"],"bCoef":1,"vis":false},{"x":369,"y":-65,"trait":"ballArea","cMask":["ball"],"bCoef":1,"vis":false},{"x":-370,"y":65,"trait":"ballArea","cMask":["ball"],"bCoef":1,"vis":false},{"x":-370,"y":-65,"trait":"ballArea","cMask":["ball"],"bCoef":1,"vis":false},{"x":371,"y":-65,"trait":"ballArea","cMask":["ball"],"bCoef":0,"_selected":"segment"},{"x":371,"y":-171,"trait":"ballArea","cMask":["ball"],"bCoef":0,"_selected":"segment"},{"x":371,"y":65,"trait":"ballArea","cMask":["ball"],"bCoef":0},{"x":371,"y":171,"trait":"ballArea","cMask":["ball"],"bCoef":0},{"x":-371,"y":65,"trait":"ballArea","cMask":["ball"],"bCoef":0},{"x":-371,"y":171,"trait":"ballArea","cMask":["ball"],"bCoef":0},{"x":-371,"y":-65,"trait":"ballArea","cMask":["ball"],"bCoef":0},{"x":-371,"y":-171,"trait":"ballArea","cMask":["ball"],"bCoef":0}],"segments":[{"v0":0,"v1":1,"trait":"ballArea"},{"v0":2,"v1":3,"trait":"ballArea"},{"v0":4,"v1":5,"trait":"ballArea"},{"v0":6,"v1":7,"trait":"ballArea"},{"v0":8,"v1":9,"trait":"line","curve":180,"cGroup":["blueKO"]},{"v0":8,"v1":9,"trait":"line","curve":-180,"cGroup":["redKO"]},{"vis":true,"color":"FFFFFF","bCoef":1,"trait":"ballArea","v0":1,"v1":0,"cMask":["ball"],"x":-368},{"vis":true,"color":"FFFFFF","bCoef":1,"trait":"ballArea","v0":5,"v1":4,"cMask":["ball"],"x":368},{"vis":true,"color":"FFFFFF","bCoef":1,"trait":"ballArea","v0":2,"v1":3,"cMask":["ball"],"x":-368},{"vis":true,"color":"FFFFFF","bCoef":1,"trait":"ballArea","v0":6,"v1":7,"cMask":["ball"],"x":368},{"vis":true,"color":"FFFFFF","bCoef":1,"trait":"ballArea","v0":0,"v1":10,"y":171},{"vis":true,"color":"FFFFFF","bCoef":1,"trait":"ballArea","v0":3,"v1":11,"y":-171},{"curve":0,"vis":true,"color":"FFFFFF","bCoef":0,"trait":"line","v0":12,"v1":13},{"curve":-180,"vis":true,"color":"FFFFFF","bCoef":0,"trait":"line","v0":9,"v1":8},{"curve":180,"vis":true,"color":"FFFFFF","bCoef":0,"trait":"line","v0":15,"v1":14},{"curve":0,"vis":true,"color":"FFFFFF","bCoef":1,"trait":"ballArea","v0":2,"v1":1},{"curve":0,"vis":true,"color":"FFFFFF","bCoef":1,"trait":"ballArea","v0":6,"v1":5},{"vis":false,"color":"FFFFFF","bCoef":1,"trait":"ballArea","v0":16,"v1":17,"cMask":["ball"],"x":330},{"vis":false,"color":"FFFFFF","bCoef":1,"trait":"ballArea","v0":18,"v1":19,"cMask":["ball"],"x":-330},{"vis":false,"color":"FFFFFF","bCoef":1,"trait":"ballArea","v0":20,"v1":21,"cMask":["ball"],"x":-330},{"vis":false,"color":"FFFFFF","bCoef":1,"trait":"ballArea","v0":22,"v1":23,"cMask":["ball"],"x":330},{"v0":26,"v1":27,"curve":0,"color":"F8F8F8","cMask":["red","blue","ball"],"trait":"goalNet","pos":[-700,-80],"y":-80},{"v0":27,"v1":28,"color":"F8F8F8","cMask":["red","blue","ball"],"trait":"goalNet","x":-590},{"v0":28,"v1":29,"curve":0,"color":"F8F8F8","cMask":["red","blue","ball"],"trait":"goalNet","pos":[-700,80],"y":80},{"v0":30,"v1":31,"curve":0,"color":"F8F8F8","cMask":["red","blue","ball"],"trait":"goalNet","pos":[-700,-80],"y":-80},{"v0":31,"v1":32,"color":"F8F8F8","cMask":["red","blue","ball"],"trait":"goalNet","x":-590},{"v0":32,"v1":33,"curve":0,"color":"F8F8F8","cMask":["red","blue","ball"],"trait":"goalNet","pos":[-700,80],"y":80},{"v0":34,"v1":35,"curve":94.0263701017,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line"},{"v0":37,"v1":36,"curve":86.632306418889,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line"},{"v0":38,"v1":39,"curve":-94.026370101699,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line"},{"v0":35,"v1":39,"curve":0,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line"},{"v0":41,"v1":40,"curve":-86.632306418888,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line"},{"v0":43,"v1":42,"curve":86.632306418884,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line"},{"v0":45,"v1":44,"curve":-86.632306418899,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line"},{"v0":46,"v1":47,"curve":-94.026370101699,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line"},{"v0":48,"v1":49,"curve":94.026370101699,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line"},{"v0":50,"v1":51,"curve":0,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":390},{"v0":53,"v1":52,"curve":-180.00692920292,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-375},{"v0":52,"v1":53,"curve":-180.00218240614,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-375},{"v0":55,"v1":54,"curve":-179.64823645332,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-375},{"v0":54,"v1":55,"curve":-180.35758668147,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-375},{"v0":57,"v1":56,"curve":-180.02357323962,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-375},{"v0":56,"v1":57,"curve":-180.00924102399,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-375},{"v0":59,"v1":58,"curve":-180.06885755885,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-375},{"v0":58,"v1":59,"curve":-180.02948353257,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-375},{"v0":61,"v1":60,"curve":-179.99869069543,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":375},{"v0":60,"v1":61,"curve":-179.99939258776,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":375},{"v0":63,"v1":62,"curve":-180.08826047163,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":375},{"v0":62,"v1":63,"curve":-179.91186753664,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":375},{"v0":65,"v1":64,"curve":-179.99528711105,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":375},{"v0":64,"v1":65,"curve":-179.99743836358,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":375},{"v0":67,"v1":66,"curve":-179.98626041101,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":375},{"v0":66,"v1":67,"curve":-179.99175181595,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":375},{"v0":69,"v1":68,"curve":-180.04715562398,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-277.5},{"v0":68,"v1":69,"curve":-179.95294709391,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-277.5},{"v0":71,"v1":70,"curve":-179.95715750564,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-277.5},{"v0":70,"v1":71,"curve":-179.89943871875,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-277.5},{"v0":73,"v1":72,"curve":-179.94773754738,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-277.5},{"v0":72,"v1":73,"curve":-179.98221351296,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-277.5},{"v0":75,"v1":74,"curve":-180.4151727218,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-277.5},{"v0":74,"v1":75,"curve":-179.58764458796,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-277.5},{"v0":77,"v1":76,"curve":-180.00086646359,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":277.5},{"v0":76,"v1":77,"curve":-180.01965986376,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":277.5},{"v0":79,"v1":78,"curve":-180.03532601389,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":277.5},{"v0":78,"v1":79,"curve":-179.99380079,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":277.5},{"v0":81,"v1":80,"curve":-180.0044468452,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":277.5},{"v0":80,"v1":81,"curve":-180.01386779847,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":277.5},{"v0":83,"v1":82,"curve":-180.05158287563,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":277.5},{"v0":82,"v1":83,"curve":-180.01212223878,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":277.5},{"v0":84,"v1":85,"curve":0,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-240},{"v0":86,"v1":87,"curve":0,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-120},{"v0":88,"v1":89,"curve":0,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":240},{"v0":90,"v1":91,"curve":0,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":120},{"v0":92,"v1":93,"curve":0,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-381},{"v0":94,"v1":95,"curve":0,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-240,"y":123},{"v0":96,"v1":97,"curve":0,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-240,"y":123},{"v0":98,"v1":99,"curve":0,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-240,"y":-123},{"v0":100,"v1":101,"curve":0,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-240,"y":-123},{"v0":102,"v1":103,"curve":0,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-381},{"v0":104,"v1":105,"curve":0,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":381},{"v0":106,"v1":107,"curve":0,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":381},{"curve":0,"vis":false,"color":"FFFFFF","bCoef":1,"trait":"ballArea","v0":109,"v1":108,"x":369},{"curve":0,"vis":false,"color":"FFFFFF","bCoef":1,"trait":"ballArea","v0":111,"v1":110,"x":-370},{"vis":false,"color":"FFFFFF","bCoef":0,"trait":"ballArea","v0":112,"v1":113,"cMask":["ball"],"x":371,"_selected":true},{"vis":false,"color":"FFFFFF","bCoef":0,"trait":"ballArea","v0":114,"v1":115,"cMask":["ball"],"x":371},{"vis":false,"color":"FFFFFF","bCoef":0,"trait":"ballArea","v0":116,"v1":117,"cMask":["ball"],"x":-371},{"vis":false,"color":"FFFFFF","bCoef":0,"trait":"ballArea","v0":118,"v1":119,"cMask":["ball"],"x":-371}],"goals":[{"p0":[-374.25,-62.053454903872],"p1":[-374.25,64.043361696331],"team":"red"},{"p0":[374.25,62],"p1":[374.25,-62],"team":"blue"}],"discs":[{"radius":3.9405255187564,"pos":[-368.53340356886,64.043361696331],"color":"6666CC","trait":"goalPost","y":80},{"radius":3.9405255187564,"pos":[-368.53340356886,-62.053454903872],"color":"6666CC","trait":"goalPost","y":-80,"x":-560},{"radius":3.9405255187564,"pos":[368.9681846993,-62.144998272018],"color":"6666CC","trait":"goalPost","y":80},{"radius":3.9405255187564,"pos":[368.09926357786,63.94882446641],"color":"6666CC","trait":"goalPost","y":-80,"x":-560},{"radius":3,"invMass":0,"pos":[-368,-171],"color":"FFCC00","bCoef":0.1,"trait":"line"},{"radius":3,"invMass":0,"pos":[-368,171],"color":"FFCC00","bCoef":0.1,"trait":"line"},{"radius":3,"invMass":0,"pos":[368,171],"color":"FFCC00","bCoef":0.1,"trait":"line"},{"radius":3,"invMass":0,"pos":[368,-171],"color":"FFCC00","bCoef":0.1,"trait":"line"}],"planes":[{"normal":[0,1],"dist":-171,"trait":"ballArea"},{"normal":[0,-1],"dist":-171,"trait":"ballArea"},{"normal":[0,1],"dist":-200,"bCoef":0.2,"cMask":["all"]},{"normal":[0,-1],"dist":-200,"bCoef":0.2,"cMask":["all"]},{"normal":[1,0],"dist":-420,"bCoef":0.2,"cMask":["all"]},{"normal":[-1,0],"dist":-420,"bCoef":0.2,"cMask":["all"]}],"traits":{"ballArea":{"vis":false,"bCoef":1,"cMask":["ball"]},"goalPost":{"radius":8,"invMass":0,"bCoef":1},"goalNet":{"vis":true,"bCoef":0.1,"cMask":["all"]},"kickOffBarrier":{"vis":false,"bCoef":0.1,"cGroup":["redKO","blueKO"],"cMask":["red","blue"]},"line":{"vis":true,"bCoef":0,"cMask":[""]},"arco":{"radius":2,"cMask":["n\/d"],"color":"cccccc"}},"playerPhysics":{"acceleration":0.11,"kickingAcceleration":0.083,"kickStrength":5,"bCoef":0},"ballPhysics":{"radius":6.25,"color":"FFCC00","bCoef":0.4,"invMass":1.5,"damping":0.99}}'
var classicMap = '{"name":"𝙁𝙪𝙩𝙨𝙖𝙡 𝘾𝙤𝙢𝙢𝙪𝙣𝙞𝙩𝙮 ","width":420,"height":200,"spawnDistance":180,"bg":{"type":"hockey","width":368,"height":171,"kickOffRadius":65,"cornerRadius":0},"vertexes":[{"x":-368,"y":171,"trait":"ballArea","cMask":["ball"],"bCoef":1},{"x":-368,"y":65,"trait":"ballArea","cMask":["ball"],"bCoef":1},{"x":-368,"y":-65,"trait":"ballArea","cMask":["ball"],"bCoef":1},{"x":-368,"y":-171,"trait":"ballArea","bCoef":1,"cMask":["ball"]},{"x":368,"y":171,"trait":"ballArea","cMask":["ball"],"bCoef":1},{"x":368,"y":65,"trait":"ballArea","cMask":["ball"],"bCoef":1},{"x":368,"y":-65,"trait":"ballArea","cMask":["ball"],"bCoef":1},{"x":368,"y":-171,"trait":"ballArea","cMask":["ball"],"bCoef":1},{"x":0,"y":65,"trait":"kickOffBarrier"},{"x":0,"y":-65,"trait":"line"},{"bCoef":1,"trait":"ballArea","x":368,"y":171},{"bCoef":1,"trait":"ballArea","x":368,"y":-171},{"bCoef":0,"trait":"line","x":0,"y":171},{"bCoef":0,"trait":"line","x":0,"y":-171},{"x":0,"y":65,"trait":"kickOffBarrier"},{"x":0,"y":-65,"trait":"kickOffBarrier"},{"x":377,"y":-65,"trait":"line","cMask":["ball"],"bCoef":1},{"x":377,"y":-171,"trait":"ballArea","cMask":["ball"],"bCoef":1},{"x":-377,"y":-65,"trait":"line","cMask":["ball"],"bCoef":1},{"x":-377,"y":-171,"trait":"ballArea","cMask":["ball"],"bCoef":1},{"x":-377,"y":65,"trait":"line","cMask":["ball"],"bCoef":1},{"x":-377,"y":171,"trait":"ballArea","cMask":["ball"],"bCoef":1},{"x":377,"y":65,"trait":"line","cMask":["ball"],"bCoef":1},{"x":377,"y":171,"trait":"ballArea","cMask":["ball"],"bCoef":1},{"x":0,"y":199,"trait":"kickOffBarrier"},{"x":0,"y":65,"trait":"kickOffBarrier"},{"x":0,"y":-65,"trait":"kickOffBarrier"},{"x":0,"y":-199,"trait":"kickOffBarrier"},{"x":-368.53340356886,"y":-62.053454903872,"cMask":["red","blue","ball"],"trait":"goalNet","curve":0,"color":"F8F8F8","pos":[-700,-80]},{"x":-400.05760771891,"y":-62.053454903872,"cMask":["red","blue","ball"],"trait":"goalNet","curve":0,"color":"F8F8F8","pos":[-700,-80]},{"x":-400.05760771891,"y":64.043361696331,"cMask":["red","blue","ball"],"trait":"goalNet","curve":0,"color":"F8F8F8","pos":[-700,80]},{"x":-368.53340356886,"y":64.043361696331,"cMask":["red","blue","ball"],"trait":"goalNet","curve":0,"color":"F8F8F8","pos":[-700,80]},{"x":368.09926357786,"y":63.94882446641,"cMask":["red","blue","ball"],"trait":"goalNet","curve":0,"color":"F8F8F8","pos":[-700,-80]},{"x":400,"y":64,"cMask":["red","blue","ball"],"trait":"goalNet","curve":0,"color":"F8F8F8","pos":[-700,-80]},{"x":400,"y":-61.927767991658,"cMask":["red","blue","ball"],"trait":"goalNet","curve":0,"color":"F8F8F8","pos":[-700,80]},{"x":368.9681846993,"y":-62.144998272018,"cMask":["red","blue","ball"],"trait":"goalNet","curve":0,"color":"F8F8F8","pos":[-700,80]},{"x":-368,"y":-142.37229643041,"bCoef":0.1,"trait":"line","color":"F8F8F8","curve":-90},{"x":-260.90035258157,"y":-50.168480548544,"bCoef":0.1,"trait":"line","color":"F8F8F8","curve":0},{"x":-368,"y":-160.81305960678,"bCoef":0.1,"trait":"line","curve":-90},{"x":-358.5379338963,"y":-171,"bCoef":0.1,"trait":"line","curve":-90},{"x":-368,"y":141.33175243687,"bCoef":0.1,"trait":"line","color":"F8F8F8","curve":90},{"x":-260.90035258157,"y":49.127936555002,"bCoef":0.1,"trait":"line","color":"F8F8F8","curve":0},{"x":-368,"y":159.77251561324,"bCoef":0.1,"trait":"line","curve":90},{"x":-358.5379338963,"y":171,"bCoef":0.1,"trait":"line","curve":90},{"x":368,"y":159.77251561324,"bCoef":0.1,"trait":"line","curve":-90},{"x":358.36266315432,"y":171,"bCoef":0.1,"trait":"line","curve":-90},{"x":368,"y":-160.81305960678,"bCoef":0.1,"trait":"line","curve":90},{"x":358.36266315432,"y":-171,"bCoef":0.1,"trait":"line","curve":90},{"x":368,"y":-142.37229643041,"bCoef":0.1,"trait":"line","color":"F8F8F8","curve":90},{"x":260.72508183959,"y":-50.168480548544,"bCoef":0.1,"trait":"line","color":"F8F8F8","curve":90},{"x":368,"y":141.33175243687,"bCoef":0.1,"trait":"line","color":"F8F8F8","curve":-90},{"x":260.72508183959,"y":49.127936555002,"bCoef":0.1,"trait":"line","color":"F8F8F8","curve":-90},{"x":260.72508183959,"y":-50.168480548544,"bCoef":0.1,"trait":"line","color":"F8F8F8","curve":0},{"x":260.72508183959,"y":49.127936555002,"bCoef":0.1,"trait":"line","color":"F8F8F8","curve":0},{"x":-250.86909422732,"y":-1.2295321189394,"bCoef":0.1,"trait":"line","curve":180},{"x":-250.86909422732,"y":0.18898812539692,"bCoef":0.1,"trait":"line","curve":180},{"x":-250.86909422732,"y":-2.6480523632758,"bCoef":0.1,"trait":"line","curve":180},{"x":-250.86909422732,"y":1.6075083697333,"bCoef":0.1,"trait":"line","curve":180},{"x":-250.86909422732,"y":0.89824824756514,"bCoef":0.1,"trait":"line","curve":180},{"x":-250.86909422732,"y":-1.9387922411076,"bCoef":0.1,"trait":"line","curve":180},{"x":-250.86909422732,"y":1.9621384308174,"bCoef":0.1,"trait":"line","curve":180},{"x":-250.86909422732,"y":-3.0026824243599,"bCoef":0.1,"trait":"line","curve":180},{"x":250.69382348534,"y":-1.2295321189394,"bCoef":0.1,"trait":"line","curve":180},{"x":250.69382348534,"y":0.18898812539692,"bCoef":0.1,"trait":"line","curve":180},{"x":250.69382348534,"y":-2.6480523632758,"bCoef":0.1,"trait":"line","curve":180},{"x":250.69382348534,"y":1.6075083697333,"bCoef":0.1,"trait":"line","curve":180},{"x":250.69382348534,"y":0.89824824756514,"bCoef":0.1,"trait":"line","curve":180},{"x":250.69382348534,"y":-1.9387922411076,"bCoef":0.1,"trait":"line","curve":180},{"x":250.69382348534,"y":1.9621384308174,"bCoef":0.1,"trait":"line","curve":180},{"x":250.69382348534,"y":-3.0026824243599,"bCoef":0.1,"trait":"line","curve":180},{"x":-185.66591492467,"y":-1.2295321189394,"bCoef":0.1,"trait":"line","curve":180},{"x":-185.66591492467,"y":0.18898812539692,"bCoef":0.1,"trait":"line","curve":180},{"x":-185.66591492467,"y":-2.6480523632758,"bCoef":0.1,"trait":"line","curve":180},{"x":-185.66591492467,"y":1.6075083697333,"bCoef":0.1,"trait":"line","curve":180},{"x":-185.66591492467,"y":0.89824824756514,"bCoef":0.1,"trait":"line","curve":180},{"x":-185.66591492467,"y":-1.9387922411076,"bCoef":0.1,"trait":"line","curve":180},{"x":-185.66591492467,"y":1.9621384308174,"bCoef":0.1,"trait":"line","curve":180},{"x":-185.66591492467,"y":-3.0026824243599,"bCoef":0.1,"trait":"line","curve":180},{"x":185.49064418269,"y":-1.2295321189394,"bCoef":0.1,"trait":"line","curve":180},{"x":185.49064418269,"y":0.18898812539692,"bCoef":0.1,"trait":"line","curve":180},{"x":185.49064418269,"y":-2.6480523632758,"bCoef":0.1,"trait":"line","curve":180},{"x":185.49064418269,"y":1.6075083697333,"bCoef":0.1,"trait":"line","curve":180},{"x":185.49064418269,"y":0.89824824756514,"bCoef":0.1,"trait":"line","curve":180},{"x":185.49064418269,"y":-1.9387922411076,"bCoef":0.1,"trait":"line","curve":180},{"x":185.49064418269,"y":1.9621384308174,"bCoef":0.1,"trait":"line","curve":180},{"x":185.49064418269,"y":-3.0026824243599,"bCoef":0.1,"trait":"line","curve":180},{"x":-160.58776903904,"y":-159.39453936245,"bCoef":0.1,"trait":"line"},{"x":-160.58776903904,"y":-182.09086327183,"bCoef":0.1,"trait":"line"},{"x":-80.337702205015,"y":-159.39453936245,"bCoef":0.1,"trait":"line"},{"x":-80.337702205015,"y":-182.09086327183,"bCoef":0.1,"trait":"line"},{"x":160.41249829706,"y":-159.39453936245,"bCoef":0.1,"trait":"line"},{"x":160.41249829706,"y":-182.09086327183,"bCoef":0.1,"trait":"line"},{"x":80.162431463036,"y":-159.39453936245,"bCoef":0.1,"trait":"line"},{"x":80.162431463036,"y":-182.09086327183,"bCoef":0.1,"trait":"line"},{"x":-254.88159756902,"y":-171,"bCoef":0.1,"trait":"line"},{"x":-254.88159756902,"y":-182.09086327183,"bCoef":0.1,"trait":"line"},{"x":-371.91294503531,"y":-87.759267023458,"bCoef":0.1,"trait":"line"},{"x":-384.61920561736,"y":-87.759267023458,"bCoef":0.1,"trait":"line"},{"x":371.73767429333,"y":-87.759267023458,"bCoef":0.1,"trait":"line"},{"x":384.44393487538,"y":-87.759267023458,"bCoef":0.1,"trait":"line"},{"x":-371.91294503531,"y":86.718723029916,"bCoef":0.1,"trait":"line"},{"x":-384.61920561736,"y":86.718723029916,"bCoef":0.1,"trait":"line"},{"x":371.73767429333,"y":86.718723029916,"bCoef":0.1,"trait":"line"},{"x":384.44393487538,"y":86.718723029916,"bCoef":0.1,"trait":"line"},{"x":-254.88159756902,"y":171,"bCoef":0.1,"trait":"line"},{"x":-254.88159756902,"y":181.05031927829,"bCoef":0.1,"trait":"line"},{"x":254.70632682704,"y":-171,"bCoef":0.1,"trait":"line"},{"x":254.70632682704,"y":-182.09086327183,"bCoef":0.1,"trait":"line"},{"x":254.70632682704,"y":171,"bCoef":0.1,"trait":"line"},{"x":254.70632682704,"y":181.05031927829,"bCoef":0.1,"trait":"line"},{"x":377,"y":-65,"trait":"line","cMask":["ball"],"bCoef":1},{"x":377,"y":-171,"trait":"ballArea","cMask":["ball"],"bCoef":1},{"x":-377,"y":-65,"trait":"line","cMask":["ball"],"bCoef":1},{"x":-377,"y":-171,"trait":"ballArea","cMask":["ball"],"bCoef":1},{"x":-377,"y":65,"trait":"line","cMask":["ball"],"bCoef":1},{"x":-377,"y":171,"trait":"ballArea","cMask":["ball"],"bCoef":1},{"x":377,"y":65,"trait":"line","cMask":["ball"],"bCoef":1},{"x":377,"y":171,"trait":"ballArea","cMask":["ball"],"bCoef":1},{"x":371,"y":-65,"trait":"ballArea","cMask":["ball"],"bCoef":0},{"x":371,"y":-171,"trait":"ballArea","cMask":["ball"],"bCoef":0},{"x":371,"y":65,"trait":"ballArea","cMask":["ball"],"bCoef":0},{"x":371,"y":171,"trait":"ballArea","cMask":["ball"],"bCoef":0},{"x":-371,"y":65,"trait":"ballArea","cMask":["ball"],"bCoef":0},{"x":-371,"y":171,"trait":"ballArea","cMask":["ball"],"bCoef":0},{"x":-371,"y":-65,"trait":"ballArea","cMask":["ball"],"bCoef":0},{"x":-371,"y":-171,"trait":"ballArea","cMask":["ball"],"bCoef":0}],"segments":[{"v0":0,"v1":1,"trait":"ballArea"},{"v0":2,"v1":3,"trait":"ballArea"},{"v0":4,"v1":5,"trait":"ballArea"},{"v0":6,"v1":7,"trait":"ballArea"},{"v0":8,"v1":9,"trait":"kickOffBarrier","curve":180,"cGroup":["blueKO"]},{"v0":8,"v1":9,"trait":"kickOffBarrier","curve":-180,"cGroup":["redKO"]},{"vis":true,"color":"FFFFFF","bCoef":1,"trait":"ballArea","v0":1,"v1":0,"cMask":["ball"],"x":-368},{"vis":true,"color":"FFFFFF","bCoef":1,"trait":"ballArea","v0":5,"v1":4,"cMask":["ball"],"x":368},{"vis":true,"color":"FFFFFF","bCoef":1,"trait":"ballArea","v0":2,"v1":3,"cMask":["ball"],"x":-368},{"vis":true,"color":"FFFFFF","bCoef":1,"trait":"ballArea","v0":6,"v1":7,"cMask":["ball"],"x":368},{"vis":true,"color":"FFFFFF","bCoef":1,"trait":"ballArea","v0":0,"v1":10,"y":171},{"vis":true,"color":"FFFFFF","bCoef":1,"trait":"ballArea","v0":3,"v1":11,"y":-171},{"curve":0,"vis":true,"color":"FFFFFF","bCoef":0,"trait":"line","v0":12,"v1":13},{"curve":-180,"vis":true,"color":"FFFFFF","bCoef":0,"trait":"line","v0":9,"v1":8},{"curve":180,"vis":true,"color":"FFFFFF","bCoef":0,"trait":"line","v0":15,"v1":14},{"curve":0,"vis":true,"color":"FFFFFF","bCoef":0,"trait":"line","v0":2,"v1":1},{"curve":0,"vis":true,"color":"FFFFFF","bCoef":0,"trait":"line","v0":6,"v1":5},{"vis":false,"color":"FFFFFF","bCoef":1,"trait":"ballArea","v0":16,"v1":17,"cMask":["ball"],"x":330},{"vis":false,"color":"FFFFFF","bCoef":1,"trait":"ballArea","v0":18,"v1":19,"cMask":["ball"],"x":-330},{"vis":false,"color":"FFFFFF","bCoef":1,"trait":"ballArea","v0":20,"v1":21,"cMask":["ball"],"x":-330},{"vis":false,"color":"FFFFFF","bCoef":1,"trait":"ballArea","v0":22,"v1":23,"cMask":["ball"],"x":330},{"v0":24,"v1":25,"trait":"kickOffBarrier"},{"v0":26,"v1":27,"trait":"kickOffBarrier"},{"v0":28,"v1":29,"curve":0,"color":"F8F8F8","cMask":["red","blue","ball"],"trait":"goalNet","pos":[-700,-80],"y":-80},{"v0":29,"v1":30,"color":"F8F8F8","cMask":["red","blue","ball"],"trait":"goalNet","x":-590},{"v0":30,"v1":31,"curve":0,"color":"F8F8F8","cMask":["red","blue","ball"],"trait":"goalNet","pos":[-700,80],"y":80},{"v0":32,"v1":33,"curve":0,"color":"F8F8F8","cMask":["red","blue","ball"],"trait":"goalNet","pos":[-700,-80],"y":-80},{"v0":33,"v1":34,"color":"F8F8F8","cMask":["red","blue","ball"],"trait":"goalNet","x":-590},{"v0":34,"v1":35,"curve":0,"color":"F8F8F8","cMask":["red","blue","ball"],"trait":"goalNet","pos":[-700,80],"y":80},{"v0":36,"v1":37,"curve":94.0263701017,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line"},{"v0":39,"v1":38,"curve":86.632306418889,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line"},{"v0":40,"v1":41,"curve":-94.026370101699,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line"},{"v0":37,"v1":41,"curve":0,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line"},{"v0":43,"v1":42,"curve":-86.632306418888,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line"},{"v0":45,"v1":44,"curve":86.632306418884,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line"},{"v0":47,"v1":46,"curve":-86.632306418899,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line"},{"v0":48,"v1":49,"curve":-94.026370101699,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line"},{"v0":50,"v1":51,"curve":94.026370101699,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line"},{"v0":52,"v1":53,"curve":0,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":390},{"v0":55,"v1":54,"curve":-180.00692920292,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-375},{"v0":54,"v1":55,"curve":-180.00218240614,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-375},{"v0":57,"v1":56,"curve":-179.64823645332,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-375},{"v0":56,"v1":57,"curve":-180.35758668147,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-375},{"v0":59,"v1":58,"curve":-180.02357323962,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-375},{"v0":58,"v1":59,"curve":-180.00924102399,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-375},{"v0":61,"v1":60,"curve":-180.06885755885,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-375},{"v0":60,"v1":61,"curve":-180.02948353257,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-375},{"v0":63,"v1":62,"curve":-179.99869069543,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":375},{"v0":62,"v1":63,"curve":-179.99939258776,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":375},{"v0":65,"v1":64,"curve":-180.08826047163,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":375},{"v0":64,"v1":65,"curve":-179.91186753664,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":375},{"v0":67,"v1":66,"curve":-179.99528711105,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":375},{"v0":66,"v1":67,"curve":-179.99743836358,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":375},{"v0":69,"v1":68,"curve":-179.98626041101,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":375},{"v0":68,"v1":69,"curve":-179.99175181595,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":375},{"v0":71,"v1":70,"curve":-180.04715562398,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-277.5},{"v0":70,"v1":71,"curve":-179.95294709391,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-277.5},{"v0":73,"v1":72,"curve":-179.95715750564,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-277.5},{"v0":72,"v1":73,"curve":-179.89943871875,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-277.5},{"v0":75,"v1":74,"curve":-179.94773754738,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-277.5},{"v0":74,"v1":75,"curve":-179.98221351296,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-277.5},{"v0":77,"v1":76,"curve":-180.4151727218,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-277.5},{"v0":76,"v1":77,"curve":-179.58764458796,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-277.5},{"v0":79,"v1":78,"curve":-180.00086646359,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":277.5},{"v0":78,"v1":79,"curve":-180.01965986376,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":277.5},{"v0":81,"v1":80,"curve":-180.03532601389,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":277.5},{"v0":80,"v1":81,"curve":-179.99380079,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":277.5},{"v0":83,"v1":82,"curve":-180.0044468452,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":277.5},{"v0":82,"v1":83,"curve":-180.01386779847,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":277.5},{"v0":85,"v1":84,"curve":-180.05158287563,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":277.5},{"v0":84,"v1":85,"curve":-180.01212223878,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":277.5},{"v0":86,"v1":87,"curve":0,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-240},{"v0":88,"v1":89,"curve":0,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-120},{"v0":90,"v1":91,"curve":0,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":240},{"v0":92,"v1":93,"curve":0,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":120},{"v0":94,"v1":95,"curve":0,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-381},{"v0":96,"v1":97,"curve":0,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-240,"y":123},{"v0":98,"v1":99,"curve":0,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-240,"y":123},{"v0":100,"v1":101,"curve":0,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-240,"y":-123},{"v0":102,"v1":103,"curve":0,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-240,"y":-123},{"v0":104,"v1":105,"curve":0,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-381},{"v0":106,"v1":107,"curve":0,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":381},{"v0":108,"v1":109,"curve":0,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":381},{"vis":false,"color":"FFFFFF","bCoef":1,"trait":"ballArea","v0":110,"v1":111,"cMask":["ball"],"x":330},{"vis":false,"color":"FFFFFF","bCoef":1,"trait":"ballArea","v0":112,"v1":113,"cMask":["ball"],"x":-330},{"vis":false,"color":"FFFFFF","bCoef":1,"trait":"ballArea","v0":114,"v1":115,"cMask":["ball"],"x":-330},{"vis":false,"color":"FFFFFF","bCoef":1,"trait":"ballArea","v0":116,"v1":117,"cMask":["ball"],"x":330},{"vis":false,"color":"FFFFFF","bCoef":0,"trait":"ballArea","v0":118,"v1":119,"cMask":["ball"],"x":371},{"vis":false,"color":"FFFFFF","bCoef":0,"trait":"ballArea","v0":120,"v1":121,"cMask":["ball"],"x":371},{"vis":false,"color":"FFFFFF","bCoef":0,"trait":"ballArea","v0":122,"v1":123,"cMask":["ball"],"x":-371},{"vis":false,"color":"FFFFFF","bCoef":0,"trait":"ballArea","v0":124,"v1":125,"cMask":["ball"],"x":-371}],"goals":[{"p0":[-374.25,-62.053454903872],"p1":[-374.25,64.043361696331],"team":"red"},{"p0":[374.25,62],"p1":[374.25,-62],"team":"blue"}],"discs":[{"radius":3.9405255187564,"pos":[-368.53340356886,64.043361696331],"color":"6666CC","trait":"goalPost","y":80},{"radius":3.9405255187564,"pos":[-368.53340356886,-62.053454903872],"color":"6666CC","trait":"goalPost","y":-80,"x":-560},{"radius":3.9405255187564,"pos":[368.9681846993,-62.144998272018],"color":"6666CC","trait":"goalPost","y":80},{"radius":3.9405255187564,"pos":[368.09926357786,63.94882446641],"color":"6666CC","trait":"goalPost","y":-80,"x":-560},{"radius":3,"invMass":0,"pos":[-368,-171],"color":"FFCC00","bCoef":0.1,"trait":"line"},{"radius":3,"invMass":0,"pos":[-368,171],"color":"FFCC00","bCoef":0.1,"trait":"line"},{"radius":3,"invMass":0,"pos":[368,171],"color":"FFCC00","bCoef":0.1,"trait":"line"},{"radius":3,"invMass":0,"pos":[368,-171],"color":"FFCC00","bCoef":0.1,"trait":"line"}],"planes":[{"normal":[0,1],"dist":-171,"trait":"ballArea"},{"normal":[0,-1],"dist":-171,"trait":"ballArea"},{"normal":[0,1],"dist":-200,"bCoef":0.2,"cMask":["all"]},{"normal":[0,-1],"dist":-200,"bCoef":0.2,"cMask":["all"]},{"normal":[1,0],"dist":-420,"bCoef":0.2,"cMask":["all"]},{"normal":[-1,0],"dist":-420,"bCoef":0.2,"cMask":["all"]}],"traits":{"ballArea":{"vis":false,"bCoef":1,"cMask":["ball"]},"goalPost":{"radius":8,"invMass":0,"bCoef":1},"goalNet":{"vis":true,"bCoef":0.1,"cMask":["all"]},"kickOffBarrier":{"vis":false,"bCoef":0.1,"cGroup":["redKO","blueKO"],"cMask":["red","blue"]},"line":{"vis":true,"bCoef":0,"cMask":[""]},"arco":{"radius":2,"cMask":["n\/d"],"color":"cccccc"}},"playerPhysics":{"acceleration":0.11,"kickingAcceleration":0.083,"kickStrength":5,"bCoef":0},"ballPhysics":{"radius":6.25,"color":"FFCC00","bCoef":0.4,"invMass":1.5,"damping":0.99}}'; // Insert your map for 1v1 and 2v2 here. To get minimum file size, here are the instructions : 1. Download the map 2. Go to https://cssminifier.com 3. Paste the result
var bigMap = '{"name":"𝙁𝙪𝙩𝙨𝙖𝙡 𝘾𝙤𝙢𝙢𝙪𝙣𝙞𝙩𝙮","canBeStored":false,"width":765,"height":350,"bg":{"type":"hockey"},"vertexes":[{"x":0,"y":-350,"bCoef":0,"cMask":["red","blue"],"cGroup":["redKO","blueKO"]},{"x":0,"y":-320,"bCoef":0.1,"cMask":["red","blue"],"cGroup":["redKO","blueKO"]},{"x":-700,"y":-90,"bCoef":0.2,"cMask":["red","blue","ball"],"trait":"goalPost","curve":0,"color":"ffffff","pos":[-700,-80]},{"x":-735,"y":-90,"bCoef":0.2,"cMask":["red","blue","ball"],"trait":"goalPost","curve":0,"color":"ffffff","pos":[-700,-80]},{"x":-735,"y":90,"bCoef":0.2,"cMask":["red","blue","ball"],"trait":"goalPost","curve":0,"color":"ffffff","pos":[-700,80]},{"x":-700,"y":90,"bCoef":0.2,"cMask":["red","blue","ball"],"trait":"goalPost","curve":0,"color":"ffffff","pos":[-700,80]},{"x":700,"y":-90,"bCoef":0.2,"cMask":["red","blue","ball"],"trait":"goalPost","curve":0,"color":"ffffff","pos":[700,-90]},{"x":735,"y":-90,"bCoef":0.2,"cMask":["red","blue","ball"],"trait":"goalPost","curve":0,"color":"ffffff","pos":[700,-90]},{"x":735,"y":90,"bCoef":0.2,"cMask":["red","blue","ball"],"trait":"goalPost","curve":0,"color":"ffffff","pos":[700,80]},{"x":700,"y":90,"bCoef":0.2,"cMask":["red","blue","ball"],"trait":"goalPost","curve":0,"color":"ffffff","pos":[700,80]},{"x":-700,"y":90,"bCoef":1.15,"cMask":["ball"],"trait":"ballArea","color":"ffffff","pos":[-700,80]},{"x":-700,"y":320,"bCoef":1.15,"cMask":["ball"],"trait":"ballArea","color":"ffffff"},{"x":-700,"y":-90,"bCoef":1.15,"cMask":["ball"],"trait":"ballArea","color":"ffffff","pos":[-700,-80]},{"x":-700,"y":-320,"bCoef":1.15,"cMask":["ball"],"trait":"ballArea","color":"ffffff"},{"x":-700,"y":320,"bCoef":1,"cMask":["ball"],"trait":"ballArea","color":"ffffff"},{"x":700,"y":320,"bCoef":1,"cMask":["ball"],"trait":"ballArea","color":"ffffff"},{"x":700,"y":90,"bCoef":1.15,"cMask":["ball"],"trait":"ballArea","pos":[700,80],"color":"ffffff"},{"x":700,"y":320,"bCoef":1.15,"cMask":["ball"],"trait":"ballArea","color":"ffffff"},{"x":700,"y":-320,"bCoef":1.15,"cMask":["ball"],"trait":"ballArea","color":"ffffff"},{"x":700,"y":-90,"bCoef":1.15,"cMask":["ball"],"trait":"ballArea","color":"ffffff","pos":[700,-90]},{"x":-700,"y":-320,"bCoef":1,"cMask":["ball"],"trait":"ballArea","curve":0,"color":"ffffff"},{"x":700,"y":-320,"bCoef":1,"cMask":["ball"],"trait":"ballArea","curve":0,"color":"ffffff"},{"x":-706.5,"y":90,"bCoef":1,"cMask":["ball"],"trait":"ballArea","curve":0,"vis":false,"pos":[-700,80],"color":"ffffff"},{"x":-706.5,"y":320,"bCoef":1,"cMask":["ball"],"trait":"ballArea","curve":0,"vis":false,"color":"ffffff"},{"x":-706.5,"y":-320,"bCoef":1,"cMask":["ball"],"trait":"ballArea","vis":false,"curve":0,"color":"ffffff"},{"x":-706.5,"y":-90,"bCoef":1,"cMask":["ball"],"trait":"ballArea","vis":false,"curve":0,"pos":[-700,-80],"color":"ffffff"},{"x":706.5,"y":-320,"bCoef":1,"cMask":["ball"],"trait":"ballArea","vis":false,"curve":0,"color":"ffffff"},{"x":706.5,"y":-90,"bCoef":1,"cMask":["ball"],"trait":"ballArea","vis":false,"curve":0,"pos":[700,-90],"color":"ffffff"},{"x":706.5,"y":90,"bCoef":1,"cMask":["ball"],"trait":"ballArea","curve":0,"vis":false,"pos":[700,80],"color":"ffffff"},{"x":706.5,"y":320,"bCoef":1,"cMask":["ball"],"trait":"ballArea","curve":0,"vis":false,"color":"ffffff"},{"x":-700,"y":-90,"bCoef":0.1,"cMask":["wall"],"trait":"line","color":"F80000"},{"x":-700,"y":90,"bCoef":0.1,"cMask":["wall"],"trait":"line","color":"F80000"},{"x":700,"y":-90,"bCoef":0.1,"cMask":["wall"],"trait":"line","color":"0000F8","pos":[700,-90],"_selected":"segment"},{"x":700,"y":90,"bCoef":0.1,"cMask":["wall"],"trait":"line","color":"0000F8","_selected":"segment"},{"x":-700,"y":280,"bCoef":0.1,"cMask":["wall"],"trait":"line","color":"ffffff","curve":-93.241608812827},{"x":-480,"y":60,"bCoef":0.1,"cMask":["wall"],"trait":"line","color":"ffffff","curve":-93.241608812827},{"x":-700,"y":-280,"bCoef":0.1,"cMask":["wall"],"trait":"line","color":"ffffff","curve":93.241608812827},{"x":-480,"y":-60,"bCoef":0.1,"cMask":["wall"],"trait":"line","color":"ffffff","curve":93.241608812827},{"x":700,"y":280,"bCoef":0.1,"cMask":["wall"],"trait":"line","color":"ffffff","curve":93.241608812827},{"x":480,"y":70,"bCoef":0.1,"cMask":["wall"],"trait":"line","color":"ffffff","curve":93.241608812827},{"x":700,"y":-280,"bCoef":0.1,"cMask":["wall"],"trait":"line","color":"ffffff","curve":-93.241608812827},{"x":480,"y":-70,"bCoef":0.1,"cMask":["wall"],"trait":"line","color":"ffffff","curve":-93.241608812827},{"x":480,"y":70,"bCoef":0.1,"cMask":["wall"],"trait":"line","color":"ffffff","curve":0},{"x":480,"y":-70,"bCoef":0.1,"cMask":["wall"],"trait":"line","color":"ffffff","curve":0},{"x":480,"y":1,"bCoef":0.1,"cMask":["wall"],"trait":"line","curve":180,"color":"ffffff"},{"x":480,"y":-1,"bCoef":0.1,"cMask":["wall"],"trait":"line","curve":180,"color":"ffffff"},{"x":480,"y":3,"bCoef":0.1,"cMask":["wall"],"trait":"line","curve":180,"color":"ffffff"},{"x":480,"y":-3,"bCoef":0.1,"cMask":["wall"],"trait":"line","curve":180,"color":"ffffff"},{"x":480,"y":2,"bCoef":0.1,"cMask":["wall"],"trait":"line","curve":180,"color":"ffffff"},{"x":-480,"y":1,"bCoef":0.1,"cMask":["wall"],"trait":"line","curve":180,"color":"ffffff"},{"x":-480,"y":-1,"bCoef":0.1,"cMask":["wall"],"trait":"line","curve":180,"color":"ffffff"},{"x":-480,"y":3,"bCoef":0.1,"cMask":["wall"],"trait":"line","curve":180,"color":"ffffff"},{"x":-480,"y":-3,"bCoef":0.1,"cMask":["wall"],"trait":"line","curve":180,"color":"ffffff"},{"x":-480,"y":2,"bCoef":0.1,"cMask":["wall"],"trait":"line","curve":180,"color":"ffffff"},{"x":-700,"y":-90,"bCoef":0.2,"cMask":["red","blue","ball"],"trait":"goalPost","curve":0,"color":"ffffff","pos":[-700,-80],"vis":false},{"x":-735,"y":-90,"bCoef":0.2,"cMask":["red","blue","ball"],"trait":"goalPost","curve":0,"color":"ffffff","pos":[-700,-80],"vis":false},{"x":-735,"y":90,"bCoef":0.2,"cMask":["red","blue","ball"],"trait":"goalPost","curve":0,"color":"ffffff","pos":[-700,80],"vis":false},{"x":-700,"y":90,"bCoef":0.2,"cMask":["red","blue","ball"],"trait":"goalPost","curve":0,"color":"ffffff","pos":[-700,80],"vis":false},{"x":700,"y":-90,"bCoef":0.2,"cMask":["red","blue","ball"],"trait":"goalPost","curve":0,"color":"ffffff","pos":[700,-90],"vis":false},{"x":735,"y":-90,"bCoef":0.2,"cMask":["red","blue","ball"],"trait":"goalPost","curve":0,"color":"ffffff","pos":[700,-90],"vis":false},{"x":735,"y":90,"bCoef":0.2,"cMask":["red","blue","ball"],"trait":"goalPost","curve":0,"color":"ffffff","pos":[700,80],"vis":false},{"x":700,"y":90,"bCoef":0.2,"cMask":["red","blue","ball"],"trait":"goalPost","curve":0,"color":"ffffff","pos":[700,80],"vis":false},{"x":-31.974697113037,"y":13.042793273926,"bCoef":1,"cMask":["wall"],"trait":"line","color":"353535"},{"x":-31.974697113037,"y":-4.9572067260742,"bCoef":1,"cMask":["wall"],"trait":"line","curve":70,"color":"353535"},{"x":-23.974697113037,"y":-8.9572067260742,"bCoef":1,"cMask":["wall"],"trait":"line","curve":70,"color":"353535"},{"x":-11.974697113037,"y":-8.9572067260742,"bCoef":1,"cMask":["wall"],"trait":"line","color":"353535"},{"x":-26.974697113037,"y":1.0427932739258,"bCoef":1,"cMask":["wall"],"trait":"line","color":"353535"},{"x":-14.974697113037,"y":1.0427932739258,"bCoef":1,"cMask":["wall"],"trait":"line","color":"353535"},{"x":-7.9746971130371,"y":13.042793273926,"bCoef":1,"cMask":["wall"],"trait":"line","color":"353535"},{"x":-7.9746971130371,"y":1.0427932739258,"bCoef":1,"cMask":["wall"],"trait":"line","curve":95,"color":"353535"},{"x":2.0253028869629,"y":-8.9572067260742,"bCoef":1,"cMask":["wall"],"trait":"line","curve":95,"color":"353535"},{"x":9.0253028869629,"y":-8.9572067260742,"bCoef":1,"cMask":["wall"],"trait":"line","curve":95,"color":"353535"},{"x":12.025302886963,"y":-4.9572067260742,"bCoef":1,"cMask":["wall"],"trait":"line","curve":95,"color":"353535"},{"x":12.025302886963,"y":13.042793273926,"bCoef":1,"cMask":["wall"],"trait":"line","color":"353535"},{"x":-7.9746971130371,"y":4.0427932739258,"bCoef":1,"cMask":["wall"],"trait":"line","color":"353535"},{"x":12.025302886963,"y":4.0427932739258,"bCoef":1,"cMask":["wall"],"trait":"line","color":"353535"},{"x":20.025302886963,"y":-8.9572067260742,"bCoef":1,"cMask":["wall"],"trait":"line","color":"353535"},{"x":20.025302886963,"y":13.042793273926,"bCoef":1,"cMask":["wall"],"trait":"line","color":"353535"},{"x":39.666748046875,"y":-8.9572067260742,"bCoef":1,"cMask":["wall"],"trait":"line","color":"353535"},{"x":39.666748046875,"y":13.042793273926,"bCoef":1,"cMask":["wall"],"trait":"line","color":"353535"},{"x":20.025302886963,"y":3.0427932739258,"bCoef":1,"cMask":["wall"],"trait":"line","color":"353535"},{"x":39.666748046875,"y":3.0427932739258,"bCoef":1,"cMask":["wall"],"trait":"line","color":"353535"},{"x":-34.974697113037,"y":10.042793273926,"bCoef":1,"cMask":["wall"],"trait":"line","color":"ffffff"},{"x":-34.974697113037,"y":-7.9572067260742,"bCoef":1,"cMask":["wall"],"trait":"line","curve":70,"color":"ffffff"},{"x":-26.974697113037,"y":-11.957206726074,"bCoef":1,"cMask":["wall"],"trait":"line","curve":70,"color":"ffffff"},{"x":-14.974697113037,"y":-11.957206726074,"bCoef":1,"cMask":["wall"],"trait":"line","color":"ffffff"},{"x":-29.974697113037,"y":-1.9572067260742,"bCoef":1,"cMask":["wall"],"trait":"line","color":"ffffff"},{"x":-17.974697113037,"y":-1.9572067260742,"bCoef":1,"cMask":["wall"],"trait":"line","color":"ffffff"},{"x":-10.974697113037,"y":10.042793273926,"bCoef":1,"cMask":["wall"],"trait":"line","color":"ffffff"},{"x":-10.974697113037,"y":-1.9572067260742,"bCoef":1,"cMask":["wall"],"trait":"line","curve":95,"color":"ffffff"},{"x":-0.97469711303711,"y":-11.957206726074,"bCoef":1,"cMask":["wall"],"trait":"line","curve":95,"color":"ffffff"},{"x":6.0253028869629,"y":-11.957206726074,"bCoef":1,"cMask":["wall"],"trait":"line","curve":95,"color":"ffffff"},{"x":9.0253028869629,"y":-7.9572067260742,"bCoef":1,"cMask":["wall"],"trait":"line","curve":95,"color":"ffffff"},{"x":9.0253028869629,"y":10.042793273926,"bCoef":1,"cMask":["wall"],"trait":"line","color":"ffffff"},{"x":-10.974697113037,"y":1.0427932739258,"bCoef":1,"cMask":["wall"],"trait":"line","color":"ffffff"},{"x":9.0253028869629,"y":1.0427932739258,"bCoef":1,"cMask":["wall"],"trait":"line","color":"ffffff"},{"x":17.025302886963,"y":-11.957206726074,"bCoef":1,"cMask":["wall"],"trait":"line","color":"ffffff"},{"x":17.025302886963,"y":10.042793273926,"bCoef":1,"cMask":["wall"],"trait":"line","color":"ffffff"},{"x":36.666748046875,"y":-11.957206726074,"bCoef":1,"cMask":["wall"],"trait":"line","color":"ffffff"},{"x":36.666748046875,"y":10.042793273926,"bCoef":1,"cMask":["wall"],"trait":"line","color":"ffffff"},{"x":17.025302886963,"y":0.042793273925781,"bCoef":1,"cMask":["wall"],"trait":"line","color":"ffffff"},{"x":36.666748046875,"y":0.042793273925781,"bCoef":1,"cMask":["wall"],"trait":"line","color":"ffffff"},{"x":-765.1,"y":15,"bCoef":0.5,"cMask":["red","blue"],"trait":"goalPost","vis":false,"pos":[-770.1,0]},{"x":-735,"y":15,"bCoef":0.5,"cMask":["red","blue"],"trait":"goalPost","vis":false},{"x":-765.1,"y":-15,"bCoef":0.5,"cMask":["red","blue"],"trait":"goalPost","vis":false,"pos":[-770.1,0]},{"x":-735,"y":-15,"bCoef":0.5,"cMask":["red","blue"],"trait":"goalPost","vis":false},{"x":735,"y":-15,"bCoef":0.5,"cMask":["red","blue"],"trait":"goalPost","vis":false},{"x":765.1,"y":-15,"bCoef":0.5,"cMask":["red","blue"],"trait":"goalPost","vis":false,"pos":[770.1,0]},{"x":735,"y":15,"bCoef":0.5,"cMask":["red","blue"],"trait":"goalPost","vis":false},{"x":765.1,"y":15,"bCoef":0.5,"cMask":["red","blue"],"trait":"goalPost","vis":false,"pos":[770.1,0]},{"x":0,"y":320,"bCoef":0,"cMask":["red","blue"],"cGroup":["redKO","blueKO"]},{"x":0,"y":350,"bCoef":0.1,"cMask":["red","blue"],"cGroup":["redKO","blueKO"]},{"x":0,"y":90,"bCoef":0.1,"cMask":["red","blue"],"cGroup":["redKO","blueKO"],"color":"696969"},{"x":0,"y":-90,"bCoef":0.1,"cMask":["red","blue"],"cGroup":["redKO","blueKO"],"color":"696969"},{"x":0,"y":90,"bCoef":0,"cMask":["red","blue"],"cGroup":["redKO","blueKO"],"color":"696969"},{"x":0,"y":-90,"bCoef":0,"cMask":["red","blue"],"cGroup":["redKO","blueKO"],"color":"696969"},{"x":0,"y":-320,"bCoef":0.1,"cMask":["red","blue"],"cGroup":["redKO","blueKO"],"color":"ffffff"},{"x":0,"y":90,"cMask":[],"color":"ffffff"},{"x":0,"y":90,"bCoef":0,"cMask":["red","blue"],"cGroup":["redKO","blueKO"],"color":"ffffff"},{"x":0,"y":320,"bCoef":0.1,"cMask":["red","blue"],"cGroup":["redKO","blueKO"],"color":"ffffff"},{"x":0,"y":60,"bCoef":0.1,"cMask":["wall"],"trait":"line","color":"ffffff","curve":-180},{"x":0,"y":-60,"bCoef":0.1,"cMask":["wall"],"trait":"line","color":"ffffff","curve":-180},{"x":0,"y":60,"bCoef":0.1,"cMask":["wall"],"trait":"line","color":"ffffff","curve":180},{"x":0,"y":-60,"bCoef":0.1,"cMask":["wall"],"trait":"line","color":"ffffff","curve":180},{"x":0,"y":91,"bCoef":0.1,"cMask":["wall"],"trait":"line","color":"555555","curve":-180},{"x":0,"y":-91,"bCoef":0.1,"cMask":["wall"],"trait":"line","color":"555555","curve":-180},{"x":0,"y":91,"bCoef":0.1,"cMask":["wall"],"trait":"line","color":"555555","curve":180},{"x":0,"y":-91,"bCoef":0.1,"cMask":["wall"],"trait":"line","color":"555555","curve":180},{"x":0,"y":-60,"bCoef":0.1,"cMask":["wall"],"trait":"line","color":"ffffff","curve":-93.241608812827},{"x":0,"y":-91,"bCoef":0.1,"cMask":["wall"],"trait":"line","color":"ffffff","curve":93.241608812827},{"x":0,"y":91,"bCoef":0.1,"cMask":["wall"],"trait":"line","color":"ffffff","curve":-93.241608812827},{"x":0,"y":60,"bCoef":0.1,"cMask":["wall"],"trait":"line","color":"ffffff","curve":93.241608812827},{"x":0,"y":-91,"bCoef":0,"cMask":["red","blue"],"cGroup":["redKO","blueKO"],"color":"696969"},{"x":0,"y":-320,"bCoef":0.1,"cMask":["red","blue"],"cGroup":["redKO","blueKO"],"color":"ffffff"},{"x":0,"y":91,"bCoef":0,"cMask":["red","blue"],"cGroup":["redKO","blueKO"],"color":"ffffff"},{"x":0,"y":320,"bCoef":0.1,"cMask":["red","blue"],"cGroup":["redKO","blueKO"],"color":"ffffff"},{"x":-706.5,"y":90,"bCoef":1,"cMask":["ball"],"trait":"ballArea","curve":0,"vis":false,"pos":[-700,80],"color":"ffffff"},{"x":-706.5,"y":320,"bCoef":1,"cMask":["ball"],"trait":"ballArea","curve":0,"vis":false,"color":"ffffff"},{"x":-706.5,"y":-320,"bCoef":1,"cMask":["ball"],"trait":"ballArea","vis":false,"curve":0,"color":"ffffff"},{"x":-706.5,"y":-90,"bCoef":1,"cMask":["ball"],"trait":"ballArea","vis":false,"curve":0,"pos":[-700,-80],"color":"ffffff"},{"x":706.5,"y":-320,"bCoef":1,"cMask":["ball"],"trait":"ballArea","vis":false,"curve":0,"color":"ffffff"},{"x":706.5,"y":-90,"bCoef":1,"cMask":["ball"],"trait":"ballArea","vis":false,"curve":0,"pos":[700,-90],"color":"ffffff"},{"x":706.5,"y":90,"bCoef":1,"cMask":["ball"],"trait":"ballArea","curve":0,"vis":false,"pos":[700,80],"color":"ffffff"},{"x":706.5,"y":320,"bCoef":1,"cMask":["ball"],"trait":"ballArea","curve":0,"vis":false,"color":"ffffff"},{"x":-735,"y":-350,"bCoef":0.5,"cMask":["red","blue"]},{"x":-735,"y":350,"bCoef":0.5,"cMask":["red","blue"]},{"x":735,"y":350,"bCoef":0.5,"cMask":["red","blue"]},{"x":735,"y":-350,"bCoef":0.5,"cMask":["red","blue"]}],"segments":[{"v0":0,"v1":1,"vis":false,"color":"F8F8F8","bCoef":0.1,"cMask":["red","blue"],"cGroup":["redKO","blueKO"]},{"v0":2,"v1":3,"curve":0,"color":"ffffff","bCoef":0.2,"cMask":["red","blue","ball"],"trait":"goalPost","pos":[-700,-80],"y":-90},{"v0":3,"v1":4,"curve":0,"color":"ffffff","bCoef":0.2,"cMask":["red","blue","ball"],"trait":"goalPost","x":-735},{"v0":4,"v1":5,"curve":0,"color":"ffffff","bCoef":0.2,"cMask":["red","blue","ball"],"trait":"goalPost","pos":[-700,80],"y":90},{"v0":6,"v1":7,"curve":0,"color":"ffffff","bCoef":0.2,"cMask":["red","blue","ball"],"trait":"goalPost","pos":[700,-90],"y":-90},{"v0":7,"v1":8,"curve":0,"color":"ffffff","bCoef":0.2,"cMask":["red","blue","ball"],"trait":"goalPost","x":735},{"v0":8,"v1":9,"curve":0,"color":"ffffff","bCoef":0.2,"cMask":["red","blue","ball"],"trait":"goalPost","pos":[700,80],"y":90},{"v0":10,"v1":11,"vis":true,"color":"ffffff","bCoef":1.15,"cMask":["ball"],"trait":"ballArea","x":-550},{"v0":12,"v1":13,"vis":true,"color":"ffffff","bCoef":1.15,"cMask":["ball"],"trait":"ballArea","x":-550},{"v0":14,"v1":15,"vis":true,"color":"ffffff","bCoef":1,"cMask":["ball"],"trait":"ballArea","y":240},{"v0":16,"v1":17,"vis":true,"color":"ffffff","bCoef":1.15,"cMask":["ball"],"trait":"ballArea","x":550},{"v0":18,"v1":19,"vis":true,"color":"ffffff","bCoef":1.15,"cMask":["ball"],"trait":"ballArea","x":550},{"v0":20,"v1":21,"curve":0,"vis":true,"color":"ffffff","bCoef":1,"cMask":["ball"],"trait":"ballArea","y":-240},{"v0":22,"v1":23,"curve":0,"vis":false,"color":"ffffff","bCoef":1,"cMask":["ball"],"trait":"ballArea","x":-556.5},{"v0":24,"v1":25,"curve":0,"vis":false,"color":"ffffff","bCoef":1,"cMask":["ball"],"trait":"ballArea","x":-556.5},{"v0":26,"v1":27,"curve":0,"vis":false,"color":"ffffff","bCoef":1,"cMask":["ball"],"trait":"ballArea","x":556.5},{"v0":28,"v1":29,"curve":0,"vis":false,"color":"ffffff","bCoef":1,"cMask":["ball"],"trait":"ballArea","x":556.5},{"v0":30,"v1":31,"curve":0,"vis":true,"color":"F80000","bCoef":0.1,"cMask":["wall"],"trait":"line","x":-550},{"v0":32,"v1":33,"curve":0,"vis":true,"color":"0000F8","bCoef":0.1,"cMask":["wall"],"trait":"line","x":550,"_selected":true},{"v0":34,"v1":35,"curve":-93.241608812827,"vis":true,"color":"ffffff","bCoef":0.1,"cMask":["wall"],"trait":"line"},{"v0":36,"v1":37,"curve":93.241608812827,"vis":true,"color":"ffffff","bCoef":0.1,"cMask":["wall"],"trait":"line"},{"v0":35,"v1":37,"curve":0,"vis":true,"color":"ffffff","bCoef":0.1,"cMask":["wall"],"trait":"line","x":-480},{"v0":38,"v1":39,"curve":93.241608812827,"vis":true,"color":"ffffff","bCoef":0.1,"cMask":["wall"],"trait":"line"},{"v0":40,"v1":41,"curve":-93.241608812827,"vis":true,"color":"ffffff","bCoef":0.1,"cMask":["wall"],"trait":"line"},{"v0":42,"v1":43,"curve":0,"vis":true,"color":"ffffff","bCoef":0.1,"cMask":["wall"],"trait":"line","x":480},{"v0":45,"v1":44,"curve":180,"vis":true,"color":"ffffff","bCoef":0.1,"cMask":["wall"],"trait":"line","x":480},{"v0":44,"v1":45,"curve":180,"vis":true,"color":"ffffff","bCoef":0.1,"cMask":["wall"],"trait":"line","x":480},{"v0":47,"v1":46,"curve":180,"vis":true,"color":"ffffff","bCoef":0.1,"cMask":["wall"],"trait":"line","x":480},{"v0":46,"v1":47,"curve":180,"vis":true,"color":"ffffff","bCoef":0.1,"cMask":["wall"],"trait":"line","x":480},{"v0":50,"v1":49,"curve":180,"vis":true,"color":"ffffff","bCoef":0.1,"cMask":["wall"],"trait":"line","x":-480},{"v0":49,"v1":50,"curve":180,"vis":true,"color":"ffffff","bCoef":0.1,"cMask":["wall"],"trait":"line","x":-480},{"v0":52,"v1":51,"curve":180,"vis":true,"color":"ffffff","bCoef":0.1,"cMask":["wall"],"trait":"line","x":-480},{"v0":51,"v1":52,"curve":180,"vis":true,"color":"ffffff","bCoef":0.1,"cMask":["wall"],"trait":"line","x":-480},{"v0":54,"v1":55,"curve":0,"vis":false,"color":"ffffff","bCoef":0.2,"cMask":["red","blue","ball"],"trait":"goalPost","pos":[-700,-80],"y":-90},{"v0":55,"v1":56,"curve":0,"vis":false,"color":"ffffff","bCoef":0.2,"cMask":["red","blue","ball"],"trait":"goalPost","x":-735},{"v0":56,"v1":57,"curve":0,"vis":false,"color":"ffffff","bCoef":0.2,"cMask":["red","blue","ball"],"trait":"goalPost","pos":[-700,80],"y":90},{"v0":58,"v1":59,"curve":0,"vis":false,"color":"ffffff","bCoef":0.2,"cMask":["red","blue","ball"],"trait":"goalPost","pos":[700,-90],"y":-90},{"v0":59,"v1":60,"curve":0,"vis":false,"color":"ffffff","bCoef":0.2,"cMask":["red","blue","ball"],"trait":"goalPost","x":735},{"v0":60,"v1":61,"curve":0,"vis":false,"color":"ffffff","bCoef":0.2,"cMask":["red","blue","ball"],"trait":"goalPost","pos":[700,80],"y":90},{"v0":62,"v1":63,"color":"353535","bCoef":1,"cMask":["wall"],"trait":"line"},{"v0":63,"v1":64,"curve":70,"color":"353535","bCoef":1,"cMask":["wall"],"trait":"line"},{"v0":64,"v1":65,"color":"353535","bCoef":1,"cMask":["wall"],"trait":"line"},{"v0":66,"v1":67,"color":"353535","bCoef":1,"cMask":["wall"],"trait":"line"},{"v0":68,"v1":69,"color":"353535","bCoef":1,"cMask":["wall"],"trait":"line"},{"v0":69,"v1":70,"curve":95,"color":"353535","bCoef":1,"cMask":["wall"],"trait":"line"},{"v0":70,"v1":71,"color":"353535","bCoef":1,"cMask":["wall"],"trait":"line"},{"v0":71,"v1":72,"curve":95,"color":"353535","bCoef":1,"cMask":["wall"],"trait":"line"},{"v0":72,"v1":73,"color":"353535","bCoef":1,"cMask":["wall"],"trait":"line"},{"v0":74,"v1":75,"color":"353535","bCoef":1,"cMask":["wall"],"trait":"line"},{"v0":76,"v1":77,"color":"353535","bCoef":1,"cMask":["wall"],"trait":"line"},{"v0":78,"v1":79,"color":"353535","bCoef":1,"cMask":["wall"],"trait":"line"},{"v0":80,"v1":81,"color":"353535","bCoef":1,"cMask":["wall"],"trait":"line"},{"v0":82,"v1":83,"color":"ffffff","bCoef":1,"cMask":["wall"],"trait":"line"},{"v0":83,"v1":84,"curve":70,"color":"ffffff","bCoef":1,"cMask":["wall"],"trait":"line"},{"v0":84,"v1":85,"color":"ffffff","bCoef":1,"cMask":["wall"],"trait":"line"},{"v0":86,"v1":87,"color":"ffffff","bCoef":1,"cMask":["wall"],"trait":"line"},{"v0":88,"v1":89,"color":"ffffff","bCoef":1,"cMask":["wall"],"trait":"line"},{"v0":89,"v1":90,"curve":95,"color":"ffffff","bCoef":1,"cMask":["wall"],"trait":"line"},{"v0":90,"v1":91,"color":"ffffff","bCoef":1,"cMask":["wall"],"trait":"line"},{"v0":91,"v1":92,"curve":95,"color":"ffffff","bCoef":1,"cMask":["wall"],"trait":"line"},{"v0":92,"v1":93,"color":"ffffff","bCoef":1,"cMask":["wall"],"trait":"line"},{"v0":94,"v1":95,"color":"ffffff","bCoef":1,"cMask":["wall"],"trait":"line"},{"v0":96,"v1":97,"color":"ffffff","bCoef":1,"cMask":["wall"],"trait":"line"},{"v0":98,"v1":99,"color":"ffffff","bCoef":1,"cMask":["wall"],"trait":"line"},{"v0":100,"v1":101,"color":"ffffff","bCoef":1,"cMask":["wall"],"trait":"line"},{"v0":102,"v1":103,"curve":0,"vis":false,"color":"ffffff","bCoef":0.5,"cMask":["red","blue"],"trait":"goalPost","y":15},{"v0":104,"v1":105,"curve":0,"vis":false,"color":"ffffff","bCoef":0.5,"cMask":["red","blue"],"trait":"goalPost","y":-15},{"v0":106,"v1":107,"curve":0,"vis":false,"color":"ffffff","bCoef":0.5,"cMask":["red","blue"],"trait":"goalPost","y":-15},{"v0":108,"v1":109,"curve":0,"vis":false,"color":"ffffff","bCoef":0.5,"cMask":["red","blue"],"trait":"goalPost","y":15},{"v0":110,"v1":111,"vis":false,"color":"F8F8F8","bCoef":0.1,"cMask":["red","blue"],"cGroup":["redKO","blueKO"]},{"v0":112,"v1":113,"curve":179.42829117403,"color":"696969","bCoef":0.1,"cMask":["red","blue"],"cGroup":["blueKO"],"curveF":0.0049891420830909},{"v0":115,"v1":114,"curve":180,"color":"696969","bCoef":0.1,"cMask":["red","blue"],"cGroup":["redKO"],"curveF":6.1232339957368e-17},{"v0":120,"v1":121,"curve":-180,"vis":true,"color":"ffffff","bCoef":0.1,"cMask":["wall"],"trait":"line","x":0},{"v0":122,"v1":123,"curve":180,"vis":true,"color":"ffffff","bCoef":0.1,"cMask":["wall"],"trait":"line","x":0},{"v0":124,"v1":125,"curve":-180,"vis":true,"color":"555555","bCoef":0.1,"cMask":["wall"],"trait":"line","x":0},{"v0":126,"v1":127,"curve":180,"vis":true,"color":"555555","bCoef":0.1,"cMask":["wall"],"trait":"line","x":0},{"v0":128,"v1":129,"curve":0,"vis":true,"color":"ffffff","bCoef":0.1,"cMask":["wall"],"trait":"line","x":0},{"v0":130,"v1":131,"curve":0,"vis":true,"color":"ffffff","bCoef":0.1,"cMask":["wall"],"trait":"line","x":0},{"v0":133,"v1":132,"color":"ffffff","bCoef":0.1,"cMask":["red","blue"],"cGroup":["redKO","blueKO"]},{"v0":134,"v1":135,"color":"ffffff","bCoef":0.1,"cMask":["red","blue"],"cGroup":["redKO","blueKO"]},{"v0":136,"v1":137,"curve":0,"vis":false,"color":"ffffff","bCoef":1,"cMask":["ball"],"trait":"ballArea","x":-556.5},{"v0":138,"v1":139,"curve":0,"vis":false,"color":"ffffff","bCoef":1,"cMask":["ball"],"trait":"ballArea","x":-556.5},{"v0":140,"v1":141,"curve":0,"vis":false,"color":"ffffff","bCoef":1,"cMask":["ball"],"trait":"ballArea","x":556.5},{"v0":142,"v1":143,"curve":0,"vis":false,"color":"ffffff","bCoef":1,"cMask":["ball"],"trait":"ballArea","x":556.5},{"v0":144,"v1":145,"curve":0,"vis":false,"color":"ffffff","bCoef":0.5,"cMask":["red","blue"],"x":-735},{"v0":146,"v1":147,"curve":0,"vis":false,"color":"ffffff","bCoef":0.5,"cMask":["red","blue"],"x":735}],"planes":[{"normal":[0,1],"dist":-350,"bCoef":0.1},{"normal":[-1,0],"dist":-765.1,"bCoef":0.1},{"normal":[0,-1],"dist":-320,"cMask":["ball"]},{"normal":[0,-1],"dist":-350,"bCoef":0.1},{"normal":[1,0],"dist":-765.1,"bCoef":0.1},{"normal":[0,1],"dist":-320,"cMask":["ball"]}],"goals":[{"p0":[-707.5,-90],"p1":[-707.5,90],"team":"red","color":"ffffff"},{"p0":[707.5,90],"p1":[707.5,-90],"team":"blue","color":"ffffff"}],"discs":[{"radius":0.01,"invMass":0,"pos":[-765.1,0],"color":"000000","bCoef":440,"vis":true,"x":-770.1},{"radius":0.1,"invMass":0,"pos":[765.1,0],"color":"000000","bCoef":440,"x":770.1},{"radius":5.5,"invMass":0,"pos":[-700,90],"color":"ffffff","trait":"goalPost","y":90},{"radius":5.5,"invMass":0,"pos":[-700,-90],"color":"ffffff","trait":"goalPost","y":-85,"x":-560},{"radius":5.5,"invMass":0,"pos":[700,90],"color":"ffffff","trait":"goalPost","y":90},{"radius":5.5,"invMass":0,"pos":[700,-90],"color":"ffffff","trait":"goalPost","y":-85,"vis":true}],"playerPhysics":{"bCoef":0.1,"acceleration":0.11,"kickingAcceleration":0.083,"kickStrength":5},"ballPhysics":{"radius":6.25,"bCoef":0.4,"invMass":1.5,"color":"FEBA01"},"spawnDistance":200,"traits":{}}'// Read above

const MIN_SIZE = 12;
const MAX_SIZE = 17;
/* OPTIONS */

var afkLimit = 12;
var drawTimeLimit = Infinity;
var maxTeamSize = 4; // x4
var slowMode = 0;

/* PLAYERS */

const Team = { SPECTATORS: 0, RED: 1, BLUE: 2 };
var extendedP = [];
const eP = { ID: 0, AUTH: 1, CONN: 2, AFK: 3, ACT: 4, GK: 5, MUTE: 6 };
const Ss = { GA: 0, WI: 1, DR: 2, LS: 3, WR: 4, GL: 5, AS: 6, GK: 7, CS: 8, CP: 9, RL: 10, NK: 11}
var players;
var teamR;
var teamB;
var teamS;

/* GAME */

var lastTeamTouched;
var lastPlayersTouched; // These allow to get good goal notifications (it should be lastPlayersKicked, waiting on a next update to get better track of shots on target)
var countAFK = false; // Created to get better track of activity
var activePlay = false; // Created to get better track of the possession
var goldenGoal = false;
var SMSet = new Set(); // Set created to get slow mode which is useful in chooseMode
var banList = []; // Getting track of the bans, so we can unban ppl if we want

/* STATS */

var game;
var GKList = ["",""];
var Rposs = 0;
var Bposs = 0;
var point = [{"x": 0, "y": 0}, {"x": 0, "y": 0}]; // created to get ball speed
var ballSpeed;
var lastWinner = Team.SPECTATORS;
var streak = 0;
var allBlues = []; // This is to count the players who should be counted for the stats. This includes players who left after the game has started, doesn't include those who came too late or ...
var allReds = []; // ... those who came in a very unequal game.

/* BALANCE & CHOOSE */

var inChooseMode = false; // This variable enables to distinguish the 2 phases of playing and choosing which should be dealt with very differently
var redCaptainChoice = "";
var blueCaptainChoice = "";
var chooseTime = 20;
var timeOutCap;

/* AUXILIARY */

var checkTimeVariable = false; // This is created so the chat doesn't get spammed when a game is ending via timeLimit
var statNumber = 6; // This allows the room to be given stat information every X minutes
var endGameVariable = false; // This variable with the one below helps distinguish the cases where games are stopped because they have finished to the ones where games are stopped due to player movements or resetting teams
var resettingTeams = false;
var capLeft = false;
var statInterval = 6;

loadMap(aloneMap, 0, 0);

/* OBJECTS */

function errorMessagePM(message, id){
    room.sendAnnouncement("[⚠] Error: " + message, id, 0xFFC375);
}

function Goal(time, team, striker, assist) {
	this.time = time;
	this.team = team;
	this.striker = striker;
	this.assist = assist;
}

function Game(date, scores, goals) {
	this.date = date;
	this.scores = scores;
	this.goals = goals;
}

/* FUNCTIONS */

/* AUXILIARY FUNCTIONS */

function getRandomInt(max) { // returns a random number from 0 to max-1
	return Math.floor(Math.random() * Math.floor(max)); 
}

function getTime(scores) { // returns the current time of the game
	return "[" + Math.floor(Math.floor(scores.time/60)/10).toString() + Math.floor(Math.floor(scores.time/60)%10).toString() + ":" + Math.floor(Math.floor(scores.time - (Math.floor(scores.time/60) * 60))/10).toString() + Math.floor(Math.floor(scores.time - (Math.floor(scores.time/60) * 60))%10).toString() + "]"
}

function pointDistance(p1, p2) {
	var d1 = p1.x - p2.x;
	var d2 = p1.y - p2.y;
	return Math.sqrt(d1 * d1 + d2 * d2);
}

/* BUTTONS */

function PublicitaDiscord(player) {
    var scores = room.getScores();
    if (scores.time > 20 && !isTimeAddedShownseis) {
    room.sendAnnouncement("                                        ▒█▀▀▄ ▀█▀ ▒█▀▀▀█ ▒█▀▀█ ▒█▀▀▀█ ▒█▀▀█ ▒█▀▀▄ ", null, 0x9250FD, "bold")
    room.sendAnnouncement("                                        ▒█░▒█ ▒█░ ░▀▀▀▄▄ ▒█░░░ ▒█░░▒█ ▒█▄▄▀ ▒█░▒█ ", null, 0x8466FD, "bold")
    room.sendAnnouncement("                                        ▒█▄▄▀ ▄█▄ ▒█▄▄▄█ ▒█▄▄█ ▒█▄▄▄█ ▒█░▒█ ▒█▄▄▀ ", null, 0x7B73FD, "bold");
    room.sendAnnouncement("                                        💬  https://discord.gg/H4UPFpDJyA ⬅⬅⬅ 𝗙𝘂𝘁𝘀𝗮𝗹 𝗖𝗼𝗺𝗺𝘂𝗻𝗶𝘁𝘆 [𝗡𝘂𝗲𝘃𝗼]", null, 0xF6FF43, "bold");
    room.sendAnnouncement("                                        💬  https://discord.gg/wmX35hKQrv ⬅⬅⬅ 𝗙𝘂𝘁𝘀𝗮𝗹 𝗟𝗲𝗮𝗴𝘂𝗲 [𝗟𝗶𝗴𝗮]", null, 0xF6FF43, "bold");
    isTimeAddedShownseis = true;
    }
}

function PublicitaDonacion(player) {
    var scores = room.getScores();
    if (scores.time > 40 && !isTimeAddedShownsiete) {
    room.sendAnnouncement("                                                                                                           ░█▀▀▄ ░█▀▀▀█ ░█▄─░█ ─█▀▀█", player, 0xffcd2c, "normal", 0);
    room.sendAnnouncement("                                                                                                           ░█─░█ ░█──░█ ░█░█░█ ░█▄▄█", player, 0xea8f73, "normal", 0);
    room.sendAnnouncement("                                                                                                           ░█▄▄▀ ░█▄▄▄█ ░█──▀█ ░█─░█", player, 0xd757b3, "normal", 0);
    room.sendAnnouncement("                       ¡𝗗𝗼𝗻𝗮 𝘆 𝗼𝗯𝘁𝗲𝗻𝗲 𝘃𝗶𝗽 𝘆 𝗺𝗮𝘀 𝗯𝗲𝗻𝗲𝗳𝗶𝗰𝗶𝗼𝘀!", player, 0xd733ff, "bold", 0);
    room.sendAnnouncement("                                                                                                          ➡➡  🔗 ʟɪɴᴋ: https://discord.gg/HJxrRxpWz7", player, 0xf1ff33, "bold");
    isTimeAddedShownsiete = true;
    }
}

function PublicitaHelp(player) {
    var scores = room.getScores();
    if (scores.time > 10 && !isTimeAddedShowncinco) {
    room.sendAnnouncement("「📣」 ¡𝗨𝘀𝗮 '!𝗮𝘆𝘂𝗱𝗮' 𝗽𝗮𝗿𝗮 𝘃𝗲𝗿 𝗹𝗮 𝗹𝗶𝘀𝘁𝗮 𝗱𝗲 𝗰𝗼𝗺𝗮𝗻𝗱𝗼𝘀 𝗱𝗶𝘀𝗽𝗼𝗻𝗶𝗯𝗹𝗲𝘀!", player, 0xd733ff, "bold", 0);
    isTimeAddedShowncinco = true;
    }
}

function PublicitaStats2(player) {
    var scores = room.getScores();
    if (scores.time > 50 && !isTimeAddedShownquince) {
	try{
	var tableau = [];
	Object.keys(localStorage).forEach(function (key) { if (!["player_name", "view_mode", "geo", "avatar", "player_auth_key"].includes(key)) { tableau.push([(JSON.parse(localStorage.getItem(key))[Ss.NK]), (JSON.parse(localStorage.getItem(key))[Ss.AS])]); } });
	}
	catch{

	}
	if (tableau.length < 5) {
		room.sendAnnouncement("[PV] Aún no se han jugado partidos suficientes.", player, 0x73EC59, "bold", 0);
		return false;
	}
	tableau.sort(function (a, b) { return b[1] - a[1]; });
    room.sendAnnouncement("[📄] 👟 Asistencias> #1 " + tableau[0][0] + ": " + tableau[0][1] + " #2 " + tableau[1][0] + ": " + tableau[1][1] + " #3 " + tableau[2][0] + ": " + tableau[2][1] + " #4 " + tableau[3][0] + ": " + tableau[3][1] + " #5 " + tableau[4][0] + ": " + tableau[4][1], player, 0x73EC59, "bold", 0);
    isTimeAddedShownquince = true;
    }
}

function PublicitaStats3(player) {
    var scores = room.getScores();
    if (scores.time > 60 && !isTimeAddedShowntres) {
	try{
	var tableau = [];
	Object.keys(localStorage).forEach(function (key) { if (!["player_name", "view_mode", "geo", "avatar", "player_auth_key"].includes(key)) { tableau.push([(JSON.parse(localStorage.getItem(key))[Ss.NK]), (JSON.parse(localStorage.getItem(key))[Ss.GL])]); } });
	}
	catch{

	}
	if (tableau.length < 5) {
		room.sendAnnouncement("[📄] Aún no se han jugado partidos suficientes.", player, 0x73EC59, "bold", 0);
		return false;
	}
	tableau.sort(function (a, b) { return b[1] - a[1]; });
	room.sendAnnouncement("[📄] ⚽️ Goles> #1 " + tableau[0][0] + ": " + tableau[0][1] + " #2 " + tableau[1][0] + ": " + tableau[1][1] + " #3 " + tableau[2][0] + ": " + tableau[2][1] + " #4 " + tableau[3][0] + ": " + tableau[3][1] + " #5 " + tableau[4][0] + ": " + tableau[4][1], player, 0x73EC59, "bold", 0);
    isTimeAddedShowntres = true;
    }
}

function PublicitaStats1(player) {
    var scores = room.getScores();
    if (scores.time > 30 && !isTimeAddedShowndos) {
	try{
	var tableau = [];
	Object.keys(localStorage).forEach(function (key) { if (!["player_name", "view_mode", "geo", "avatar", "player_auth_key"].includes(key)) { tableau.push([(JSON.parse(localStorage.getItem(key))[Ss.NK]), (JSON.parse(localStorage.getItem(key))[Ss.WI])]); } });
	}
	catch{

	}
	if (tableau.length < 5) {
		room.sendAnnouncement("[PV] Aún no se han jugado partidos suficientes.", player, 0x73EC59, "bold", 0);
		return false;
	}
	tableau.sort(function (a, b) { return b[1] - a[1]; });
	room.sendAnnouncement("[📄] ✅ Victorias> #1 " + tableau[0][0] + ": " + tableau[0][1] + " #2 " + tableau[1][0] + ": " + tableau[1][1] + " #3 " + tableau[2][0] + ": " + tableau[2][1] + " #4 " + tableau[3][0] + ": " + tableau[3][1] + " #5 " + tableau[4][0] + ": " + tableau[4][1], player, 0x73EC59, "bold", 0);
    isTimeAddedShowndos = true;
    }
}

function PublicitaStats4(player) {
    var scores = room.getScores();
    if (scores.time > 70 && !isTimeAddedShown) {
	try{
	var tableau = [];
	Object.keys(localStorage).forEach(function (key) { if (!["player_name", "view_mode", "geo", "avatar", "player_auth_key"].includes(key)) { tableau.push([(JSON.parse(localStorage.getItem(key))[Ss.NK]), (JSON.parse(localStorage.getItem(key))[Ss.GA])]); } });
	}
	catch{

	}
	if (tableau.length < 5) {
		room.sendAnnouncement("[PV] Aún no se han jugado partidos suficientes.", player, 0x73EC59, "bold", 0);
		return false;
	}
	tableau.sort(function (a, b) { return b[1] - a[1]; });
	room.sendAnnouncement("[📄] 🎮 Partidos Jugados> #1 " + tableau[0][0] + ": " + tableau[0][1] + " #2 " + tableau[1][0] + ": " + tableau[1][1] + " #3 " + tableau[2][0] + ": " + tableau[2][1] + " #4 " + tableau[3][0] + ": " + tableau[3][1] + " #5 " + tableau[4][0] + ": " + tableau[4][1], player, 0x73EC59, "bold", 0);
    isTimeAddedShown = true;
    }
}

function PublicitaLiga(player) {
    var scores = room.getScores();
    if (scores.time > 80 && !isTimeAddedShowncuatro) {
    room.sendAnnouncement("「📣」 𝗧𝗲𝗻𝗲𝗺𝗼𝘀 𝘂𝗻𝗮 𝗹𝗶𝗴𝗮 𝗱𝗲 𝘅𝟰 𝗱𝗲𝗱𝗶𝗰𝗮𝗱𝗮 𝗮 𝗹𝗮 𝗰𝗼𝗺𝘂𝗻𝗶𝗱𝗮𝗱. 𝗠𝗮𝘀 𝗶𝗻𝗳𝗼𝗿𝗺𝗮𝗰𝗶𝗼𝗻 𝘂𝘀𝗮𝗻𝗱𝗼 '!𝗱𝗶𝘀𝗰𝗼𝗿𝗱'", player, 0xd733ff, "bold", 0);
    isTimeAddedShowncuatro = true;
    }
}

function topBtn() {
	if (teamS.length == 0) {
		return;
	}
	else {
		if (teamR.length == teamB.length) {
			if (teamS.length > 1) {
				room.setPlayerTeam(teamS[0].id, Team.RED);
				room.setPlayerTeam(teamS[1].id, Team.BLUE);
			}
			return;
		}
		else if (teamR.length < teamB.length) {
			room.setPlayerTeam(teamS[0].id, Team.RED);
		}
		else {
			room.setPlayerTeam(teamS[0].id, Team.BLUE);
		}
	}
}

function randomBtn() {
	if (teamS.length == 0) {
		return;
	}
	else {
		if (teamR.length == teamB.length) {
			if (teamS.length > 1) {
				var r = getRandomInt(teamS.length);
				room.setPlayerTeam(teamS[r].id, Team.RED);
				teamS = teamS.filter((spec) => spec.id != teamS[r].id);
				room.setPlayerTeam(teamS[getRandomInt(teamS.length)].id, Team.BLUE);
			}
			return;
		}
		else if (teamR.length < teamB.length) {
			room.setPlayerTeam(teamS[getRandomInt(teamS.length)].id, Team.RED);
		}
		else {
			room.setPlayerTeam(teamS[getRandomInt(teamS.length)].id, Team.BLUE);
		}
	}
}

function blueToSpecBtn() {
	resettingTeams = true;
	setTimeout(() => { resettingTeams = false; }, 100);
	for (var i = 0; i < teamB.length; i++) {
		room.setPlayerTeam(teamB[teamB.length - 1 - i].id, Team.SPECTATORS);
	}
}

function redToSpecBtn() {
	resettingTeams = true;
	setTimeout(() => { resettingTeams = false; }, 100);
	for (var i = 0; i < teamR.length; i++) {
		room.setPlayerTeam(teamR[teamR.length - 1 - i].id, Team.SPECTATORS);
	}
}

function resetBtn() {
	resettingTeams = true;
	setTimeout(() => { resettingTeams = false; }, 100);
	if (teamR.length <= teamB.length) {
		for (var i = 0; i < teamR.length; i++) {
			room.setPlayerTeam(teamB[teamB.length - 1 - i].id, Team.SPECTATORS);
			room.setPlayerTeam(teamR[teamR.length - 1 - i].id, Team.SPECTATORS);
		}
		for (var i = teamR.length; i < teamB.length; i++) {
			room.setPlayerTeam(teamB[teamB.length - 1 - i].id, Team.SPECTATORS);
		}
	}
	else {
		for (var i = 0; i < teamB.length; i++) {
			room.setPlayerTeam(teamB[teamB.length - 1 - i].id, Team.SPECTATORS);
			room.setPlayerTeam(teamR[teamR.length - 1 - i].id, Team.SPECTATORS);
		}
		for (var i = teamB.length; i < teamR.length; i++) {
			room.setPlayerTeam(teamR[teamR.length - 1 - i].id, Team.SPECTATORS);
		}
	}
}

function blueToRedBtn() {
	resettingTeams = true;
	setTimeout(() => { resettingTeams = false; }, 100);
	for (var i = 0; i < teamB.length; i++) {
		room.setPlayerTeam(teamB[i].id, Team.RED);
	}
}

/* GAME FUNCTIONS */

function checkTime() {
	const scores = room.getScores();
	game.scores = scores;
	if (Math.abs(scores.time - scores.timeLimit) <= 0.01 && scores.timeLimit != 0) {
		if (scores.red != scores.blue) {
			if (checkTimeVariable == false) {
				checkTimeVariable = true;
				setTimeout(() => { checkTimeVariable = false; }, 3000);
				scores.red > scores.blue ? endGame(Team.RED) : endGame(Team.BLUE);
				setTimeout(() => { room.stopGame(); }, 2000);
			}
			return;
		}
		goldenGoal = true;
		room.sendAnnouncement("⚽ Gol gana !",null,0xFFC375);
	}
	if (Math.abs(drawTimeLimit * 60 - scores.time - 60) <= 0.01 && players.length > 2) {
		if (checkTimeVariable == false) {
			checkTimeVariable = true;
			setTimeout(() => { checkTimeVariable = false; }, 10);
			room.sendAnnouncement("⌛ ¡Quedan 60 segundos para que termine el partido!",null,0xFF0000,"bold");
		}
	}
	if (Math.abs(scores.time - drawTimeLimit * 60) <= 0.01 && players.length > 2) {
		if (checkTimeVariable == false) {
			checkTimeVariable = true;
			setTimeout(() => { checkTimeVariable = false; }, 10);
			endGame(Team.SPECTATORS);
			room.stopGame();
			goldenGoal = false;
		}
	}
}

function changePlayer(player,message){
	message = message.split(" ");
	if (teamR.length != 0 && teamB.length != 0 && inChooseMode) {
		if (player.id == teamR[0].id || player.id == teamB[0].id) { // we care if it's one of the captains choosing
			if (teamR.length <= teamB.length && player.id == teamR[0].id) { // we care if it's red turn && red cap talking
				if (["top", "auto"].includes(message[0].toLowerCase())) {
					room.setPlayerTeam(teamS[0].id, Team.RED);
					redCaptainChoice = "top";
					clearTimeout(timeOutCap);
					room.sendAnnouncement(player.name + " seleccionó Top!",null,0xFF0000,"bold");
					return false;
				}
				else if (["random", "rand"].includes(message[0].toLowerCase())) {
					var r = getRandomInt(teamS.length);
					room.setPlayerTeam(teamS[r].id, Team.RED);
					redCaptainChoice = "random";
					clearTimeout(timeOutCap);
					room.sendAnnouncement(player.name + " seleccionó Random!",null,0xFF0000,"bold");
					return false;
				}
				else if (["bottom", "bot"].includes(message[0].toLowerCase())) {
					room.setPlayerTeam(teamS[teamS.length - 1].id, Team.RED);
					redCaptainChoice = "bottom";
					clearTimeout(timeOutCap);
					room.sendAnnouncement(player.name + " seleccionó Bottom!",null,0xFF0000,"bold");
					return false;
				}
				else if (!Number.isNaN(Number.parseInt(message[0]))) {
					if (Number.parseInt(message[0]) > teamS.length || Number.parseInt(message[0]) < 1) {
						room.sendAnnouncement("[PV] ¡El numero que elegiste es invalido!", player.id,0xF64444,"bold");
						return false;
					}
					else {
						room.setPlayerTeam(teamS[Number.parseInt(message[0]) - 1].id, Team.RED);
						room.sendAnnouncement(player.name + " eligió " + teamS[Number.parseInt(message[0]) - 1].name + " !",null,0xFF0000,"bold");
						return false;
					}
				}
			}
			if (teamR.length > teamB.length && player.id == teamB[0].id) { // we care if it's red turn && red cap talking
				if (["top", "auto"].includes(message[0].toLowerCase())) {
					room.setPlayerTeam(teamS[0].id, Team.BLUE);
					blueCaptainChoice = "top";
					clearTimeout(timeOutCap);
					room.sendAnnouncement(player.name + " seleccionó Top!",null,0x0023FF,"bold");
					return false;
				}
				else if (["random", "rand"].includes(message[0].toLowerCase())) {
					room.setPlayerTeam(teamS[getRandomInt(teamS.length)].id, Team.BLUE);
					blueCaptainChoice = "random";
					clearTimeout(timeOutCap);
					room.sendAnnouncement(player.name + " seleccionó Random!",null,0x0023FF,"bold");
					return false;
				}
				else if (["bottom", "bot"].includes(message[0].toLowerCase())) {
					room.setPlayerTeam(teamS[teamS.length - 1].id, Team.BLUE);
					blueCaptainChoice = "bottom";
					clearTimeout(timeOutCap);
					room.sendAnnouncement(player.name + " seleccionó Bottom!",null,0x0023FF,"bold");
					return false;
				}
				else if (!Number.isNaN(Number.parseInt(message[0]))) {
					if (Number.parseInt(message[0]) > teamS.length || Number.parseInt(message[0]) < 1) {
						room.sendAnnouncement("[PV] ¡El número que elegiste es invalido!", player.id,0xF64444,"bold");
						return false;
					}
					else {
						room.setPlayerTeam(teamS[Number.parseInt(message[0]) - 1].id, Team.BLUE);
						room.sendAnnouncement(player.name + " eligió " + teamS[Number.parseInt(message[0]) - 1].name + " !",null,0xFF7900,"bold");
						return false;
					}
				}
			}
		}
	}

	return false;
}

function endGame(winner) { // handles the end of a game : no stopGame function inside
	players.length >= 2 * maxTeamSize - 1 ? activateChooseMode() : null;
	const scores = room.getScores();
	game.scores = scores;
	Rposs = Rposs/(Rposs+Bposs);
	Bposs = 1 - Rposs;
	lastWinner = winner;
	endGameVariable = true;
	if (winner == Team.RED) {
		streak++;
		room.sendAnnouncement("🔴 ᴇʟ ʀᴇᴅ ᴛᴇᴀᴍ ɢᴀɴᴏ " + scores.red + "-" + scores.blue + " ! 𝗩𝗶𝗰𝘁𝗼𝗿𝗶𝗮𝘀 𝗰𝗼𝗻𝘀𝗲𝗰𝘂𝘁𝗶𝘃𝗮𝘀 : " + streak + " 🏆",null,0xFF0000,"bold");
	}
	else if (winner == Team.BLUE) {
		streak = 1;
		room.sendAnnouncement("🔵 ᴇʟ ʙʟᴜᴇ ᴛᴇᴀᴍ ɢᴀɴᴏ " + scores.blue + "-" + scores.red + " ! 𝗩𝗶𝗰𝘁𝗼𝗿𝗶𝗮𝘀 𝗰𝗼𝗻𝘀𝗲𝗰𝘂𝘁𝗶𝘃𝗮𝘀 : " + streak + " 🏆",null,0x0023FF,"bold");
	}
	else {
		streak = 0;
		room.sendAnnouncement("💤 Límite de empate, terminado! 💤",null,0xFF7900,"bold");
    }
    room.sendAnnouncement("⭐ Posesión del balón : 🔴 " + (Rposs*100).toPrecision(3).toString() + "% : " + (Bposs*100).toPrecision(3).toString() + "% 🔵",null,0xFF7900,"bold");
    scores.red == 0 ? (scores.blue == 0 ? room.sendAnnouncement("🏆 " + GKList[0].name + " y " + GKList[1].name + " mantuvieron la valla invicta ! ",null,null,0xFF7900) : room.sendAnnouncement("🏆 " + GKList[1].name + " mantuvo la valla invicta ! ")) : scores.blue == 0 ? room.sendAnnouncement("🏆 " + GKList[0].name + " mantuvo la valla invicta ! ",null,0xFF7900,"bold") : null;
	updateStats();
}

function quickRestart() {
	room.stopGame();
	setTimeout(() => { room.startGame(); }, 2000);
}

function resumeGame() {
	setTimeout(() => { room.startGame(); }, 2000);
	setTimeout(() => { room.pauseGame(false); }, 1000);
}

function activateChooseMode() {
	inChooseMode = true;
	slowMode = 2;
	room.sendAnnouncement("[⚠] Modo lento activado (2 segundos)!",null,0x73EC59);
}

function deactivateChooseMode() {
	inChooseMode = false;
	clearTimeout(timeOutCap);
	if (slowMode != 0) {
		slowMode = 0;
		room.sendAnnouncement("[⚠] Modo lento terminado.",null,0x73EC59);
	}
	redCaptainChoice = "";
	blueCaptainChoice = "";
}

function loadMap(map, scoreLim, timeLim) {
	if (map == aloneMap) {
		room.setCustomStadium(aloneMap);
	}
	else if (map == classicMap) {
		(classicMap != '') ? room.setCustomStadium(classicMap) : room.setDefaultStadium("Classic");
	}
	else if (map == bigMap) {
		(bigMap != '.') ? room.setCustomStadium(bigMap) : room.setDefaultStadium("Big");
	}
	else {
		room.setCustomStadium(map);
	}
	room.setScoreLimit(scoreLim);
	room.setTimeLimit(timeLim);
}

/* PLAYER CHAT FUNCTIONS */

function nv(player,message){
	room.kickPlayer(player.id, "👋 ¡Hasta luego!", false);
}

function clearBans(player,message){
    message = message.split(" ");
	if (player.admin) {
		if (message.length == 1) {
			room.clearBans();
			room.sendAnnouncement("[⚠] Bans removidos!",0x73EC59);
			banList = [];
		}
		if (message.length == 2) {
			if (!Number.isNaN(Number.parseInt(message[1]))) {
				if (Number.parseInt(message[1]) > 0) {
					ID = Number.parseInt(message[1]);
					room.clearBan(ID);
					if (banList.length != banList.filter((array) => array[1] != ID)) {
						room.sendAnnouncement(banList.filter((array) => array[1] == ID)[0][0] + " ha sido desbaneado del host !",null,0x73EC59);
					}
					setTimeout(() => { banList = banList.filter((array) => array[1] != ID); }, 20);
				}
			}
		}
	}
}

function showBans(player,message){
    message = message.split(" ");
	if (banList.length == 0) {
		room.sendAnnouncement("[⚠] No hay nadie en la lista de baneados!", player.id,0x73EC59);
		return false;
	}
	var cstm = "[PV] Lista de baneados : ";
	for (var i = 0; i < banList.length; i++) {
		if (140 - cstm.length < (banList[i][0] + "[" + (banList[i][1]) + "], ").length) {
			room.sendAnnouncement(cstm, player.id);
			cstm = "... ";
		}
		cstm += banList[i][0] + "[" + (banList[i][1]) + "], ";
	}
	cstm = cstm.substring(0, cstm.length - 2);
	cstm += ".";
    room.sendAnnouncement(cstm, player.id);
    
    return false;
}

function endSlow(player,message){
    message = message.split(" ");
	if (player.admin) {
		slowMode != 0 ? room.sendAnnouncement("[⚠] Modo lento terminado.",0x73EC59) : null;
		slowMode = 0;
    }
    
    return false;
}

function changeOurSize(player, message){
    if (localStorage.getItem(getAuth(player))){
    stats = JSON.parse(localStorage.getItem(getAuth(player)))
    if (player.team != 0 && !tookASize.hasOwnProperty(player.id) && stats[Ss.WI] > 129){
        let size = message.substr("!size ".length);
        if (!isNaN(size) && size >= MIN_SIZE && size <= MAX_SIZE){
            room.setPlayerDiscProperties(player.id, {radius: size, invMass:  size / 30});
		room.sendAnnouncement("[⚠] "+player.name+" ¡Ha cambiado el tamaño de su jugador! [!size 12/17]", null,0x4A3FF5,"bold");
            tookASize[player.id] = size;
        }
        else {
            errorMessagePM("Sólo puedes elegir entre los siguientes tamaños: " +
                MIN_SIZE + " y " + MAX_SIZE, player.id);
        }
    }
    else if (player.team != 0 && !tookASize.hasOwnProperty(player.id) && stats[Ss.WI] < 129){
        errorMessagePM("Sólo puedes cambiar de tamaño a partir del rango 👑 「𝗖𝗿𝗮𝗰𝗸」.", player.id)
    }
    else {
        errorMessagePM("Sólo puedes cambiar una vez de tamaño mientras estas jugando.", player.id);
        }
    }
    else {errorMessagePM("Sólo puedes cambiar de tamaño una vez registrado y siendo rango 👑 「𝗖𝗿𝗮𝗰𝗸」", player.id);}
    return false;
} 

function slow(player,message){
    message = message.split(" ");
	if (player.admin) {
		if (message.length == 1) {
			slowMode = 2;
			room.sendAnnouncement("[⚠] Modo lento activado (2 segundos)",null,0x73EC59);
		}
		else if (message.length == 2) {
			try{
				if (!Number.isNaN(Number.parseInt(message[1]) && parseInt(message[1]))<60) {
					if (Number.parseInt(message[1]) > 0) {
						slowMode = Number.parseInt(message[1]);
						room.sendAnnouncement(slowMode + " segundos, modo lento activado !",null,0x73EC59);
						return false;
					}
				}
			}
			catch{

			}
			slowMode = 2;
			room.sendAnnouncement("[⚠] 𝙈𝙤𝙙𝙤 𝙡𝙚𝙣𝙩𝙤 𝙖𝙘𝙩𝙞𝙫𝙖𝙙𝙤🦴 (2 𝙨𝙚𝙜𝙪𝙣𝙙𝙤𝙨)",null,0x73EC59);
		}
    }
    
    return false;
}

function showHelp(player){
	room.sendAnnouncement("- - - - - - - - - - - - - - - - - - - ",player.id,0xDDD4DB);
	room.sendAnnouncement("[📄] 𝗖𝗼𝗺𝗮𝗻𝗱𝗼𝘀 𝗡𝗼𝗿𝗺𝗮𝗹𝗲𝘀: !𝗽 !𝗺𝗼𝘀𝘁𝗿𝗮𝗿𝘀𝘁𝗮𝘁𝘀 !𝗿𝗮𝗻𝗴𝗼𝘀 | !𝘀𝗶𝘇𝗲 | !𝗰𝗿𝗲𝗱𝗶𝘁𝗼𝘀 | !𝗺𝗲 | !𝗴𝗮𝗺𝗲𝘀 | !𝘄𝗶𝗻𝘀 | !𝗴𝗼𝗮𝗹𝘀 | !𝗮𝘀𝘀𝗶𝘀𝘁𝘀 | !𝘃𝗮𝗹𝗹𝗮𝘀 | !𝗮𝗳𝗸𝘀 | !𝗺𝘂𝘁𝗲𝘀 | !𝗻𝘃 | !𝗯𝗯 | !𝗰𝗮𝗺𝗶𝘀𝗲𝘁𝗮𝘀 | !𝗮𝗳𝗸 |",player.id,0x60C6FF);

	if(player.admin){
		room.sendAnnouncement("- - - - - - - - - - - - - - - - - - - ",player.id,0xDDD4DB);
		room.sendAnnouncement("[📄] 𝗖𝗼𝗺𝗮𝗻𝗱𝗼𝘀 𝗽𝗮𝗿𝗮 𝗔𝗱𝗺𝗶𝗻: | !𝗺𝘂𝘁𝗲 [𝗜𝗗] | 𝘂𝗻𝗺𝘂𝘁𝗲 [𝗜𝗗/𝗮𝗹𝗹] | !𝗰𝗹𝗲𝗮𝗿𝗯𝗮𝗻𝘀 [𝗻𝘂𝗺𝗲𝗿𝗼/𝘁𝗼𝗱𝗼𝘀] | 𝘀𝗹𝗼𝘄 [𝗱𝘂𝗿𝗮𝗰𝗶ó𝗻] |!𝗲𝗻𝗱𝘀𝗹𝗼𝘄",player.id,0x60C6FF);
	}
	return false;
}

function Discord(player,message){
    message = message.split(" ");
    room.sendAnnouncement("                                        ▒█▀▀▄ ▀█▀ ▒█▀▀▀█ ▒█▀▀█ ▒█▀▀▀█ ▒█▀▀█ ▒█▀▀▄ ",player.id,0x9250FD,"bold")
    room.sendAnnouncement("                                        ▒█░▒█ ▒█░ ░▀▀▀▄▄ ▒█░░░ ▒█░░▒█ ▒█▄▄▀ ▒█░▒█ ",player.id,0x8466FD,"bold")
    room.sendAnnouncement("                                        ▒█▄▄▀ ▄█▄ ▒█▄▄▄█ ▒█▄▄█ ▒█▄▄▄█ ▒█░▒█ ▒█▄▄▀ ",player.id,0x8466FD,"bold");
    room.sendAnnouncement("                                        💬  https://discord.gg/H4UPFpDJyA ⬅⬅⬅ 𝗙𝘂𝘁𝘀𝗮𝗹 𝗖𝗼𝗺𝗺𝘂𝗻𝗶𝘁𝘆 [𝗡𝘂𝗲𝘃𝗼]",player.id,0xF6FF43,"bold");
    room.sendAnnouncement("                                        💬  https://discord.gg/wmX35hKQrv ⬅⬅⬅ 𝗙𝘂𝘁𝘀𝗮𝗹 𝗟𝗲𝗮𝗴𝘂𝗲 [𝗟𝗶𝗴𝗮]",player.id,0xF6FF43,"bold");

    return false;
}

function mostrarCreditos(player,message){
    room.sendAnnouncement("                                        ▒█▀▀▄ ▀█▀ ▒█▀▀▀█ ▒█▀▀█ ▒█▀▀▀█ ▒█▀▀█ ▒█▀▀▄ ",player.id,0x9250FD,"bold")
    room.sendAnnouncement("                                        ▒█░▒█ ▒█░ ░▀▀▀▄▄ ▒█░░░ ▒█░░▒█ ▒█▄▄▀ ▒█░▒█ ",player.id,0x8466FD,"bold")
    room.sendAnnouncement("                                        ▒█▄▄▀ ▄█▄ ▒█▄▄▄█ ▒█▄▄█ ▒█▄▄▄█ ▒█░▒█ ▒█▄▄▀ ",player.id,0x8466FD,"bold");
    room.sendAnnouncement("                                        💬  https://discord.gg/H4UPFpDJyA ⬅⬅⬅ 𝗙𝘂𝘁𝘀𝗮𝗹 𝗖𝗼𝗺𝗺𝘂𝗻𝗶𝘁𝘆 [𝗡𝘂𝗲𝘃𝗼]",player.id,0xF6FF43,"bold");
    room.sendAnnouncement("                                        💬  https://discord.gg/wmX35hKQrv ⬅⬅⬅ 𝗙𝘂𝘁𝘀𝗮𝗹 𝗟𝗲𝗮𝗴𝘂𝗲 [𝗟𝗶𝗴𝗮]",player.id,0xF6FF43,"bold");
        room.sendAnnouncement("©₂₀₂₁- 𝗖𝗿𝗲𝗮𝗱𝗼𝗿: 𝗙𝗮𝗸𝗲𝗲𝗿", player.id,0xFFC375);
        room.sendAnnouncement("©₂₀₂₁- 𝗣𝗿𝗼𝗴𝗿𝗮𝗺𝗮𝗱𝗼 𝗽𝗼𝗿 𝗙𝗮𝗸𝗲𝗲𝗿", player.id,0xFFC375);

    return false;
}

function camisetasFun(player) { // !camis
    room.sendAnnouncement('(🌎) Lista de camisetas disponibles:', player.id, 0x00B4FF, "bold", 0);  
    room.sendAnnouncement("-------------------------------------------------", null, 0xFFC375, "bold", 0)
    room.sendAnnouncement('(🌎) | !red/blue_br [Brasil] | !red/blue_ar [Argentina]', player.id, 0x309D2B, "bold", 0);  
    room.sendAnnouncement('(🌎) | !red/blue_uy [Uruguay] | red_blue_col [Colombia]', player.id, 0x309D2B, "bold", 0); 
    room.sendAnnouncement('(🌎) | !red/blue_chi [Chile]', player.id, 0x309D2B, "bold", 0); 
        setTimeout(function(){
    room.sendAnnouncement("-------------------------------------------------", player.id, 0xFFC375, "bold", 0)
    room.sendAnnouncement("© LIGA ARGENTINA", player.id, 0xFFC375, "bold", 0)
    room.sendAnnouncement("-------------------------------------------------", player.id, 0xFFC375, "bold", 0)
				}, 1000);
        setTimeout(function(){
    room.sendAnnouncement("(🌎) | !red/blue_rac [Racing] | !red_blue_riv [River Plate]", player.id, 0xFFF992, "bold", 0)
    room.sendAnnouncement("(🌎) | !red/blue_boc [Boca Juniors] | !red_blue_slo [San Lorenzo]", player.id, 0xFFF992, "bold", 0)
    room.sendAnnouncement("(🌎) | !red/blue_vel [Velez] | !red_blue_ars [Arsenal FC]", player.id, 0xFFF992, "bold", 0)
    room.sendAnnouncement("(🌎) | !red_blue_dyj [Defensa y Justicia] | !red_blue_ban [Banfield]", player.id, 0xFFF992, "bold", 0)
    room.sendAnnouncement("(🌎) | !red_blue_lan [Lanus] | !red_blue_argj [Arg. Juniors]", player.id, 0xFFF992, "bold", 0)
    room.sendAnnouncement("(🌎) | !red_blue_hur [Huracán]", player.id, 0xFFF992, "bold", 0)
    room.sendAnnouncement("-------------------------------------------------", player.id, 0xFFC375, "bold", 0)
    room.sendAnnouncement('(🌎) OPCIÓN SOLAMENTE DISPONIBLE PARA ADMINS', player.id, 0xFFC375, "bold", 0); 
				}, 1700); 
} 

function RACTitularRedFun(player){
    if (player.admin == true){
        room.setTeamColors(1, 0, 0x000000, [0xFFF5DB, 0x5EA4FF, 0xFFFFFF]);
	room.sendAnnouncement("[👕] "+player.name+" ha puesto la camiseta: RAC para el team red!",null,0xFFF992,"bold");
    }
}

function RACTitularBlueFun(player){
    if (player.admin == true){
        room.setTeamColors(2, 0, 0x000000, [0xFFF5DB, 0x5EA4FF, 0xFFFFFF]);
	room.sendAnnouncement("[👕] "+player.name+" ha puesto la camiseta: RAC para el team blue!",null,0xFFF992,"bold");
    }
}

function RIVTitularRedFun(player){
    if (player.admin == true){
        room.setTeamColors(1, 22, 0x000000, [0xFFFFFF, 0xFF392B, 0xFFFFFF]);
	room.sendAnnouncement("[👕] "+player.name+" ha puesto la camiseta: RIV para el team red!",null,0xFFF992,"bold");
    }
}

function RIVTitularBlueFun(player){
    if (player.admin == true){
        room.setTeamColors(2, 22, 0x000000, [0xFFFFFF, 0xFF392B, 0xFFFFFF]);
	room.sendAnnouncement("[👕] "+player.name+" ha puesto la camiseta: RIV para el team blue!",null,0xFFF992,"bold");
    }
}

function BOCTitularRedFun(player){
    if (player.admin == true){
        room.setTeamColors(1, 90, 0x000000, [0x000359, 0xFFCC00, 0x000359]);
	room.sendAnnouncement("[👕] "+player.name+" ha puesto la camiseta: BOC para el team red!",null,0xFFF992,"bold");
    }
}

function BOCTitularBlueFun(player){
    if (player.admin == true){
        room.setTeamColors(2, 90, 0x000000, [0x000359, 0xFFCC00, 0x000359]);
	room.sendAnnouncement("[👕] "+player.name+" ha puesto la camiseta: BOC para el team blue!",null,0xFFF992,"bold");
    }
}

function SLOTitularRedFun(player){
    if (player.admin == true){
        room.setTeamColors(1, 0, 0x000000, [0x630000, 0x2D0566, 0x630000]);
	room.sendAnnouncement("[👕] "+player.name+" ha puesto la camiseta: SLO para el team red!",null,0xFFF992,"bold");
    }
}

function SLOTitularBlueFun(player){
    if (player.admin == true){
        room.setTeamColors(2, 0, 0x000000, [0x630000, 0x2D0566, 0x630000]);
	room.sendAnnouncement("[👕] "+player.name+" ha puesto la camiseta: SLO para el team blue!",null,0xFFF992,"bold");
    }
}

function VELTitularRedFun(player){
    if (player.admin == true){
        room.setTeamColors(1, 89, 000000, [0xFFFFFF, 0x0726ED, 0xFFFFFF]);
	room.sendAnnouncement("[👕] "+player.name+" ha puesto la camiseta: VEL para el team red!",null,0xFFF992,"bold");
    }
}

function VELTitularBlueFun(player){
    if (player.admin == true){
        room.setTeamColors(2, 89, 000000, [0xFFFFFF, 0x0726ED, 0xFFFFFF]);
	room.sendAnnouncement("[👕] "+player.name+" ha puesto la camiseta: VEL para el team blue!",null,0xFFF992,"bold");
    }
}

function ARSTitularRedFun(player){
    if (player.admin == true){
        room.setTeamColors(1, 64, 000000, [0x9EF9FF, 0xED6666, 0x9EF9FF]);
	room.sendAnnouncement("[👕] "+player.name+" ha puesto la camiseta: ARS para el team red!",null,0xFFF992,"bold");
    }
}

function ARSTitularBlueFun(player){
    if (player.admin == true){
        room.setTeamColors(2, 64, 000000, [0x9EF9FF, 0xED6666, 0x9EF9FF]);
	room.sendAnnouncement("[👕] "+player.name+" ha puesto la camiseta: ARS para el team blue!",null,0xFFF992,"bold");
    }
}

function DYJTitularRedFun(player){
    if (player.admin == true){
        room.setTeamColors(1, 90, 000000, [0xFFF82E, 0x009600, 0xFFFFFF]);
	room.sendAnnouncement("[👕] "+player.name+" ha puesto la camiseta: DYJ para el team red!",null,0xFFF992,"bold");
    }
}

function DYJTitularBlueFun(player){
    if (player.admin == true){
        room.setTeamColors(2, 90, 000000, [0xFFF82E, 0x009600, 0xFFFFFF]);
	room.sendAnnouncement("[👕] "+player.name+" ha puesto la camiseta: DYJ para el team blue!",null,0xFFF992,"bold");
    }
}

function BANTitularRedFun(player){
    if (player.admin == true){
        room.setTeamColors(1, 179, 0x000000, [0x009600, 0xFFFFFF, 0x009600]);
	room.sendAnnouncement("[👕] "+player.name+" ha puesto la camiseta: BAN para el team red!",null,0xFFF992,"bold");
    }
}

function BANTitularBlueFun(player){
    if (player.admin == true){
        room.setTeamColors(2, 179, 0x000000, [0x009600, 0xFFFFFF, 0x009600]);
	room.sendAnnouncement("[👕] "+player.name+" ha puesto la camiseta: BAN para el team blue!",null,0xFFF992,"bold");
    }
}

function LANTitularRedFun(player){
    if (player.admin == true){
        room.setTeamColors(1, 179, 0x000000, [0x6B0003]);
	room.sendAnnouncement("[👕] "+player.name+" ha puesto la camiseta: LAN para el team red!",null,0xFFF992,"bold");
    }
}

function LANTitularBlueFun(player){
    if (player.admin == true){
        room.setTeamColors(2, 179, 0x000000, [0x6B0003]);
	room.sendAnnouncement("[👕] "+player.name+" ha puesto la camiseta: LAN para el team blue!",null,0xFFF992,"bold");
    }
}

function ARGJTitularRedFun(player){
    if (player.admin == true){
        room.setTeamColors(1, 153, 0x000000, [0xFF4B45, 0xFFFFFF, 0xFF4B45]);
	room.sendAnnouncement("[👕] "+player.name+" ha puesto la camiseta: ARGJ para el team red!",null,0xFFF992,"bold");
    }
}

function ARGJTitularBlueFun(player){
    if (player.admin == true){
        room.setTeamColors(2, 153, 0x000000, [0xFF4B45, 0xFFFFFF, 0xFF4B45]);
	room.sendAnnouncement("[👕] "+player.name+" ha puesto la camiseta: ARGJ para el team blue!",null,0xFFF992,"bold");
    }
}

function HURTitularRedFun(player){
    if (player.admin == true){
        room.setTeamColors(1, 213, 0x000000, [0xFFFFFF, 0xFFFFFF, 0xFF0000]);
	room.sendAnnouncement("[👕] "+player.name+" ha puesto la camiseta: HUR para el team red!",null,0xFFF992,"bold");
    }
}

function HURTitularBlueFun(player){
    if (player.admin == true){
        room.setTeamColors(2, 213, 0x000000, [0xFFFFFF, 0xFFFFFF, 0xFF0000]);
	room.sendAnnouncement("[👕] "+player.name+" ha puesto la camiseta: HUR para el team blue!",null,0xFFF992,"bold");
    }
}

function CHITitularRedFun(player){
    if (player.admin == true){
        room.setTeamColors(1, 60, 0xf2c96c, [0xFF0505]);
	room.sendAnnouncement("[👕] "+player.name+" ha puesto la camiseta: CHI para el team red!",null,0xFFF992,"bold");
    }
}

function CHITitularBlueFun(player){
    if (player.admin == true){
        room.setTeamColors(2, 60, 0xf2c96c, [0xFF0505]);
	room.sendAnnouncement("[👕] "+player.name+" ha puesto la camiseta: CHI para el team blue!",null,0xFFF992,"bold");
    }
}

function ARGTitularRedFun(player){
    if (player.admin == true){
        room.setTeamColors(1, 180, 0x333A3C, [0xEFF6FC, 0xBBE3F4, 0xEFF6FC]);
	room.sendAnnouncement("[👕] "+player.name+" ha puesto la camiseta: ARG para el team red!",null,0xFFF992,"bold");
    }
}

function ARGTitularBlueFun(player){
    if (player.admin == true){
        room.setTeamColors(2, 180, 0x333A3C, [0xEFF6FC, 0xBBE3F4, 0xEFF6FC]);
	room.sendAnnouncement("[👕] "+player.name+" ha puesto la camiseta: ARG para el team blue!",null,0xFFF992,"bold");
    }
}

function UYTitularRedFun(player){
    if (player.admin == true){
        room.setTeamColors(1, 180, 0x000000, [0x8198CE]);
	room.sendAnnouncement("[👕] "+player.name+" ha puesto la camiseta: UY para el team red!",null,0xFFF992,"bold");
    }
}

function UYTitularBlueFun(player){
    if (player.admin == true){
        room.setTeamColors(2, 180, 0x000000, [0x8198CE]);
	room.sendAnnouncement("[👕] "+player.name+" ha puesto la camiseta: UY para el team blue!",null,0xFFF992,"bold");
    }
}

function BRTitularRedFun(player){
    if (player.admin == true){
        room.setTeamColors(1, 220, 0x038434, [0xF8DD2E]);
	room.sendAnnouncement("[👕] "+player.name+" ha puesto la camiseta: BR para el team red!",null,0xFFF992,"bold");
    }
}

function BRTitularBlueFun(player){
    if (player.admin == true){
        room.setTeamColors(2, 220, 0x038434, [0xF8DD2E]);
	room.sendAnnouncement("[👕] "+player.name+" ha puesto la camiseta: BR para el team blue!",null,0xFFF992,"bold");
    }
}

function COLTitularRedFun(player){
    if (player.admin == true){
        room.setTeamColors(1, 90, 0xFFFFFF, [0xFFF700, 0x040077, 0xFF0000]);
	room.sendAnnouncement("[👕] "+player.name+" ha puesto la camiseta: COL para el team red!",null,0xFFF992,"bold");
    }
}

function COLTitularBlueFun(player){
    if (player.admin == true){
        room.setTeamColors(2, 90, 0xFFFFFF, [0xFFF700, 0x040077, 0xFF0000]);
	room.sendAnnouncement("[👕] "+player.name+" ha puesto la camiseta: COL para el team blue!",null,0xFFF992,"bold");
    }
}

function Discord(player,message){
    room.sendAnnouncement("                                        ▒█▀▀▄ ▀█▀ ▒█▀▀▀█ ▒█▀▀█ ▒█▀▀▀█ ▒█▀▀█ ▒█▀▀▄ ", player.id, 0x9250FD, "bold")
    room.sendAnnouncement("                                        ▒█░▒█ ▒█░ ░▀▀▀▄▄ ▒█░░░ ▒█░░▒█ ▒█▄▄▀ ▒█░▒█ ", player.id, 0x8466FD, "bold")
    room.sendAnnouncement("                                        ▒█▄▄▀ ▄█▄ ▒█▄▄▄█ ▒█▄▄█ ▒█▄▄▄█ ▒█░▒█ ▒█▄▄▀ ", player.id, 0x7B73FD, "bold");
    room.sendAnnouncement("                                        💬  https://discord.gg/H4UPFpDJyA ⬅⬅⬅ 𝗙𝘂𝘁𝘀𝗮𝗹 𝗖𝗼𝗺𝗺𝘂𝗻𝗶𝘁𝘆 [𝗡𝘂𝗲𝘃𝗼]", player.id, 0xF6FF43, "bold");
    room.sendAnnouncement("                                        💬  https://discord.gg/wmX35hKQrv ⬅⬅⬅ 𝗙𝘂𝘁𝘀𝗮𝗹 𝗟𝗲𝗮𝗴𝘂𝗲 [𝗟𝗶𝗴𝗮]", player.id, 0xF6FF43, "bold");

    return false;
}

function afk(player,message){
    message = message.split(" ");
	if (players.length != 1 && player.team != Team.SPECTATORS) {
		if (player.team == Team.RED && streak > 0 && room.getScores() == null) {
			room.setPlayerTeam(player.id, Team.SPECTATORS);
		}
		else {
			room.sendAnnouncement("[📄] No podés ser AFK mientras estás en un equipo !", player.id,0xF64444);
			return false;
		}
	}
	else if (players.length == 1 && !getAFK(player)) {
		room.setPlayerTeam(player.id, Team.SPECTATORS);
	}
	setAFK(player, !getAFK(player));
	room.sendAnnouncement(player.name + (getAFK(player) ? " está afk !" : " Ya esta para jugar! "));
	getAFK(player) ? updateRoleOnPlayerOut() : updateRoleOnPlayerIn();
    localStorage.getItem(getAuth(player)) ? stats = JSON.parse(localStorage.getItem(getAuth(player))) : stats = [0, 0, 0, 0, "0.00", 0, 0, 0, 0, "0.00", "player"];
    setTimeout (() => { if (getAFK(player) && stats[Ss.RL] != "vip"){room.kickPlayer(player.id,"Tiempo de afk excedido",false) } },30 * 60 * 1000)
    return false;
}

function showAfks(player,message){
    message = message.split(" ");
	var cstm = "[PV] Lista de AFK : ";
	for (var i = 0; i < extendedP.length; i++) {
		if (room.getPlayer(extendedP[i][eP.ID]) != null && getAFK(room.getPlayer(extendedP[i][eP.ID]))) {
			if (140 - cstm.length < (room.getPlayer(extendedP[i][eP.ID]).name + ", ").length) {
				room.sendAnnouncement(cstm, player.id);
				cstm = "... ";
			}
			cstm += room.getPlayer(extendedP[i][eP.ID]).name + ", ";
		}
	}
	if (cstm == "[PV] Lista de AFK : ") {
		room.sendAnnouncement("[PV] No hay nadie en la lista de AFK !", player.id,0xF64444);
		return false;
	}
	cstm = cstm.substring(0, cstm.length - 2);
	cstm += ".";
    room.sendAnnouncement(cstm, player.id);
    
    return false;
}

function listadeRangos(player,message){ // 5/15/25/35/45/60/70/90/130/160/180/200/400
    message = message.split(" ");
	var stats;
	localStorage.getItem(getAuth(player)) ? stats = JSON.parse(localStorage.getItem(getAuth(player))) : stats = [0, 0, 0, 0, "0.00", 0, 0, 0, 0, "0.00"];
        room.sendAnnouncement("[📄] 𝗥𝗮𝗻𝗴𝗼𝘀 𝗱𝗶𝘀𝗽𝗼𝗻𝗶𝗯𝗹𝗲𝘀:", player.id,0xFF7900,"bold");
        room.sendAnnouncement("㋡ 「𝗜𝗻𝗶𝗰𝗶𝗮𝗻𝘁𝗲」 : 𝟬 𝗣𝗚 ", player.id,0xDDD4DB,"bold");
        room.sendAnnouncement("🎖️ 「𝗣𝗿𝗶𝗻𝗰𝗶𝗽𝗶𝗮𝗻𝘁𝗲」 : 𝟱 𝗣𝗚 ", player.id,0x2EFEF7,"bold");
        room.sendAnnouncement("😎 「𝗔𝗽𝗿𝗲𝗻𝗱𝗶𝘇」 : 𝟭𝟱 𝗣𝗚 ", player.id,0x04B404,"bold");
        room.sendAnnouncement("⚽ 「𝗣𝗿𝗼𝗳𝗲𝘀𝗶𝗼𝗻𝗮𝗹」 : 𝟮𝟱 𝗣𝗚 ", player.id,0xFE2E2E,"bold");
        room.sendAnnouncement("👿 「𝗜𝗺𝗽𝗮𝗿𝗮𝗯𝗹𝗲」 : 𝟯𝟱 𝗣𝗚 ", player.id,0x73EC59,"bold");
        room.sendAnnouncement("👽 「𝗩𝗲𝘁𝗲𝗿𝗮𝗻𝗼」 : 𝟰𝟱 𝗣𝗚 ", player.id,0xFA58DF,"bold");
        room.sendAnnouncement("💪 「𝗥𝗲𝘃𝗲𝗹𝗮𝗰𝗶𝗼𝗻」 : 𝟲𝟬 𝗣𝗚 ", player.id,0xEC77CE,"bold");
        room.sendAnnouncement("👿 「𝐄𝐱𝐩𝐞𝐫𝐭𝐨」 : 𝟳𝟬 𝗣𝗚 ", player.id,0xBFFF00,"bold");
        room.sendAnnouncement("💲 「𝗟𝗲𝘆𝗲𝗻𝗱𝗮」 : 𝟵𝟬 𝗣𝗚 ", player.id,0xFFC375,"bold");
        room.sendAnnouncement("👑 「𝗖𝗿𝗮𝗰𝗸」 : 𝟭𝟯𝟬 𝗣𝗚 ", player.id,0xFFFF00,"bold");
        room.sendAnnouncement("✓ 「𝗖𝗮𝗺𝗽𝗲𝗼𝗻」 : 𝟭𝟲𝟬 𝗣𝗚 ", player.id,0x0040FF,"bold");
        room.sendAnnouncement("🔹 「𝗘𝘀𝘁𝗿𝗲𝗹𝗹𝗮」 : 𝟭𝟴𝟬 𝗣𝗚 ", player.id,0xFF8000,"bold");
        room.sendAnnouncement("🔸 「𝗦𝘂𝗽𝗲𝗿-𝗘𝘀𝘁𝗿𝗲𝗹𝗹𝗮」 : 𝟮𝟬𝟬 𝗣𝗚 ", player.id,0xFF8000,"bold");
        room.sendAnnouncement("🔥 「𝐆𝐎𝐀𝐓」 : 𝟰𝟬𝟬 𝗣𝗚 ", player.id,0x73EC59,"bold");

} 

function showMe(player,message){
    message = message.split(" ");
	var stats;
	localStorage.getItem(getAuth(player)) ? stats = JSON.parse(localStorage.getItem(getAuth(player))) : stats = [0, 0, 0, 0, "0.00", 0, 0, 0, 0, "0.00"];
	room.sendAnnouncement("「📄」 Stats de " + player.name + ": 🎮 Partidos Jugados: " + stats[Ss.GA] + ", ✅ Victorias: " + stats[Ss.WI] + ", ❌ Derrotas: " + stats[Ss.LS] + ", WR: " + stats[Ss.WR] + "%, ⚽️ Goles: " + stats[Ss.GL] + ", 👟 Asistencias: " + stats[Ss.AS] + ", 🤚 GK: " + stats[Ss.GK] + ", 🤚 Vallas: " + stats[Ss.CS] + ", 🤚 CS%: " + stats[Ss.CP] + "%", player.id,0x73EC59,"bold");
	room.sendAnnouncement("「👓」 Este mensaje solamente lo podés ver vos, si querés mostrar tus stats usa el comando '!mostrarstats'!", player.id,0xFF7900,"bold");
    return false;
}

function mostrarStats(player,message){
    message = message.split(" ");
	var stats;
	localStorage.getItem(getAuth(player)) ? stats = JSON.parse(localStorage.getItem(getAuth(player))) : stats = [0, 0, 0, 0, "0.00", 0, 0, 0, 0, "0.00"];
        room.sendAnnouncement("[📄] El jugador " + player.name + " mostró sus stats! [!mostrarstats]",null,0xFF7900,"bold")
	room.sendAnnouncement("[📄] Stats de " + player.name + ": 🎮 Partidos Jugados: " + stats[Ss.GA] + ", ✅ Victorias: " + stats[Ss.WI] + ", ❌ Derrotas: " + stats[Ss.LS] + ", WR: " + stats[Ss.WR] + "%, ⚽️ Goles: " + stats[Ss.GL] + ", 👟 Asistencias: " + stats[Ss.AS] + ", 🤚 GK: " + stats[Ss.GK] + ", 🤚 Vallas: " + stats[Ss.CS] + ", 🤚 CS%: " + stats[Ss.CP] + "%", null,0x73EC59,"bold");
    return false;
}

function showGames(player,message){
    message = message.split(" ");
	var tableau = [];
	try{
	Object.keys(localStorage).forEach(function (key) { if (!["player_name", "view_mode", "geo", "avatar", "player_auth_key"].includes(key)) { tableau.push([(JSON.parse(localStorage.getItem(key))[Ss.NK]), (JSON.parse(localStorage.getItem(key))[Ss.GA])]); } });
	}
	catch{

	}
	if (tableau.length < 5) {
		room.sendAnnouncement("[PV] Aún no se han jugado partidos suficientes.", player.id,0xFF0000);
		return false;
	}
	tableau.sort(function (a, b) { return b[1] - a[1]; });
	room.sendAnnouncement("[📄] 🎮 Partidos Jugados> #1 " + tableau[0][0] + ": " + tableau[0][1] + " #2 " + tableau[1][0] + ": " + tableau[1][1] + " #3 " + tableau[2][0] + ": " + tableau[2][1] + " #4 " + tableau[3][0] + ": " + tableau[3][1] + " #5 " + tableau[4][0] + ": " + tableau[4][1], player.id,0x73EC59);

    return false;
}

function wins(player,message){
    message = message.split(" ");
	var tableau = [];
	try{
	Object.keys(localStorage).forEach(function (key) { if (!["player_name", "view_mode", "geo", "avatar", "player_auth_key"].includes(key)) { tableau.push([(JSON.parse(localStorage.getItem(key))[Ss.NK]), (JSON.parse(localStorage.getItem(key))[Ss.WI])]); } });
	}
	catch{

	}
	if (tableau.length < 5) {
		room.sendAnnouncement("[PV] Aún no se han jugado partidos suficientes.", player.id,0x73EC59);
		return false;
	}
	tableau.sort(function (a, b) { return b[1] - a[1]; });
	room.sendAnnouncement("[📄] ✅ Victorias> #1 " + tableau[0][0] + ": " + tableau[0][1] + " #2 " + tableau[1][0] + ": " + tableau[1][1] + " #3 " + tableau[2][0] + ": " + tableau[2][1] + " #4 " + tableau[3][0] + ": " + tableau[3][1] + " #5 " + tableau[4][0] + ": " + tableau[4][1], player.id,0x73EC59);

    return false;
}

function showGoals(player,message){
    message = message.split(" ");

	var tableau = [];
	try{
	Object.keys(localStorage).forEach(function (key) { if (!["player_name", "view_mode", "geo", "avatar", "player_auth_key"].includes(key)) { tableau.push([(JSON.parse(localStorage.getItem(key))[Ss.NK]), (JSON.parse(localStorage.getItem(key))[Ss.GL])]); } });
	}
	catch{

	}
	if (tableau.length < 5) {
		room.sendAnnouncement("[📄] Aún no se han jugado partidos suficientes.", player.id,0x73EC59);
		return false;
	}
	tableau.sort(function (a, b) { return b[1] - a[1]; });
	room.sendAnnouncement("[📄] ⚽️ Goles> #1 " + tableau[0][0] + ": " + tableau[0][1] + " #2 " + tableau[1][0] + ": " + tableau[1][1] + " #3 " + tableau[2][0] + ": " + tableau[2][1] + " #4 " + tableau[3][0] + ": " + tableau[3][1] + " #5 " + tableau[4][0] + ": " + tableau[4][1], player.id,0x73EC59);

    return false;
}

function showAsists(player,message){
	message = message.split(" ");
	try{
	var tableau = [];
	Object.keys(localStorage).forEach(function (key) { if (!["player_name", "view_mode", "geo", "avatar", "player_auth_key"].includes(key)) { tableau.push([(JSON.parse(localStorage.getItem(key))[Ss.NK]), (JSON.parse(localStorage.getItem(key))[Ss.AS])]); } });
	}
	catch{

	}
	if (tableau.length < 5) {
		room.sendAnnouncement("[PV] Aún no se han jugado partidos suficientes.", player.id);
		return false;
	}
	tableau.sort(function (a, b) { return b[1] - a[1]; });
	room.sendAnnouncement("[📄] 👟 Asistencias> #1 " + tableau[0][0] + ": " + tableau[0][1] + " #2 " + tableau[1][0] + ": " + tableau[1][1] + " #3 " + tableau[2][0] + ": " + tableau[2][1] + " #4 " + tableau[3][0] + ": " + tableau[3][1] + " #5 " + tableau[4][0] + ": " + tableau[4][1], player.id,0x73EC59);

    return false;
}

function showCs(player,message){//!invictos
    message = message.split(" ");
	var tableau = [];
	try{
	Object.keys(localStorage).forEach(function (key) { if (!["player_name", "view_mode", "geo", "avatar", "player_auth_key"].includes(key)) { tableau.push([(JSON.parse(localStorage.getItem(key))[Ss.NK]), (JSON.parse(localStorage.getItem(key))[Ss.CS])]); } });
	}
	catch{

	}
	if (tableau.length < 5) {
		room.sendAnnouncement("[PV] Aún no se han jugado partidos suficientes.", player.id,0x73EC59);
		return false;
	}
	tableau.sort(function (a, b) { return b[1] - a[1]; });
	room.sendAnnouncement("[📄] 🤚 Vallas Invictas> #1 " + tableau[0][0] + ": " + tableau[0][1] + " #2 " + tableau[1][0] + ": " + tableau[1][1] + " #3 " + tableau[2][0] + ": " + tableau[2][1] + " #4 " + tableau[3][0] + ": " + tableau[3][1] + " #5 " + tableau[4][0] + ": " + tableau[4][1], player.id,0x73EC59);

    return false;
}

function giveClaim(player,message){//!admin
    message = message.split(" ");
	if (message[1] == adminPassword) {
		room.setPlayerAdmin(player.id, true);
		var stats;
		localStorage.getItem(getAuth(player)) ? stats = JSON.parse(localStorage.getItem(getAuth(player))) : stats = [0, 0, 0, 0, "0.00", 0, 0, 0, 0, "0.00", "player", player.name];
		if (stats[Ss.RL] != "master") {
			stats[Ss.RL] = "master";
			room.sendAnnouncement("[📄] "+player.name+" se ha logeado como admin del host!",null,0xF8FF00,"bold");
			localStorage.setItem(getAuth(player), JSON.stringify(stats));
		}
    }
    
    return false;
}

function setAdmin(player,message){//!setadmin | !admin
    message = message.split(" ");

	if (localStorage.getItem(getAuth(player)) && JSON.parse(localStorage.getItem(getAuth(player)))[Ss.RL] == "master") {
		if (message.length >= 2 && message[1][0] == "#") {
			message[1] = message[1].substring(1, message[1].length);
			if (!Number.isNaN(Number.parseInt(message[1])) && room.getPlayer(Number.parseInt(message[1])) != null) {
				var stats;
				localStorage.getItem(getAuth(room.getPlayer(Number.parseInt(message[1])))) ? stats = JSON.parse(localStorage.getItem(getAuth(room.getPlayer(Number.parseInt(message[1]))))) : stats = [0, 0, 0, 0, "0.00", 0, 0, 0, 0, "0.00", "player", room.getPlayer(Number.parseInt(message[1])).name];
				if (stats[Ss.RL] == "player") {
					stats[Ss.RL] = "admin";
					localStorage.setItem(getAuth(room.getPlayer(Number.parseInt(message[1]))), JSON.stringify(stats));
					room.setPlayerAdmin(room.getPlayer(Number.parseInt(message[1])).id, true);
					room.sendAnnouncement(room.getPlayer(Number.parseInt(message[1])).name + " ahora es el administrador del host !");
				}
			}
		}
    }
    
    return false;
}

function setVip(player,message){//!setadmin | !admin
    message = message.split(" ");

	if (localStorage.getItem(getAuth(player)) && JSON.parse(localStorage.getItem(getAuth(player)))[Ss.RL] == "master") {
		if (message.length >= 2 && message[1][0] == "#") {
			message[1] = message[1].substring(1, message[1].length);
			if (!Number.isNaN(Number.parseInt(message[1])) && room.getPlayer(Number.parseInt(message[1])) != null) {
				var stats;
				localStorage.getItem(getAuth(room.getPlayer(Number.parseInt(message[1])))) ? stats = JSON.parse(localStorage.getItem(getAuth(room.getPlayer(Number.parseInt(message[1]))))) : stats = [0, 0, 0, 0, "0.00", 0, 0, 0, 0, "0.00", "player", room.getPlayer(Number.parseInt(message[1])).name];
				if (stats[Ss.RL] == "player") {
					stats[Ss.RL] = "vip";
					localStorage.setItem(getAuth(room.getPlayer(Number.parseInt(message[1]))), JSON.stringify(stats));
					room.sendAnnouncement("[👑]" + room.getPlayer(Number.parseInt(message[1])).name + " ahora es jugador VIP !");
				}
			}
		}
    }
    
    return false;
}



function removeVip(player,message){// !setplayer | !removeadmin
    message = message.split(" ");

	if (localStorage.getItem(getAuth(player)) && JSON.parse(localStorage.getItem(getAuth(player)))[Ss.RL] == "master") {
		if (message.length >= 2 && message[1][0] == "#") {
			message[1] = message[1].substring(1, message[1].length);
			if (!Number.isNaN(Number.parseInt(message[1])) && room.getPlayer(Number.parseInt(message[1])) != null) {
				var stats;
				localStorage.getItem(getAuth(room.getPlayer(Number.parseInt(message[1])))) ? stats = JSON.parse(localStorage.getItem(getAuth(room.getPlayer(Number.parseInt(message[1]))))) : stats = [0, 0, 0, 0, "0.00", 0, 0, 0, 0, "0.00", "player", room.getPlayer(Number.parseInt(message[1])).name];
				if (stats[Ss.RL] == "vip") {
					room.sendAnnouncement("[👤]" + room.getPlayer(Number.parseInt(message[1])).name + " Ya no es jugador VIP !");
					stats[Ss.RL] = "player";
					localStorage.setItem(getAuth(room.getPlayer(Number.parseInt(message[1]))), JSON.stringify(stats));
				}
			}
		}
    }
    
    return false;
}



function removeAdmin(player,message){// !setplayer | !removeadmin
    message = message.split(" ");

	if (localStorage.getItem(getAuth(player)) && JSON.parse(localStorage.getItem(getAuth(player)))[Ss.RL] == "master") {
		if (message.length >= 2 && message[1][0] == "#") {
			message[1] = message[1].substring(1, message[1].length);
			if (!Number.isNaN(Number.parseInt(message[1])) && room.getPlayer(Number.parseInt(message[1])) != null) {
				var stats;
				localStorage.getItem(getAuth(room.getPlayer(Number.parseInt(message[1])))) ? stats = JSON.parse(localStorage.getItem(getAuth(room.getPlayer(Number.parseInt(message[1]))))) : stats = [0, 0, 0, 0, "0.00", 0, 0, 0, 0, "0.00", "player", room.getPlayer(Number.parseInt(message[1])).name];
				if (stats[Ss.RL] == "admin") {
					room.sendAnnouncement(room.getPlayer(Number.parseInt(message[1])).name + " Ya no es administrador del host !");
					stats[Ss.RL] = "player";
					localStorage.setItem(getAuth(room.getPlayer(Number.parseInt(message[1]))), JSON.stringify(stats));
					room.setPlayerAdmin(room.getPlayer(Number.parseInt(message[1])).id, false);
				}
			}
		}
    }
    
    return false;
}

function showMutes(player,message){//!mutes !mutelist
    message = message.split(" ");

	var cstm = "[PV] Lista de muteados : ";
	for (var i = 0; i < extendedP.length; i++) {
		if (room.getPlayer(extendedP[i][eP.ID]) != null && getMute(room.getPlayer(extendedP[i][eP.ID]))) {
			if (140 - cstm.length < (room.getPlayer(extendedP[i][eP.ID]).name + "[" + (extendedP[i][eP.ID]) + "], ").length) {
				room.sendAnnouncement(cstm, player.id);
				cstm = "... ";
			}
			cstm += room.getPlayer(extendedP[i][eP.ID]).name + "[" + (extendedP[i][eP.ID]) + "], ";
		}
	}
	if (cstm == "[PV] Lista de Muteados : ") {
		room.sendAnnouncement("[PV] No hay nadie en la lista de muteados !", player.id);
		return false;
	}
	cstm = cstm.substring(0, cstm.length - 2);
	cstm += ".";
    room.sendAnnouncement(cstm, player.id);
        
    return false;
}

function mute(player,message){//!mute
    message = message.split(" ");

	try{
	if (player.admin) {
		updateTeams();
		var timeOut;
		if (!Number.isNaN(Number.parseInt(message[1])) && message.length > 1) {
			if (Number.parseInt(message[1]) > 0) {
				timeOut = Number.parseInt(message[1]) * 60 * 1000;
			}
			else {
				timeOut = 3 * 60 * 1000;
			}
			if (message[2].length > 1 && message[2][0] == "#") {
				message[2] = message[2].substring(1, message[2].length);
				if (!Number.isNaN(Number.parseInt(message[2])) && room.getPlayer(Number.parseInt(message[2])) != null) {
					if (room.getPlayer(Number.parseInt(message[2])).admin || getMute(room.getPlayer(Number.parseInt(message[2])))) {
						return false;
					}
					setTimeout(function (player) { setMute(player, false); }, timeOut, room.getPlayer(Number.parseInt(message[2])));
					setMute(room.getPlayer(Number.parseInt(message[2])), true);
					room.sendAnnouncement(room.getPlayer(Number.parseInt(message[2])).name + " ha sido muteado por " + (timeOut / 60000) + " minutos !");
				}
			}
		}
		else if (Number.isNaN(Number.parseInt(message[1]))) {
			if (message[1].length > 1 && message[1][0] == "#") {
				message[1] = message[1].substring(1, message[1].length);
				if (!Number.isNaN(Number.parseInt(message[1])) && room.getPlayer(Number.parseInt(message[1])) != null) {
					if (room.getPlayer(Number.parseInt(message[1])).admin || getMute(room.getPlayer(Number.parseInt(message[1])))) {
						return false;
					}
					setTimeout(function (player) { setMute(player, false); }, 3 * 60 * 1000, room.getPlayer(Number.parseInt(message[1])));
					setMute(room.getPlayer(Number.parseInt(message[1])), true);
					room.sendAnnouncement(room.getPlayer(Number.parseInt(message[1])).name + " Te han muteado por 3 minutos!");
				}
			}
		}
	}
	}
	catch{
		room.sendAnnouncement("Algo ha fallado!",player.id);
	}
    
    return false;
}

function unmute(player,message){
    message = message.split(" ");

	if (player.admin && message.length >= 2) {
		if (message[1] == "all") {
			extendedP.forEach((ePlayer) => { ePlayer[eP.MUTE] = false; });
			room.sendAnnouncement("Se ha limpiado la lista de muteados");
		}
		else if (!Number.isNaN(Number.parseInt(message[1])) && room.getPlayer(Number.parseInt(message[1])) != null && getMute(room.getPlayer(Number.parseInt(message[1])))) {
			setMute(room.getPlayer(Number.parseInt(message[1])), false);
			room.sendAnnouncement(room.getPlayer(Number.parseInt(message[1])).name + " ha sido desmuteado !");
		}
		else if (Number.isNaN(Number.parseInt(message[1]))) {
			if (message[1].length > 1 && message[1][0] == "#") {
				message[1] = message[1].substring(1, message[1].length);
				if (!Number.isNaN(Number.parseInt(message[1])) && room.getPlayer(Number.parseInt(message[1])) != null && getMute(room.getPlayer(Number.parseInt(message[1])))) {
					setMute(room.getPlayer(Number.parseInt(message[1])), false);
					room.sendAnnouncement(room.getPlayer(Number.parseInt(message[1])).name + " ha sido desmuteado!");
				}
			}
		}
    }
    
    return false;
}

/* PLAYER FUNCTIONS */

function updateTeams() { // update the players' list and all the teams' list
	players = room.getPlayerList().filter((player) => player.id != null && !getAFK(player));
	teamR = players.filter(p => p.team === Team.RED);
	teamB = players.filter(p => p.team === Team.BLUE);
	teamS = players.filter(p => p.team === Team.SPECTATORS);
}

function handleInactivity() { // handles inactivity : players will be kicked after afkLimit
	if (countAFK && (teamR.length + teamB.length) > 1) {
		for (var i = 0; i < teamR.length ; i++) {
			setActivity(teamR[i], getActivity(teamR[i]) + 1);
		}
		for (var i = 0; i < teamB.length ; i++) {
			setActivity(teamB[i], getActivity(teamB[i]) + 1);
		}
	}
	for (var i = 0; i < extendedP.length ; i++) {
		if (extendedP[i][eP.ACT] == 40 * (2/3 * afkLimit)) {
			room.sendAnnouncement("[PV] ⛔ @" + room.getPlayer(extendedP[i][eP.ID]).name + ", Si no te moves/escribís dentro de " + Math.floor(afkLimit / 3) + " segundos, seras kickeado!",null,0xFF7900,"bold", extendedP[i][eP.ID]);
		}
		if (extendedP[i][eP.ACT] >= 40 * afkLimit) {
			extendedP[i][eP.ACT] = 0;
            if (room.getScores().time <= afkLimit - 0.5) {
				setTimeout(() => { !inChooseMode ? quickRestart() : room.stopGame(); }, 10);
			}
			room.kickPlayer(extendedP[i][eP.ID], "AFK", false);
		}
	}
}

function getAuth(player) {
	return extendedP.filter((a) => a[0] == player.id) != null ? extendedP.filter((a) => a[0] == player.id)[0][eP.AUTH] : null;
}

function getAFK(player) {
	return extendedP.filter((a) => a[0] == player.id) != null ? extendedP.filter((a) => a[0] == player.id)[0][eP.AFK] : null;
}

function setAFK(player, value) {
	extendedP.filter((a) => a[0] == player.id).forEach((player) => player[eP.AFK] = value);
}

function getActivity(player) {
	return extendedP.filter((a) => a[0] == player.id) != null ? extendedP.filter((a) => a[0] == player.id)[0][eP.ACT] : null;
}

function setActivity(player, value) {
	extendedP.filter((a) => a[0] == player.id).forEach((player) => player[eP.ACT] = value);
}

function getGK(player) {
	return extendedP.filter((a) => a[0] == player.id) != null ? extendedP.filter((a) => a[0] == player.id)[0][eP.GK] : null;
}

function setGK(player, value) {
	extendedP.filter((a) => a[0] == player.id).forEach((player) => player[eP.GK] = value);
}

function getMute(player) {
	return extendedP.filter((a) => a[0] == player.id) != null ? extendedP.filter((a) => a[0] == player.id)[0][eP.MUTE] : null;
}

function setMute(player, value) {
	extendedP.filter((a) => a[0] == player.id).forEach((player) => player[eP.MUTE] = value);
}

/* BALANCE & CHOOSE FUNCTIONS */

function updateRoleOnPlayerIn() {
	updateTeams();
	if (inChooseMode) {
		if (players.length == 6) {
			loadMap(bigMap, scoreLimitBig, timeLimitBig);
		}
		getSpecList(teamR.length <= teamB.length ? teamR[0] : teamB[0]);
	}
	balanceTeams();
}

function updateRoleOnPlayerOut() {
    updateTeams();
	if (room.getScores() != null) {
		var scores = room.getScores();
		if (players.length >= 2 * maxTeamSize && scores.time >= (5/6) * game.scores.timeLimit && teamR.length != teamB.length) {
			if (teamR.length < teamB.length) {
				if (scores.blue - scores.red == 2) {
					endGame(Team.BLUE);
					room.sendAnnouncement("🤖 Abandono detectado 🤖");
					setTimeout(() => { room.stopGame(); }, 100);
					return;
				}
			}
			else {
				if (scores.red - scores.blue == 2) {
					endGame(Team.RED);
					room.sendAnnouncement("🤖 Abandono detectado 🤖");
					setTimeout(() => { room.stopGame(); }, 100);
					return;
				}
			}
		}
	}
	if (inChooseMode) {
		if (players.length == 5) {
			loadMap(classicMap, scoreLimitClassic, timeLimitClassic);
		}
		if (teamR.length == 0 || teamB.length == 0) {
			teamR.length == 0 ? room.setPlayerTeam(teamS[0].id, Team.RED) : room.setPlayerTeam(teamS[0].id, Team.BLUE);
			return;
		}
		if (Math.abs(teamR.length - teamB.length) == teamS.length) {
    room.sendAnnouncement("                                        ▒█▀▀▄ ▀█▀ ▒█▀▀▀█ ▒█▀▀█ ▒█▀▀▀█ ▒█▀▀█ ▒█▀▀▄ ", null, 0x9250FD, "bold")
    room.sendAnnouncement("                                        ▒█░▒█ ▒█░ ░▀▀▀▄▄ ▒█░░░ ▒█░░▒█ ▒█▄▄▀ ▒█░▒█ ", null, 0x8466FD, "bold")
    room.sendAnnouncement("                                        ▒█▄▄▀ ▄█▄ ▒█▄▄▄█ ▒█▄▄█ ▒█▄▄▄█ ▒█░▒█ ▒█▄▄▀ ", null, 0x7B73FD, "bold");
    room.sendAnnouncement("                                        💬  https://discord.gg/H4UPFpDJyA ⬅⬅⬅ 𝗙𝘂𝘁𝘀𝗮𝗹 𝗖𝗼𝗺𝗺𝘂𝗻𝗶𝘁𝘆 [𝗡𝘂𝗲𝘃𝗼]", null, 0xF6FF43, "bold");
    room.sendAnnouncement("                                        💬  https://discord.gg/wmX35hKQrv ⬅⬅⬅ 𝗙𝘂𝘁𝘀𝗮𝗹 𝗟𝗲𝗮𝗴𝘂𝗲 [𝗟𝗶𝗴𝗮]", null, 0xF6FF43, "bold");
			deactivateChooseMode();
			resumeGame();
			var b = teamS.length;
			if (teamR.length > teamB.length && teamS.length > 0) {
				for (var i = 0 ; i < b ; i++) {
					setTimeout(() => { room.setPlayerTeam(teamS[0].id, Team.BLUE); }, 5*i);
				}
			}
			else {
				for (var i = 0 ; i < b ; i++) {
					setTimeout(() => { room.setPlayerTeam(teamS[0].id, Team.RED); }, 5*i);
				}
			}
			return;
		}
		if (streak == 0 && room.getScores() == null) {
			if (Math.abs(teamR.length - teamB.length) == 2) { // if someone left a team has 2 more players than the other one, put the last chosen guy back in his place so it's fair
    room.sendAnnouncement("                                                                                                           ░█▀▀▄ ░█▀▀▀█ ░█▄─░█ ─█▀▀█", player, 0xffcd2c, "normal", 0);
    room.sendAnnouncement("                                                                                                           ░█─░█ ░█──░█ ░█░█░█ ░█▄▄█", player, 0xea8f73, "normal", 0);
    room.sendAnnouncement("                                                                                                           ░█▄▄▀ ░█▄▄▄█ ░█──▀█ ░█─░█", player, 0xd757b3, "normal", 0);
    room.sendAnnouncement("                       Dona y obtene VIP + más beneficios!", player, 0xd733ff, "bold", 0);
    room.sendAnnouncement("                                                                                                          ➡➡  🔗 LINK: https://discord.gg/HJxrRxpWz7", player, 0xf1ff33, "bold");
				teamR.length > teamB.length ? room.setPlayerTeam(teamR[teamR.length - 1].id, Team.SPECTATORS) : room.setPlayerTeam(teamB[teamB.length - 1].id, Team.SPECTATORS);
			}
		}
		if (teamR.length == teamB.length && teamS.length < 2) {
			deactivateChooseMode();
			resumeGame();
			return;
		}
		capLeft ? choosePlayer() : getSpecList(teamR.length <= teamB.length ? teamR[0] : teamB[0]);
	}
	balanceTeams();
}

function balanceTeams() {
	if (!inChooseMode) {
		if (players.length == 1 && teamR.length == 0) {
            quickRestart();
            loadMap(aloneMap, 0, 0);
			room.setPlayerTeam(players[0].id, Team.RED);
		}
		else if (Math.abs(teamR.length - teamB.length) == teamS.length && teamS.length > 0) {
			const n = Math.abs(teamR.length - teamB.length);
			if (players.length == 2) {
				quickRestart();
				loadMap(classicMap, scoreLimitClassic, timeLimitClassic);
			}
			if (teamR.length > teamB.length) {
				for (var i = 0 ; i < n ; i++) {
					room.setPlayerTeam(teamS[i].id, Team.BLUE);
				}
			}
			else {
				for (var i = 0 ; i < n ; i++) {
					room.setPlayerTeam(teamS[i].id, Team.RED);
				}
			}
		}
		else if (Math.abs(teamR.length - teamB.length) > teamS.length) {
			const n = Math.abs(teamR.length - teamB.length);
			if (players.length == 1) {
				quickRestart();
				loadMap(aloneMap, 0, 0);
				room.setPlayerTeam(players[0].id, Team.RED);
				return;
			}
			else if (players.length == 5) {
				quickRestart();
				loadMap(classicMap, scoreLimitClassic, timeLimitClassic);
			}
			if (players.length == maxTeamSize * 2 - 1) {
				allReds = [];
				allBlues = [];
			}
			if (teamR.length > teamB.length) {
				for (var i = 0 ; i < n ; i++) {
					room.setPlayerTeam(teamR[teamR.length - 1 - i].id, Team.SPECTATORS);
				}
			}
			else {
				for (var i = 0 ; i < n ; i++) {
					room.setPlayerTeam(teamB[teamB.length - 1 - i].id, Team.SPECTATORS);
				}
			}
		}
		else if (Math.abs(teamR.length - teamB.length) < teamS.length && teamR.length != teamB.length) {
			room.pauseGame(true);
			activateChooseMode();
			choosePlayer();
		}
		else if (teamS.length >= 2 && teamR.length == teamB.length && teamR.length < maxTeamSize) {
			if (teamR.length == 2) {
				quickRestart();
				loadMap(bigMap, scoreLimitBig, timeLimitBig);
			}
			topBtn();
		}
	}
}

function choosePlayer() {
	clearTimeout(timeOutCap);
	if (teamR.length <= teamB.length && teamR.length != 0) {
		room.sendAnnouncement("⚔ Para elegir un jugador, Escribí un numero en orden de la lista de spec o usa 'top', 'random' o 'bottom'.", teamR[0].id);
		timeOutCap = setTimeout(function (player) { room.sendAnnouncement("⚔ ¡Rapido @" + player.name + "!, solo quedan " + Number.parseInt(chooseTime / 2) + " segundos para elegir !", player.id); timeOutCap = setTimeout(function (player) { room.kickPlayer(player.id, "⚔¡No elegiste a tiempo!", false); }, chooseTime * 500, teamR[0]); }, chooseTime * 1000, teamR[0]);
	}
	else if (teamB.length < teamR.length && teamB.length != 0) {
		room.sendAnnouncement("⚔ Para elegir un jugador, Escribí un numero en orden de la lista de spec o usa 'top', 'random' o 'bottom'.", teamB[0].id);
		timeOutCap = setTimeout(function (player) { room.sendAnnouncement("⚔ ¡Rapido @" + player.name + "!, solo quedan " + Number.parseInt(chooseTime / 2) + " segundos para elegir !", player.id); timeOutCap = setTimeout(function (player) { room.kickPlayer(player.id, "⚔¡No elegiste a tiempo!", false); }, chooseTime * 500, teamB[0]); }, chooseTime * 1000, teamB[0]);
	}
	if (teamR.length != 0 && teamB.length != 0) getSpecList(teamR.length <= teamB.length ? teamR[0] : teamB[0]);
}

function getSpecList(player) {
	var cstm = "[PV] Jugadores : ";
	for (var i = 0 ; i < teamS.length ; i++) {
		if (140 - cstm.length < (teamS[i].name + "[" + (i+1) + "], ").length) {
			room.sendAnnouncement(cstm, player.id);
			cstm = "... ";
		}
		cstm += teamS[i].name + "[" + (i+1) + "], ";
	}
	cstm = cstm.substring(0,cstm.length - 2);
	cstm += ".";
	room.sendAnnouncement(cstm, player.id);
}

/* STATS FUNCTIONS */

function getLastTouchOfTheBall() {
	const ballPosition = room.getBallPosition();
	updateTeams();
	for (var i = 0; i < players.length; i++) {
		if (players[i].position != null) {
			var distanceToBall = pointDistance(players[i].position, ballPosition);
			if (distanceToBall < triggerDistance) {
				!activePlay ? activePlay = true : null;
				if (lastTeamTouched == players[i].team && lastPlayersTouched[0] != null && lastPlayersTouched[0].id != players[i].id) {
					lastPlayersTouched[1] = lastPlayersTouched[0];
					lastPlayersTouched[0] = players[i];
				}
				lastTeamTouched = players[i].team;
			}
		}
	}
}

function getStats() { // gives possession, ball speed and GK of each team
	if (activePlay) {
		updateTeams();
		lastTeamTouched == Team.RED ? Rposs++ : Bposs++;
		var ballPosition = room.getBallPosition();
		point[1] = point[0];
		point[0] = ballPosition;
		ballSpeed = (pointDistance(point[0], point[1]) * 60 * 60 * 60)/15000;
		var k = [-1, Infinity];
		for (var i = 0; i < teamR.length; i++) {
			if (teamR[i].position.x < k[1]) {
				k[0] = teamR[i];
				k[1] = teamR[i].position.x;
			}
		}
		k[0] != -1 ? setGK(k[0], getGK(k[0]) + 1) : null;
		k = [-1, -Infinity];
		for (var i = 0; i < teamB.length; i++) {
			if (teamB[i].position.x > k[1]) {
				k[0] = teamB[i];
				k[1] = teamB[i].position.x;
			}
		}
		k[0] != -1 ? setGK(k[0], getGK(k[0]) + 1) : null;
		findGK();
	}
}

function updateStats() {
	if (players.length >= 2 * maxTeamSize && (game.scores.time >= (5 / 6) * game.scores.timeLimit || game.scores.red == game.scores.scoreLimit || game.scores.blue == game.scores.scoreLimit) && allReds.length >= maxTeamSize && allBlues.length >= maxTeamSize) {
		var stats;
		for (var i = 0; i < allReds.length; i++) {
			localStorage.getItem(getAuth(allReds[i])) ? stats = JSON.parse(localStorage.getItem(getAuth(allReds[i]))) : stats = [0, 0, 0, 0, "0.00", 0, 0, 0, 0, "0.00", "player", allReds[i].name];
			stats[Ss.GA]++;
			lastWinner == Team.RED ? stats[Ss.WI]++ : lastWinner == Team.BLUE ? stats[Ss.LS]++ : stats[Ss.DR]++;
			stats[Ss.WR] = (100 * stats[Ss.WI] / stats[Ss.GA]).toPrecision(3);
			localStorage.setItem(getAuth(allReds[i]), JSON.stringify(stats));
		}
		for (var i = 0; i < allBlues.length; i++) {
			localStorage.getItem(getAuth(allBlues[i])) ? stats = JSON.parse(localStorage.getItem(getAuth(allBlues[i]))) : stats = [0, 0, 0, 0, "0.00", 0, 0, 0, 0, "0.00", "player", allBlues[i].name];
			stats[Ss.GA]++;
			lastWinner == Team.BLUE ? stats[Ss.WI]++ : lastWinner == Team.RED ? stats[Ss.LS]++ : stats[Ss.DR]++;
			stats[Ss.WR] = (100 * stats[Ss.WI] / stats[Ss.GA]).toPrecision(3);
			localStorage.setItem(getAuth(allBlues[i]), JSON.stringify(stats));
		}
		for (var i = 0; i < game.goals.length; i++) {
			if (game.goals[i].striker != null) {
				if ((allBlues.concat(allReds)).findIndex((player) => player.id == game.goals[i].striker.id) != -1) {
					stats = JSON.parse(localStorage.getItem(getAuth(game.goals[i].striker)));
					stats[Ss.GL]++;
					localStorage.setItem(getAuth(game.goals[i].striker), JSON.stringify(stats));
				}
			}
			if (game.goals[i].assist != null) {
				if ((allBlues.concat(allReds)).findIndex((player) => player.name == game.goals[i].assist.name) != -1) {
					stats = JSON.parse(localStorage.getItem(getAuth(game.goals[i].assist)));
					stats[Ss.AS]++;
					localStorage.setItem(getAuth(game.goals[i].assist), JSON.stringify(stats));
				}
			}
		}
		if (allReds.findIndex((player) => player.id == GKList[0].id) != -1) {
			stats = JSON.parse(localStorage.getItem(getAuth(GKList[0])));
			stats[Ss.GK]++;
			game.scores.blue == 0 ? stats[Ss.CS]++ : null;
			stats[Ss.CP] = (100 * stats[Ss.CS] / stats[Ss.GK]).toPrecision(3);
			localStorage.setItem(getAuth(GKList[0]), JSON.stringify(stats));
		}
		if (allBlues.findIndex((player) => player.id == GKList[1].id) != -1) {
			stats = JSON.parse(localStorage.getItem(getAuth(GKList[1])));
			stats[Ss.GK]++;
			game.scores.red == 0 ? stats[Ss.CS]++ : null;
			stats[Ss.CP] = (100 * stats[Ss.CS] / stats[Ss.GK]).toPrecision(3);
			localStorage.setItem(getAuth(GKList[1]), JSON.stringify(stats));
		}
	}
}

function findGK() {
	var tab = [[-1,""], [-1,""]];
	for (var i = 0; i < extendedP.length ; i++) {
		if (room.getPlayer(extendedP[i][eP.ID]) != null && room.getPlayer(extendedP[i][eP.ID]).team == Team.RED) {
			if (tab[0][0] < extendedP[i][eP.GK]) {
				tab[0][0] = extendedP[i][eP.GK];
				tab[0][1] = room.getPlayer(extendedP[i][eP.ID]);
			}
		}
		else if (room.getPlayer(extendedP[i][eP.ID]) != null && room.getPlayer(extendedP[i][eP.ID]).team == Team.BLUE) {
			if (tab[1][0] < extendedP[i][eP.GK]) {
				tab[1][0] = extendedP[i][eP.GK];
				tab[1][1] = room.getPlayer(extendedP[i][eP.ID]);
			}
		}
	}
	GKList = [tab[0][1], tab[1][1]];
}

setInterval(() => {
	var tableau = [];
	try{
	if (statNumber % 5 == 0) {
		Object.keys(localStorage).forEach(function (key) { if (!["player_name", "view_mode", "geo", "avatar", "player_auth_key"].includes(key)) { tableau.push([(JSON.parse(localStorage.getItem(key))[Ss.NK]), (JSON.parse(localStorage.getItem(key))[Ss.GA])]); } });
		if (tableau.length < 5) {
			return false;
		}
		tableau.sort(function (a, b) { return b[1] - a[1]; });
		room.sendAnnouncement("Partidos Jugados> #1 " + tableau[0][0] + ": " + tableau[0][1] + " #2 " + tableau[1][0] + ": " + tableau[1][1] + " #3 " + tableau[2][0] + ": " + tableau[2][1] + " #4 " + tableau[3][0] + ": " + tableau[3][1] + " #5 " + tableau[4][0] + ": " + tableau[4][1]);
	}
	if (statNumber % 5 == 1) {
		Object.keys(localStorage).forEach(function (key) { if (!["player_name", "view_mode", "geo", "avatar", "player_auth_key"].includes(key)) { tableau.push([(JSON.parse(localStorage.getItem(key))[Ss.NK]), (JSON.parse(localStorage.getItem(key))[Ss.WI])]); } });
		if (tableau.length < 5) {
			return false;
		}
		tableau.sort(function (a, b) { return b[1] - a[1]; });
		room.sendAnnouncement("Victorias> s#1 " + tableau[0][0] + ": " + tableau[0][1] + " #2 " + tableau[1][0] + ": " + tableau[1][1] + " #3 " + tableau[2][0] + ": " + tableau[2][1] + " #4 " + tableau[3][0] + ": " + tableau[3][1] + " #5 " + tableau[4][0] + ": " + tableau[4][1]);
	}
	if (statNumber % 5 == 2) {
		Object.keys(localStorage).forEach(function (key) { if (!["player_name", "view_mode", "geo", "avatar", "player_auth_key"].includes(key)) { tableau.push([(JSON.parse(localStorage.getItem(key))[Ss.NK]), (JSON.parse(localStorage.getItem(key))[Ss.GL])]); } });
		if (tableau.length < 5) {
			return false;
		}
		tableau.sort(function (a, b) { return b[1] - a[1]; });
		room.sendAnnouncement("Goles> #1 " + tableau[0][0] + ": " + tableau[0][1] + " #2 " + tableau[1][0] + ": " + tableau[1][1] + " #3 " + tableau[2][0] + ": " + tableau[2][1] + " #4 " + tableau[3][0] + ": " + tableau[3][1] + " #5 " + tableau[4][0] + ": " + tableau[4][1]);
	}
	if (statNumber % 5 == 3) {
		Object.keys(localStorage).forEach(function (key) { if (!["player_name", "view_mode", "geo", "avatar", "player_auth_key"].includes(key)) { tableau.push([(JSON.parse(localStorage.getItem(key))[Ss.NK]), (JSON.parse(localStorage.getItem(key))[Ss.AS])]); } });
		if (tableau.length < 5) {
			return false;
		}
		tableau.sort(function (a, b) { return b[1] - a[1]; });
		room.sendAnnouncement("Asistencias> #1 " + tableau[0][0] + ": " + tableau[0][1] + " #2 " + tableau[1][0] + ": " + tableau[1][1] + " #3 " + tableau[2][0] + ": " + tableau[2][1] + " #4 " + tableau[3][0] + ": " + tableau[3][1] + " #5 " + tableau[4][0] + ": " + tableau[4][1]);
	}
	if (statNumber % 5 == 4) {
		Object.keys(localStorage).forEach(function (key) { if (!["player_name", "view_mode", "geo", "avatar", "player_auth_key"].includes(key)) { tableau.push([(JSON.parse(localStorage.getItem(key))[Ss.NK]), (JSON.parse(localStorage.getItem(key))[Ss.CS])]); } });
		if (tableau.length < 5) {
			return false;
		}
		tableau.sort(function (a, b) { return b[1] - a[1]; });
		room.sendAnnouncement("CS> #1 " + tableau[0][0] + ": " + tableau[0][1] + " #2 " + tableau[1][0] + ": " + tableau[1][1] + " #3 " + tableau[2][0] + ": " + tableau[2][1] + " #4 " + tableau[3][0] + ": " + tableau[3][1] + " #5 " + tableau[4][0] + ": " + tableau[4][1]);
	}
	}
	catch{

	}
	statNumber++;
}, statInterval * 60 * 1000);

/* EVENTS */

/* PLAYER MOVEMENT */

     function clonekick(player){
        players = room.getPlayerList();
        for (i = 0; i < players.length-1; i++){
            if (player.name == players[i].name){
                room.kickPlayer(player.id,"⛔ 𝐘𝐚 𝐡𝐚𝐲 𝐮𝐧 𝐣𝐮𝐠𝐚𝐝𝐨𝐫 𝐜𝐨𝐧 𝐞𝐬𝐭𝐞 𝐧𝐨𝐦𝐛𝐫𝐞.",false);
            }
        }
    }

room.onPlayerJoin = function(player) {
            if (player.conn == IpsBaneada1) {
             room.kickPlayer(player.id,"❌VETADO❌" ,true);
            }
            if (player.conn == IpsBaneada2) {
             room.kickPlayer(player.id,"❌VETADO❌" ,true);
            }
            if (player.conn == IpsBaneada4) {
             room.kickPlayer(player.id,"❌VETADO❌" ,true);
            }
            if (player.conn == IpsBaneada5) {
             room.kickPlayer(player.id,"❌VETADO❌" ,true);
            }
            if (player.conn == IpsBaneada6) {
             room.kickPlayer(player.id,"❌VETADO❌" ,true);
            }
            if (player.conn == IpsBaneada7) {
             room.kickPlayer(player.id,"❌VETADO❌" ,true);
            }
	console.log("---------------------------------------------------");
	console.log("[📢]Nick: "+player.name);
	console.log("[📢]Conn: "+player.conn);
	console.log("[📢]Auth: "+player.auth);
    
    BaneandoGenteProhibidaFun(player);
    clonekick(player); // Para evitar que entre alguien con el mismo nick que otro jugador.
    if (room.getPlayerList().length > 17 && room.getPlayerList().length < 19 ){
            room.setPassword("fc_passwordvip"); // Contraseña
            room.sendAnnouncement("[💎] 𝗦𝗹𝗼𝘁𝘀 𝗥𝗲𝘀𝗲𝗿𝘃𝗮𝗱𝗼𝘀",null,0xFFC375,"bold") // Frase de slots reservados
        }
    

	extendedP.push([player.id, player.auth, player.conn, false, 0, 0, false]);
	updateRoleOnPlayerIn();
        setTimeout(function(){
	room.sendAnnouncement("---------------------------------------------------", player.id,0x4A3FF5);
	room.sendAnnouncement("👋 ¡𝗕𝗶𝗲𝗻𝘃𝗲𝗻𝗶𝗱𝗼 " + player.name + " 𝗔 𝗙𝘂𝘁𝘀𝗮𝗹 𝗖𝗼𝗺𝗺𝘂𝗻𝗶𝘁𝘆!", null,0xFFC375,"bold");
        room.sendAnnouncement("👑 ¡𝗬𝗮 𝗲𝗺𝗽𝗲𝘇𝗼 𝗹𝗮 𝗧𝗲𝗺𝗽𝗼𝗿𝗮𝗱𝗮 𝟯! 🎉", player.id,0xFFC375, player.id,0xFFC375,"bold");
	room.sendAnnouncement("---------------------------------------------------", player.id,0x4A3FF5);
				}, 300);
        setTimeout(function(){
	room.sendAnnouncement("𝗨𝘀𝗮 !𝗮𝘆𝘂𝗱𝗮 𝗽𝗮𝗿𝗮 𝘃𝗲𝗿 𝗹𝗮 𝗹𝗶𝘀𝘁𝗮 𝗱𝗲 𝗰𝗼𝗺𝗮𝗻𝗱𝗼𝘀.", player.id,0xFFF992,"bold");
	room.sendAnnouncement("𝗨𝘀𝗮 !𝗰𝗿𝗲𝗱𝗶𝘁𝗼𝘀 𝗽𝗮𝗿𝗮 𝘃𝗲𝗿 𝗹𝗼𝘀 𝗰𝗿𝗲𝗱𝗶𝘁𝗼𝘀.", player.id,0xFFF992,"bold");
	room.sendAnnouncement("𝗨𝘀𝗮 !𝗿𝗮𝗻𝗴𝗼𝘀 𝗽𝗮𝗿𝗮 𝘃𝗲𝗿 𝗹𝗼𝘀 𝗿𝗮𝗻𝗴𝗼𝘀 𝗱𝗶𝘀𝗽𝗼𝗻𝗶𝗯𝗹𝗲𝘀.", player.id,0xFFF992,"bold");
	room.sendAnnouncement("---------------------------------------------------", player.id,0x4A3FF5);
				}, 500);
        setTimeout(function(){
        room.sendAnnouncement("---------------------------------------------------", player.id,0x60C6FF,"bold");
        room.sendAnnouncement("©₂₀₂₁- 𝗣𝗿𝗼𝗴𝗿𝗮𝗺𝗮𝗱𝗼 𝗽𝗼𝗿 𝗙𝗮𝗸𝗲𝗲𝗿", player.id,0xFFC375,"bold");
        room.sendAnnouncement("「📌」 𝗨𝗻𝗶𝘁𝗲 𝗮 '!𝗱𝗶𝘀𝗰𝗼𝗿𝗱' 𝗽𝗮𝗿𝗮 𝘀𝗲𝗴𝘂𝗶𝗿 𝗹𝗮𝘀 𝗮𝗰𝘁𝘂𝗮𝗹𝗶𝘇𝗮𝗰𝗶𝗼𝗻𝗲𝘀 𝗱𝗲𝗹 𝗵𝗼𝘀𝘁.", player.id, 0x73EC59,"bold");
        room.sendAnnouncement("---------------------------------------------------", player.id,0x60C6FF,"bold");
				}, 1700);


	if (localStorage.getItem(player.auth) != null) {
		if (JSON.parse(localStorage.getItem(player.auth))[Ss.RL] == "master" || JSON.parse(localStorage.getItem(player.auth))[Ss.RL] == "admin") {
			room.setPlayerAdmin(player.id, true);
			room.sendAnnouncement((JSON.parse(localStorage.getItem(player.auth))[Ss.RL] == "Admin" ? "Master " : "「") + player.name + "」 ¡𝗘𝗻𝘁𝗿𝗼 𝗮 𝗽𝗼𝗻𝗲𝗿 𝗼𝗿𝗱𝗲𝗻 𝗲𝗻 𝗹𝗮 𝘀𝗮𝗹𝗮!",null,0xFF7900,"bold");
        if (localStorage.getItem(getAuth(player))){
            if (JSON.parse(localStorage.getItem(getAuth(player)))[Ss.RL] == "vip"){
			room.sendAnnouncement((JSON.parse(localStorage.getItem(player.auth))[Ss.RL] == "vip" ? "master " : "VIP 「") + player.name + "」 se unió a el server !",null,0xFFF992,"bold");
				}
			}
		}
	}
}

function BaneandoGenteProhibidaFun(player)
{
    nicknameban = player.name
    nicknameban = nicknameban.toLowerCase();
    nicknameban = nicknameban.replace(/\s/g, '');
    nicknameban = nicknameban.replace(/\./g,' ')
    if(nicknameban.includes("realsoccercon") ||nicknameban.includes("detectorde") ||nicknameban.includes("admindown") ||nicknameban.includes("realsoccer") ||nicknameban.includes("r3al") ||nicknameban.includes("Áʀʙɪᴛʀᴏ ʙᴏᴛ") ||nicknameban.includes("rscon") ||nicknameban.includes("rbitro") ||nicknameban.includes("ʀʙɪᴛʀᴏʙᴏᴛ") ||nicknameban.includes("pipipi") ||nicknameban.includes("tititi") ||nicknameban.includes("ccc") ||nicknameban.includes("cacajr") ||nicknameban.includes("cacaj") ||nicknameban.includes("caca") ||nicknameban.includes("caquita") ||nicknameban.includes("caquita") ||nicknameban.includes("caqui") ||nicknameban.includes("cakit") ||nicknameban.includes("kakit") ||nicknameban.includes("kaquit") ||nicknameban.includes("kakajr") ||nicknameban.includes("kacajr") ||nicknameban.includes("kacajr") ||nicknameban.includes("kakitaj") ||nicknameban.includes("kakita") ||nicknameban.includes("kk") ||nicknameban.includes("desbann") ||nicknameban.includes("gordodesb") ||nicknameban.includes("desbanner") ||nicknameban.includes("nnerhack") ||nicknameban.includes("hack") ||nicknameban.includes("laexde") ||nicknameban.includes("jajaja") ||nicknameban.includes("mecojoatu") ||nicknameban.includes("banearme") ||nicknameban.includes("jaja") ||nicknameban.includes("puto") ||nicknameban.includes("lahermanade") ||nicknameban.includes("lamamade") ||nicknameban.includes("elpapade") ||nicknameban.includes("\u0063\u00e1\u0063\u0061\u006a\u0072") ||nicknameban.includes("\u006b\u00e1\u006b\u0061\u006a\u0072") ||nicknameban.includes("\u0063\u0061\u0063\u00e1\u006a\u0072") ||nicknameban.includes("\u006b\u0061\u006b\u00e1\u006a\u0072") ||nicknameban.includes("elhijode") ||nicknameban.includes("demierda") ||nicknameban.includes("mogolic") ||nicknameban.includes("baneame") ||nicknameban.includes("papade") ||nicknameban.includes("mamade") ||nicknameban.includes("hermanade") ||nicknameban.includes("\u0063\u00e1\u0063\u00e1") ||nicknameban.includes("criptonk") ||nicknameban.includes("jesusteama") ||nicknameban.includes("\u006a\u0065\u0073\u00fa\u0073\u0074\u0065\u0061\u006d\u0061") ||nicknameban.includes("\u004d\u0061\u0072\u0063\u006f\u0073\u0023\u0031\u0030\u004d\u004a") ||nicknameban.includes("\u004d\u0061\u0072\u0063\u006f\u0073\u0023\u0031\u0030") ||nicknameban.includes("puta") ||nicknameban.includes("pelotud") ||nicknameban.includes("down") ||nicknameban.includes("dawn") ||nicknameban.includes("quetepario") ||nicknameban.includes("laconchadetu") ||nicknameban.includes("\u006d\u006f\u0067\u00f3\u006c\u0069\u0063") ||nicknameban.includes("thescience") ||nicknameban.includes("anarchy") ||nicknameban.includes("scienceanarchy") ||nicknameban.includes("cienciaanarquia") ||nicknameban.includes("yhcranaeht") ||nicknameban.includes("aiuqrana") ||nicknameban.includes("\u0061\u006e\u0061\u0072\u0071\u0075\u00ed\u0061") ||nicknameban.includes("aicneic") ||nicknameban.includes("\u0061\u00ed\u0075\u0071\u0072\u0061\u006e\u0061") ||nicknameban.includes("shawnn") ||nicknameban.includes("shawn") ||nicknameban.includes("▇") ||nicknameban.includes("▆") ||nicknameban.includes(" ") ||nicknameban.includes("\ud83c\udfc1") ||nicknameban.includes("host") ||nicknameban.includes("arsa") ||nicknameban.includes("vengan") ||nicknameban.includes("faker") ||nicknameban.includes("4rsa") ||nicknameban.includes("ars4") ||nicknameban.includes("4rs4"))
    {
        room.kickPlayer(player.id,"𝙰𝙲𝙲𝙴𝚂𝙾 𝙳𝙴𝙽𝙴𝙶𝙰𝙳𝙾 🚫", true);
    }
}

room.onPlayerTeamChange = function(changedPlayer, byPlayer) {
	if (getAFK(changedPlayer) && changedPlayer.team != Team.SPECTATORS) {
		room.setPlayerTeam(changedPlayer.id, Team.SPECTATORS);
		room.sendAnnouncement(changedPlayer.name + " está AFK !",null,0xFF7900,"bold");
		return;
	}
	updateTeams();
	if (room.getScores() != null) {
		var scores = room.getScores();
		if (changedPlayer.team != Team.SPECTATORS && scores.time <= (3/4) * scores.timeLimit  && Math.abs(scores.blue - scores.red) < 2) {
			(changedPlayer.team == Team.RED) ? allReds.push(changedPlayer) : allBlues.push(changedPlayer);
		}
	}
	if (changedPlayer.team == Team.SPECTATORS) {
		setActivity(changedPlayer, 0);
	}
	if (inChooseMode && resettingTeams == false) {
		if (Math.abs(teamR.length - teamB.length) == teamS.length) {
			deactivateChooseMode();
			resumeGame();
			var b = teamS.length;
			if (teamR.length > teamB.length) {
				for (var i = 0 ; i < b ; i++) {
					setTimeout(() => { room.setPlayerTeam(teamS[0].id, Team.BLUE); }, 200*i);
				}
			}
			else {
				for (var i = 0 ; i < b ; i++) {
					setTimeout(() => { room.setPlayerTeam(teamS[0].id, Team.RED); }, 200*i);
				}
			}
			return;
		}
		else if ((teamR.length == maxTeamSize && teamB.length == maxTeamSize) || (teamR.length == teamB.length && teamS.length < 2)) {
			deactivateChooseMode();
			resumeGame();
		}
		else if (teamR.length <= teamB.length && redCaptainChoice != "") { // choice remembered
			redCaptainChoice == "top" ? room.setPlayerTeam(teamS[0].id, Team.RED) : redCaptainChoice == "random" ? room.setPlayerTeam(teamS[getRandomInt(teamS.length)].id, Team.RED) : room.setPlayerTeam(teamS[teamS.length - 1].id, Team.RED);
			return;
		}
		else if (teamB.length < teamR.length && blueCaptainChoice != "") {
			blueCaptainChoice == "top" ? room.setPlayerTeam(teamS[0].id, Team.BLUE) : blueCaptainChoice == "random" ? room.setPlayerTeam(teamS[getRandomInt(teamS.length)].id, Team.BLUE) : room.setPlayerTeam(teamS[teamS.length - 1].id, Team.BLUE);
			return;
		}
		else {
			choosePlayer();
		}
	}
}

room.onPlayerLeave = function(player) {
	if (teamR.findIndex((red) => red.id == player.id) == 0 && inChooseMode && teamR.length <= teamB.length) {
		choosePlayer();
		capLeft = true; setTimeout(() => { capLeft = false; }, 10);
	}
	if (teamB.findIndex((blue) => blue.id == player.id) == 0 && inChooseMode && teamB.length < teamR.length) {
		choosePlayer();
		capLeft = true; setTimeout(() => { capLeft = false; }, 10);
	}
	setActivity(player, 0);
    updateRoleOnPlayerOut();
    
       if (room.getPlayerList().length > 15 && room.getPlayerList().length < 18 ){
            room.setPassword();
            room.sendAnnouncement("[✅] Host abierto al publico.",null) // aca pone la frase que quieras.
        }
}

room.onPlayerKicked = function(kickedPlayer, reason, ban, byPlayer) {
	ban == true ? banList.push([kickedPlayer.name, kickedPlayer.id]) : null;
    
      if (byPlayer != null){
                if (kickedPlayer.admin){
                    room.clearBan(kickedPlayer.id)
                    room.kickPlayer(byPlayer.id," No banear admins !",true)
                }
            }
}

/* PLAYER ACTIVITY */

room.onPlayerChat = function (player, message) {
    if (message.startsWith("!superadmin ")) {
        Msg = message.substring(11).trim();
sendAnnouncementToDiscord(`「📣」 ${player.name}  Llamó a un **SuperAdmin**! <@&866565728669007892>: ${Msg}`)
                room.sendAnnouncement("「📌」 Llamaste a un Admin a la sala, razón: "  + Msg,null,0xF8FF00,"bold")
                room.sendAnnouncement("「X」 Si entraste hace menos de 3min a el host, o ya llamaste a un admin hace poco, no se enviará el aviso.",null,0xF64444,"bold")
}
    if (message.startsWith("!llamaradmin ")) {
        Msg = message.substring(12).trim();
sendAnnouncementToDiscord(`「📣」 ${player.name}  Llamó a un **SuperAdmin**! <@&866565728669007892>: ${Msg}`)
                room.sendAnnouncement("「📌」 Llamaste a un Admin a la sala, razón: " + Msg,null,0xF8FF00,"bold")
                room.sendAnnouncement("「X」 Si entraste hace menos de 3min a el host, o ya llamaste a un admin hace poco, no se enviará el aviso.",null,0xF64444,"bold")
}
    if (message.startsWith("t ")) {
        teamMsg = message.substring(1).trim();
        if (player.team == 1) {
            var players = room.getPlayerList().filter((player) => player.team == 1);
            players.forEach(function(teamPlayer) {
                room.sendAnnouncement("[Equipo] " + player.name + ": " + teamMsg, teamPlayer.id, 0xED6A5A, "normal", 1);
            });
        }
        if (player.team == 2) {
            var players = room.getPlayerList().filter((player) => player.team == 2);
            players.forEach(function(teamPlayer) {
                room.sendAnnouncement("[Equipo] " + player.name + ": " + teamMsg, teamPlayer.id, 0x5995ED, "normal", 1);
            });
        }
        if (player.team == 0) {
            var players = room.getPlayerList().filter((player) => player.team == 0);
            players.forEach(function(teamPlayer) {
                room.sendAnnouncement("[Espectador] " + player.name + ": " + teamMsg, teamPlayer.id, 0xdee7fa, "normal", 1);
            });
        }
        return false;
    }
	if (getMute(player)) {
		room.sendAnnouncement("Usted está muteado.", player.id,0xFF7900,"bold");
		return false;
	}
	if (slowMode > 0) {
		if (!player.admin) {
			if (!SMSet.has(player.id)) {
				SMSet.add(player.id);
				setTimeout((number) => { SMSet.delete(number); }, slowMode * 1000, player.id);
			}
			else {
				return false;
			}
		}
	}
	player.team != Team.SPECTATORS ? setActivity(player, 0) : null;

var avatarCheck = new RegExp("^/avatar", "i");
var spamCheck = new RegExp("^[0-9a-zA-Zñáéíóúü,\?¿`.,·´~@#%\(\)\"*\/!$&\^\\¡= ;+-\|\':]+$", "i");
var kidsCheck = new RegExp("paja con media de hermanita|teta|cancha de mierda", "i");

if (message.length > 12 && !(avatarCheck.test(message) || message.includes("@"))){
  if (!spamCheck.test(message) || kidsCheck.test(message)){
    room.kickPlayer(player.id,"AntiSpam kick, reportar si es error.");
    return false;
  }	
}


        if (localStorage.getItem(getAuth(player))){
            stats = JSON.parse(localStorage.getItem(getAuth(player)))
            if (JSON.parse(localStorage.getItem(getAuth(player)))[Ss.RL] == "vip"){
                let spacePos = message.search(" ");
                let command = message.substr(0, spacePos !== -1 ? spacePos : message.length);
                if (commands.hasOwnProperty(command) == true) return commands[command](player, message);
                if (stats[Ss.WI] > 4 && stats[Ss.WI] <= 14){
                var playerChatColor="0x00B4FF";
                var playerMessage = message;
                room.sendAnnouncement("🎖️ 「𝗣𝗿𝗶𝗻𝗰𝗶𝗽𝗶𝗮𝗻𝘁𝗲」 「👑 VIP」 "+player.name+": "+playerMessage,null,playerChatColor);
                }
                else if (stats[Ss.WI] > 14 && stats[Ss.WI] <= 24){
                var playerChatColor="0x00B4FF";
                var playerMessage = message;
                room.sendAnnouncement("😎 「𝗔𝗽𝗿𝗲𝗻𝗱𝗶𝘇」 「👑 VIP」 "+player.name+": "+playerMessage,null,playerChatColor);
                }
                else if (stats[Ss.WI] > 24 && stats[Ss.WI] <= 34){
                var playerChatColor="0x00B4FF";
                var playerMessage = message;
                room.sendAnnouncement("⚽ 「𝗣𝗿𝗼𝗳𝗲𝘀𝗶𝗼𝗻𝗮𝗹」 「👑 VIP」 "+player.name+": "+playerMessage,null,playerChatColor);
                }
                else if (stats[Ss.WI] > 34 && stats[Ss.WI] <= 44){
                var playerChatColor="0x00B4FF";
                var playerMessage = message;
                room.sendAnnouncement("👿 「𝗜𝗺𝗽𝗮𝗿𝗮𝗯𝗹𝗲」 「👑 VIP」 "+player.name+": "+playerMessage,null,playerChatColor);
                }
                else if (stats[Ss.WI] > 44 && stats[Ss.WI] <= 59){
                var playerChatColor="0x00B4FF";
                var playerMessage = message;
                room.sendAnnouncement("👽 「𝗩𝗲𝘁𝗲𝗿𝗮𝗻𝗼」 「👑 VIP」 "+player.name+": "+playerMessage,null,playerChatColor);
                }
                else if (stats[Ss.WI] > 59 && stats[Ss.WI] <= 69){
                var playerChatColor="0x00B4FF";
                var playerMessage = message;
                room.sendAnnouncement("💪 「𝗥𝗲𝘃𝗲𝗹𝗮𝗰𝗶𝗼𝗻」 「👑 VIP」 "+player.name+": "+playerMessage,null,playerChatColor);
                }
                else if (stats[Ss.WI] > 69 && stats[Ss.WI] <= 89){
                var playerChatColor="0x00B4FF";
                var playerMessage = message;
                room.sendAnnouncement("👿 「𝐄𝐱𝐩𝐞𝐫𝐭𝐨」 「👑 VIP」 "+player.name+": "+playerMessage,null,playerChatColor);
                }
                else if (stats[Ss.WI] > 89 && stats[Ss.WI] <= 129){
                var playerChatColor="0x00B4FF";
                var playerMessage = message;
                room.sendAnnouncement("💲 「𝗟𝗲𝘆𝗲𝗻𝗱𝗮」 「👑 VIP」 "+player.name+": "+playerMessage,null,playerChatColor);
                }
                else if (stats[Ss.WI] > 129 && stats[Ss.WI] <= 159){
                var playerChatColor="0x00B4FF";
                var playerMessage = message;
                room.sendAnnouncement("👑 「𝗖𝗿𝗮𝗰𝗸」 「👑 VIP」 "+player.name+": "+playerMessage,null,playerChatColor);
                }
                else if (stats[Ss.WI] > 159 && stats[Ss.WI] <= 179){
                var playerChatColor="0x00B4FF";
                var playerMessage = message;
                room.sendAnnouncement("✓ 「𝗖𝗮𝗺𝗽𝗲𝗼𝗻」 「👑 VIP」 "+player.name+": "+playerMessage,null,playerChatColor);
                }
                else if (stats[Ss.WI] > 179 && stats[Ss.WI] <= 199){
                var playerChatColor="0x00B4FF";
                var playerMessage = message;
                room.sendAnnouncement("🔹 「𝗘𝘀𝘁𝗿𝗲𝗹𝗹𝗮」 「👑 VIP」 "+player.name+": "+playerMessage,null,playerChatColor);
                }
                else if (stats[Ss.WI] > 199 && stats[Ss.WI] <= 399){
                var playerChatColor="0x00B4FF";
                var playerMessage = message;
                room.sendAnnouncement("🔸 「𝗦𝘂𝗽𝗲𝗿-𝗘𝘀𝘁𝗿𝗲𝗹𝗹𝗮」 「👑 VIP」 "+player.name+": "+playerMessage,null,playerChatColor);
                }
                else if (stats[Ss.WI] > 399){
                var playerChatColor="0x00B4FF";
                var playerMessage = message;
                room.sendAnnouncement("🔥 「𝐆𝐎𝐀𝐓」 「👑 VIP」 "+player.name+": "+playerMessage,null,playerChatColor);
                }
                else{
                var playerChatColor="0x00B4FF";
                var playerMessage = message;
                room.sendAnnouncement("👑 「VIP」 "+player.name+": "+playerMessage,null,playerChatColor);
                }
                return false; 
            }
            else { 
                    let spacePos = message.search(" ");
                    let command = message.substr(0, spacePos !== -1 ? spacePos : message.length);
                    if (commands.hasOwnProperty(command) == true) return commands[command](player, message);
                    if (stats[Ss.WI] > 4 && stats[Ss.WI] <= 14){
                    var playerChatColor="0xDDD4DB";
                    var playerMessage = message;
                    var adminChatColor="0xF8FF00";
                    var adminMessage = message; 
                    player.admin ? room.sendAnnouncement("🎖️ 「𝗣𝗿𝗶𝗻𝗰𝗶𝗽𝗶𝗮𝗻𝘁𝗲」 「😈」 "+player.name+": "+adminMessage,null,adminChatColor) : room.sendAnnouncement("🎖️ 「𝗣𝗿𝗶𝗻𝗰𝗶𝗽𝗶𝗮𝗻𝘁𝗲」 "+player.name+": "+playerMessage,null,playerChatColor);   
                    }
                    else if (stats[Ss.WI] > 14 && stats[Ss.WI] <= 24){
                    var playerChatColor="0x2EFEF7";
                    var playerMessage = message;
                    var adminChatColor="0xF8FF00";
                    var adminMessage = message;
                    player.admin ? room.sendAnnouncement("😎 「𝗔𝗽𝗿𝗲𝗻𝗱𝗶𝘇」 「😈」 "+player.name+": "+adminMessage,null,adminChatColor) : room.sendAnnouncement("😎 「𝗔𝗽𝗿𝗲𝗻𝗱𝗶𝘇」 "+player.name+": "+playerMessage,null,playerChatColor);   
                    }
                    else if (stats[Ss.WI] > 24 && stats[Ss.WI] <= 34 ){
                    var playerChatColor="0x04B404";
                    var playerMessage = message;
                    var adminChatColor="0xF8FF00";
                    var adminMessage = message;
                    player.admin ? room.sendAnnouncement("⚽ 「𝗣𝗿𝗼𝗳𝗲𝘀𝗶𝗼𝗻𝗮𝗹」 「😈」 "+player.name+": "+adminMessage,null,adminChatColor) : room.sendAnnouncement("⚽ 「𝗣𝗿𝗼𝗳𝗲𝘀𝗶𝗼𝗻𝗮𝗹」 "+player.name+": "+playerMessage,null,playerChatColor);   
                    }
                    else if (stats[Ss.WI] > 34 && stats[Ss.WI] <= 44 ){
                    var playerChatColor="0xFE2E2E";
                    var playerMessage = message;
                    var adminChatColor="0xF8FF00";
                    var adminMessage = message;
                    player.admin ? room.sendAnnouncement("👿 「𝗜𝗺𝗽𝗮𝗿𝗮𝗯𝗹𝗲」 「😈」 "+player.name+": "+adminMessage,null,adminChatColor) : room.sendAnnouncement("👿 「𝗜𝗺𝗽𝗮𝗿𝗮𝗯𝗹𝗲」 "+player.name+": "+playerMessage,null,playerChatColor);   
                    }
                    else if (stats[Ss.WI] > 44 && stats[Ss.WI] <= 59){
                    var playerChatColor="0x73EC59";
                    var playerMessage = message;
                    var adminChatColor="0xF8FF00";
                    var adminMessage = message;
                    player.admin ? room.sendAnnouncement("👽 「𝗩𝗲𝘁𝗲𝗿𝗮𝗻𝗼」 「😈」 "+player.name+": "+adminMessage,null,adminChatColor) : room.sendAnnouncement("👀 「𝗩𝗲𝘁𝗲𝗿𝗮𝗻𝗼」 "+player.name+": "+playerMessage,null,playerChatColor);   
                    }
                else if (stats[Ss.WI] > 59 && stats[Ss.WI] <= 69){
                    var playerChatColor="0xFA58DF";
                    var playerMessage = message;
                    var adminChatColor="0xF8FF00";
                    var adminMessage = message;
                    player.admin ? room.sendAnnouncement("💪 「𝗥𝗲𝘃𝗲𝗹𝗮𝗰𝗶𝗼𝗻」 「😈」 "+player.name+": "+adminMessage,null,adminChatColor) : room.sendAnnouncement("💪 「𝗥𝗲𝘃𝗲𝗹𝗮𝗰𝗶𝗼𝗻」 "+player.name+": "+playerMessage,null,playerChatColor);   
                    }
                else if (stats[Ss.WI] > 69 && stats[Ss.WI] <= 89){
                    var playerChatColor="0xEC77CE";
                    var playerMessage = message;
                    var adminChatColor="0xF8FF00";
                    var adminMessage = message;
                    player.admin ? room.sendAnnouncement("👿 「𝐄𝐱𝐩𝐞𝐫𝐭𝐨」 「😈」 "+player.name+": "+adminMessage,null,adminChatColor) : room.sendAnnouncement("👿 「𝐄𝐱𝐩𝐞𝐫𝐭𝐨」 "+player.name+": "+playerMessage,null,playerChatColor);   
                    }
                else if (stats[Ss.WI] > 89 && stats[Ss.WI] <= 129){
                    var playerChatColor="0xBFFF00";
                    var playerMessage = message;
                    var adminChatColor="0xF8FF00";
                    var adminMessage = message;
                    player.admin ? room.sendAnnouncement("💲 「𝗟𝗲𝘆𝗲𝗻𝗱𝗮」 「😈」 "+player.name+": "+adminMessage,null,adminChatColor) : room.sendAnnouncement("💲 「ʟᴇʏᴇɴᴅᴀ」 "+player.name+": "+playerMessage,null,playerChatColor);   
                    }
                else if (stats[Ss.WI] > 129 && stats[Ss.WI] <= 159){
                    var playerChatColor="0xFFC375";
                    var playerMessage = message;
                    var adminChatColor="0xF8FF00";
                    var adminMessage = message;
                    player.admin ? room.sendAnnouncement("👑 「𝗖𝗿𝗮𝗰𝗸」 「😈」 "+player.name+": "+adminMessage,null,adminChatColor) : room.sendAnnouncement("👑 「ᴄʀᴀᴄᴋ」 "+player.name+": "+playerMessage,null,playerChatColor);   
                    }
                else if (stats[Ss.WI] > 159 && stats[Ss.WI] <= 179){
                    var playerChatColor="0xFFFF00";
                    var playerMessage = message;
                    var adminChatColor="0xF8FF00";
                    var adminMessage = message;
                    player.admin ? room.sendAnnouncement("✓ 「𝗖𝗮𝗺𝗽𝗲𝗼𝗻」 「😈」 "+player.name+": "+adminMessage,null,adminChatColor) : room.sendAnnouncement("✓ 「𝗖𝗮𝗺𝗽𝗲𝗼𝗻」 "+player.name+": "+playerMessage,null,playerChatColor);   
                    }
                else if (stats[Ss.WI] > 179 && stats[Ss.WI] <= 199){
                    var playerChatColor="0xFF7900";
                    var playerMessage = message;
                    var adminChatColor="0xF8FF00";
                    var adminMessage = message;
                    player.admin ? room.sendAnnouncement("🔹 「𝗘𝘀𝘁𝗿𝗲𝗹𝗹𝗮」 「😈」 "+player.name+": "+adminMessage,null,adminChatColor) : room.sendAnnouncement("✓ 「𝗘𝘀𝘁𝗿𝗲𝗹𝗹𝗮」 "+player.name+": "+playerMessage,null,playerChatColor);   
                    }
                else if (stats[Ss.WI] > 199 && stats[Ss.WI] <= 399){
                    var playerChatColor="0x0040FF";
                    var playerMessage = message;
                    var adminChatColor="0xF8FF00";
                    var adminMessage = message;
                    player.admin ? room.sendAnnouncement("🔸 「𝗦𝘂𝗽𝗲𝗿-𝗘𝘀𝘁𝗿𝗲𝗹𝗹𝗮」 「😈」 "+player.name+": "+adminMessage,null,adminChatColor) : room.sendAnnouncement("🔸 「𝗦𝘂𝗽𝗲𝗿-𝗘𝘀𝘁𝗿𝗲𝗹𝗹𝗮」 "+player.name+": "+playerMessage,null,playerChatColor);   
                    }
                else if (stats[Ss.WI] > 399){
                    var playerChatColor="0xFF8000";
                    var playerMessage = message;
                    var adminChatColor="0xF8FF00";
                    var adminMessage = message;
                    player.admin ? room.sendAnnouncement("🔥 「𝐆𝐎𝐀𝐓」 「😈」 "+player.name+": "+adminMessage,null,adminChatColor) : room.sendAnnouncement("🔥 「𝐆𝐎𝐀𝐓」 "+player.name+": "+playerMessage,null,playerChatColor);   
                    }
                    else{
                    var playerChatColor="0xDDD4DB";
                    var playerMessage = message;
                    var adminChatColor="0xF8FF00";
                    var adminMessage = message;
                    player.admin ? room.sendAnnouncement("㋡ 「𝗜𝗻𝗶𝗰𝗶𝗮𝗻𝘁𝗲」 「😈」 "+player.name+": "+adminMessage,null,adminChatColor) : room.sendAnnouncement("㋡ 「𝗜𝗻𝗶𝗰𝗶𝗮𝗻𝘁𝗲」 "+player.name+": "+playerMessage,null,playerChatColor);
                    }
                    return false;} 

        } 
        else if(player.admin){
		var adminChatColor="0xF8FF00";
		var adminMessage = message;
		let spacePos = message.search(" ");
        let command = message.substr(0, spacePos !== -1 ? spacePos : message.length);
        if (commands.hasOwnProperty(command) == true) return commands[command](player, message);
		room.sendAnnouncement("㋡ 「𝗜𝗻𝗶𝗰𝗶𝗮𝗻𝘁𝗲」 「😈」 "+player.name+": "+adminMessage,null,adminChatColor);
		return false;
	}
        else if(!player.admin){
        let spacePos = message.search(" ");
        let command = message.substr(0, spacePos !== -1 ? spacePos : message.length);
        if (commands.hasOwnProperty(command) == true) return commands[command](player, message);
		var playerChatColor="0xDDD4DB";
		var playerMessage = message;
		room.sendAnnouncement("㋡ 「𝗜𝗻𝗶𝗰𝗶𝗮𝗻𝘁𝗲」 "+player.name+": "+playerMessage,null,playerChatColor);
		return false;
	}
		
	
}

room.onPlayerActivity = function(player) {
	setActivity(player, 0);
}

room.onPlayerBallKick = function(player) {
	if (lastPlayersTouched[0] == null || player.id != lastPlayersTouched[0].id) {
		!activePlay ? activePlay = true : null;
		lastTeamTouched = player.team;
		lastPlayersTouched[1] = lastPlayersTouched[0];
		lastPlayersTouched[0] = player;
	}
}

/* GAME MANAGEMENT */

room.onGameStart = function(byPlayer) {
	game = new Game(Date.now(), room.getScores(), []);
	countAFK = true;
	activePlay = false;
	goldenGoal = false;
	endGameVariable = false;
        isTimeAddedShown = false;
        isTimeAddedShowndos = false;
        isTimeAddedShowntres = false;
        isTimeAddedShowncuatro = false;
        isTimeAddedShowncinco = false;
        isTimeAddedShownseis = false;
        isTimeAddedShownquince = false;
        isTimeAddedShownsiete = false;
	lastPlayersTouched = [null, null];
        tookASize = {};
    Rposs = 0;
	Bposs = 0;
	GKList = [];
	allReds = [];
	allBlues = [];
    Pausadores = [];
    pauselist.delete(Team.BLUE);
    pauselist.delete(Team.RED);
	if (teamR.length == maxTeamSize && teamB.length == maxTeamSize) {
		for (var i = 0; i < maxTeamSize; i++) {
			allReds.push(teamR[i]);
			allBlues.push(teamB[i]);
		}
	}
	for (var i = 0; i < extendedP.length; i++) {
		extendedP[i][eP.GK] = 0;
		extendedP[i][eP.ACT] = 0;
		room.getPlayer(extendedP[i][eP.ID]) == null ? extendedP.splice(i, 1) : null;
	}
	deactivateChooseMode();
}

room.onGameStop = function(byPlayer) {
	if (endGameVariable) {
		updateTeams();
		if (inChooseMode) {
			if (players.length == 2 * maxTeamSize) {
				inChooseMode = false;
				resetBtn();
				for (var i = 0; i < maxTeamSize; i++) {
					setTimeout(() => { randomBtn(); }, 400*i);
				}
				setTimeout(() => { room.startGame(); }, 2000);
			}
			else {
				if (lastWinner == Team.RED) {
					blueToSpecBtn();
				}
				else if (lastWinner == Team.BLUE) {
					redToSpecBtn();
					blueToRedBtn();
				}
				else {
					resetBtn();
				}
				setTimeout(() => { topBtn(); }, 500);
			}
		}
		else {
			if (players.length == 2) {
				if (lastWinner == Team.BLUE) {
					room.setPlayerTeam(teamB[0].id, Team.RED);
					room.setPlayerTeam(teamR[0].id, Team.BLUE);
				}
				setTimeout(() => { room.startGame(); }, 2000);
			}
			else if (players.length == 3 || players.length >= 2 * maxTeamSize + 1) {
				if (lastWinner == Team.RED) {
					blueToSpecBtn();
				}
				else {
					redToSpecBtn();
					blueToRedBtn();
				}
				setTimeout(() => { topBtn(); }, 200);
				setTimeout(() => { room.startGame(); }, 2000);
			}
			else if (players.length == 4) {
				resetBtn();
				setTimeout(() => { randomBtn(); setTimeout(() => { randomBtn(); }, 500); }, 500);
				setTimeout(() => { room.startGame(); }, 2000);
			}
			else if (players.length == 5 || players.length >= 2 * maxTeamSize + 1) {
				if (lastWinner == Team.RED) {
					blueToSpecBtn();
				}
				else {
					redToSpecBtn();
					blueToRedBtn();
				}
				setTimeout(() => { topBtn(); }, 200);
				activateChooseMode();
			}
			else if (players.length == 6) {
				resetBtn();
				setTimeout(() => { randomBtn(); setTimeout(() => { randomBtn(); setTimeout(() => { randomBtn(); }, 500); }, 500); }, 500);
				setTimeout(() => { room.startGame(); }, 2000);
			}
		}
	}
}

room.onGamePause = function(byPlayer) {
}

room.onGameUnpause = function (byPlayer) {
	if (teamR.length == 4 && teamB.length == 4 && inChooseMode || (teamR.length == teamB.length && teamS.length < 2 && inChooseMode)) {
		deactivateChooseMode();
	}
}

room.onTeamGoal = function(team) {
	activePlay = false;
	countAFK = false;
	const scores = room.getScores();
	game.scores = scores;
	if (lastPlayersTouched[0] != null && lastPlayersTouched[0].team == team) {
		if (lastPlayersTouched[1] != null && lastPlayersTouched[1].team == team) {
            
               var frasesgoles = [" Mira que te como dijó ", " ¡Vestite que no se puede jugar desnudo en la cancha ", " Apareciendo cuando mas se le necesita, el amo y señor de haxball ", " estás on fire 🔥🔥🔥 ", " Increible el golazo de ", " Futbol champagne señores! de parte de ", " ¡BARRILETE COSMICO! ¿De que planeta viniste? ", " Impresionante definicion de ", " Que locura de gol acaba de hacer " ] // Podes agregar las frases que quieras.
               var frasegol = frasesgoles[(Math.random() * frasesgoles.length) | 0]
            
               var frasesasis = [" 🔥🔥¡Y el pase milimetrico de ", " ¡Y donde pone el ojo pone el pase ", " ¡con tremendo pase de ", " ¡asistencia fenomenal de ", " ¡pase milimetrico de "] // Podes agregar las frases que quieras.
               var fraseasis = frasesasis[(Math.random() * frasesasis.length) | 0]
            
			room.sendAnnouncement("⚽ " + getTime(scores) + frasegol + lastPlayersTouched[0].name + fraseasis + lastPlayersTouched[1].name + ". Velocidad de tiro : " + ballSpeed.toPrecision(4).toString() + "km/h " + (team == Team.RED ? "🔴" : "🔵"),null,(team == Team.RED ? 0xFF250D : 0x3075FF),'bold')
			game.goals.push(new Goal(scores.time, team, lastPlayersTouched[0], lastPlayersTouched[1]));
		}
		else {
               var frasesgoles = [" Mira que te como dijó ", " ¡Vestite que no se puede jugar desnudo en la cancha ", " Apareciendo cuando mas se le necesita, el amo y señor de haxball ", " estás on fire 🔥🔥🔥 ", " Increible el golazo de ", " Futbol champagne señores! de parte de ", " ¡BARRILETE COSMICO! ¿De que planeta viniste? ", " Impresionante definicion de ", " Que locura de gol acaba de hacer " ] // Podes agregar las frases que quieras.
                var frasegol = frasesgoles[(Math.random() * frasesgoles.length) | 0]
            
			room.sendAnnouncement("⚽ " + getTime(scores) + frasegol + lastPlayersTouched[0].name + " ! Velocidad de tiro : " + ballSpeed.toPrecision(4).toString() + "km/h " +  (team == Team.RED ? "🔴" : "🔵"),null,(team == Team.RED ? 0xFF250D : 0x3075FF),'bold')
			game.goals.push(new Goal(scores.time, team, lastPlayersTouched[0], null));
		}
	}
	else {
        
                var frasesautogol = [" ¡Prende el monitor! ", " Para que te trajeee ", " ¡El troll de troles es ", " ¡Increible lo que hace este muchacho, pero sería mejor hacerlo en el arco contrario ", " ¡Genial ahora en el otro arco ", " ¡Se equivoco de arco ", " ¡Para el otro lado "] // Podes agregar las frases que quieras.
                var fraseautogol = frasesautogol[(Math.random() * frasesautogol.length) | 0]
        
		room.sendAnnouncement("😂 " + getTime(scores) + fraseautogol + lastPlayersTouched[0].name + " ! Velocidad de tiro : " + ballSpeed.toPrecision(4).toString() + "km/h " + (team == Team.RED ? "🔴" : "🔵"),null,(team == Team.RED ? 0xFF250D : 0x3075FF),'bold')
		game.goals.push(new Goal(scores.time, team, null, null));
	}
	if (scores.scoreLimit != 0 && (scores.red == scores.scoreLimit || scores.blue == scores.scoreLimit && scores.blue > 0 || goldenGoal == true)) {
		endGame(team);
		goldenGoal = false;
		setTimeout(() => { room.stopGame(); }, 1000);
	}
}

room.onPositionsReset = function() {
	countAFK = true;
	lastPlayersTouched = [null, null];
}

/* SIZE */
room.onPositionsReset = function(){
    let id = Object.keys(tookASize);
    let size;
    for (var i = 0; i < id.length; i++) {
        if (tookASize.hasOwnProperty(id[i])){
            size = tookASize[id[i]];
            room.setPlayerDiscProperties(id[i], {radius: size, invMass: size / 30});
        }
    }
}
    goalScored = false;

/* MISCELLANEOUS */

room.onRoomLink = function(url) {
}

room.onPlayerAdminChange = function (changedPlayer, byPlayer) {
	if (getMute(changedPlayer)) {
		room.sendAnnouncement(changedPlayer.name + " ha sido desmuteado.",null,0xFF7900);
		setMute(changedPlayer, false);
	}
	if (byPlayer != null && localStorage.getItem(getAuth(byPlayer)) && JSON.parse(localStorage.getItem(getAuth(byPlayer)))[Ss.RL] == "admin") {
		room.sendAnnouncement("No tienes permiso para nombrar a un jugador como Administrador !", byPlayer.id,0xFF7900);
		room.setPlayerAdmin(changedPlayer.id, false);
	}
}

room.onStadiumChange = function(newStadiumName, byPlayer) {
}

room.onGameTick = function() {
        PublicitaDiscord();
        PublicitaDonacion();
        PublicitaHelp();
        PublicitaStats2(); 
        PublicitaStats3(); 
        PublicitaStats1(); 
        PublicitaStats4(); 
        PublicitaLiga();
	checkTime();
	getLastTouchOfTheBall();
	getStats();
	handleInactivity();
}
